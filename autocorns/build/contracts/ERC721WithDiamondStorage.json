{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "genesisEggsMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getDNA",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "license",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "presaleHatchingUnlockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "presaleUnlockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint8",
          "name": "_class",
          "type": "uint8"
        }
      ],
      "name": "setDNAForGenesisTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
    "12": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/IERC165.sol",
    "13": "/home/neeraj/.brownie/packages/smartcontractkit/chainlink@1.0.1/contracts/src/v0.8/interfaces/LinkTokenInterface.sol",
    "18": "contracts/facets/erc721/ERC721WithDiamondStorage.sol",
    "2": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721.sol",
    "21": "contracts/libraries/LibBin.sol",
    "22": "contracts/libraries/LibDiamond.sol",
    "23": "contracts/libraries/LibHatching.sol",
    "24": "contracts/libraries/LibIdempotence.sol",
    "25": "contracts/libraries/LibRNG.sol",
    "27": "contracts/libraries/LibUnicornDNA.sol",
    "29": "contracts/libraries/LibUtil.sol",
    "3": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721Receiver.sol",
    "4": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
    "5": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "6": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
    "7": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "8": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Strings.sol"
  },
  "ast": {
    "absolutePath": "contracts/facets/erc721/ERC721WithDiamondStorage.sol",
    "exportedSymbols": {
      "Address": [
        12864
      ],
      "Context": [
        13329
      ],
      "ERC165": [
        13556
      ],
      "ERC721WithDiamondStorage": [
        12106
      ],
      "IERC165": [
        3847
      ],
      "IERC721": [
        407
      ],
      "IERC721Enumerable": [
        13280
      ],
      "IERC721Metadata": [
        13307
      ],
      "IERC721Receiver": [
        13249
      ],
      "LibDiamond": [
        1805
      ],
      "LibUnicornDNA": [
        3835
      ],
      "Strings": [
        13532
      ]
    },
    "id": 12107,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10628,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:18"
      },
      {
        "absolutePath": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "id": 10629,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12107,
        "sourceUnit": 408,
        "src": "63:68:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 10630,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12107,
        "sourceUnit": 13250,
        "src": "132:76:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "@openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "id": 10631,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12107,
        "sourceUnit": 13308,
        "src": "209:87:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "file": "@openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "id": 10632,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12107,
        "sourceUnit": 13281,
        "src": "297:89:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Address.sol",
        "file": "@openzeppelin-contracts/contracts/utils/Address.sol",
        "id": 10633,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12107,
        "sourceUnit": 12865,
        "src": "387:61:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
        "file": "@openzeppelin-contracts/contracts/utils/Context.sol",
        "id": 10634,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12107,
        "sourceUnit": 13330,
        "src": "449:61:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Strings.sol",
        "file": "@openzeppelin-contracts/contracts/utils/Strings.sol",
        "id": 10635,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12107,
        "sourceUnit": 13533,
        "src": "511:61:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/neeraj/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "id": 10636,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12107,
        "sourceUnit": 13557,
        "src": "573:74:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/LibDiamond.sol",
        "file": "../../libraries/LibDiamond.sol",
        "id": 10638,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12107,
        "sourceUnit": 1806,
        "src": "649:58:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 10637,
              "name": "LibDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "657:10:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/LibUnicornDNA.sol",
        "file": "../../libraries/LibUnicornDNA.sol",
        "id": 10640,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12107,
        "sourceUnit": 3836,
        "src": "708:64:18",
        "symbolAliases": [
          {
            "foreign": {
              "id": 10639,
              "name": "LibUnicornDNA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "716:13:18",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10641,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13329,
              "src": "815:7:18"
            },
            "id": 10642,
            "nodeType": "InheritanceSpecifier",
            "src": "815:7:18"
          },
          {
            "baseName": {
              "id": 10643,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13556,
              "src": "828:6:18"
            },
            "id": 10644,
            "nodeType": "InheritanceSpecifier",
            "src": "828:6:18"
          },
          {
            "baseName": {
              "id": 10645,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 407,
              "src": "840:7:18"
            },
            "id": 10646,
            "nodeType": "InheritanceSpecifier",
            "src": "840:7:18"
          },
          {
            "baseName": {
              "id": 10647,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13307,
              "src": "853:15:18"
            },
            "id": 10648,
            "nodeType": "InheritanceSpecifier",
            "src": "853:15:18"
          },
          {
            "baseName": {
              "id": 10649,
              "name": "IERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13280,
              "src": "874:17:18"
            },
            "id": 10650,
            "nodeType": "InheritanceSpecifier",
            "src": "874:17:18"
          }
        ],
        "canonicalName": "ERC721WithDiamondStorage",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 12106,
        "linearizedBaseContracts": [
          12106,
          13280,
          13307,
          407,
          13556,
          3847,
          13329
        ],
        "name": "ERC721WithDiamondStorage",
        "nameLocation": "783:24:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10653,
            "libraryName": {
              "id": 10651,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12864,
              "src": "904:7:18"
            },
            "nodeType": "UsingForDirective",
            "src": "898:26:18",
            "typeName": {
              "id": 10652,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "916:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 10656,
            "libraryName": {
              "id": 10654,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13532,
              "src": "935:7:18"
            },
            "nodeType": "UsingForDirective",
            "src": "929:26:18",
            "typeName": {
              "id": 10655,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "947:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "baseFunctions": [
              3846,
              13555
            ],
            "body": {
              "id": 10693,
              "nodeType": "Block",
              "src": "1174:258:18",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 10691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 10686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 10672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10667,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10659,
                            "src": "1203:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10669,
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 407,
                                  "src": "1223:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$407_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$407_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                ],
                                "id": 10668,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "1218:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 10670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1218:13:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$407",
                                "typeString": "type(contract IERC721)"
                              }
                            },
                            "id": 10671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "1218:25:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "1203:40:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 10678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10673,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10659,
                            "src": "1259:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 10675,
                                  "name": "IERC721Metadata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13307,
                                  "src": "1279:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$13307_$",
                                    "typeString": "type(contract IERC721Metadata)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$13307_$",
                                    "typeString": "type(contract IERC721Metadata)"
                                  }
                                ],
                                "id": 10674,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "1274:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 10676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1274:21:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$13307",
                                "typeString": "type(contract IERC721Metadata)"
                              }
                            },
                            "id": 10677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "1274:33:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "1259:48:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1203:104:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 10685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10680,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10659,
                          "src": "1323:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 10682,
                                "name": "IERC721Enumerable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13280,
                                "src": "1343:17:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$13280_$",
                                  "typeString": "type(contract IERC721Enumerable)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$13280_$",
                                  "typeString": "type(contract IERC721Enumerable)"
                                }
                              ],
                              "id": 10681,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1338:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 10683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1338:23:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$13280",
                              "typeString": "type(contract IERC721Enumerable)"
                            }
                          },
                          "id": 10684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1338:35:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1323:50:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1203:170:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 10689,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10659,
                          "src": "1413:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 10687,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1389:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721WithDiamondStorage_$12106_$",
                            "typeString": "type(contract super ERC721WithDiamondStorage)"
                          }
                        },
                        "id": 10688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13555,
                        "src": "1389:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 10690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1389:36:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1203:222:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10666,
                  "id": 10692,
                  "nodeType": "Return",
                  "src": "1184:241:18"
                }
              ]
            },
            "documentation": {
              "id": 10657,
              "nodeType": "StructuredDocumentation",
              "src": "961:56:18",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 10694,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1031:17:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10663,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 10661,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13556,
                  "src": "1130:6:18"
                },
                {
                  "id": 10662,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3847,
                  "src": "1138:7:18"
                }
              ],
              "src": "1121:25:18"
            },
            "parameters": {
              "id": 10660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10659,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1056:11:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 10694,
                  "src": "1049:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 10658,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1049:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1048:20:18"
            },
            "returnParameters": {
              "id": 10666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10665,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10694,
                  "src": "1164:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10664,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1163:6:18"
            },
            "scope": 12106,
            "src": "1022:410:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              332
            ],
            "body": {
              "id": 10720,
              "nodeType": "Block",
              "src": "1616:192:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10704,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10697,
                          "src": "1647:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1664:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1656:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10705,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1656:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1656:10:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1647:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 10710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1680:44:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 10703,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1626:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1626:108:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10712,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:108:18"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10713,
                            "name": "LibDiamond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1805,
                            "src": "1751:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                              "typeString": "type(library LibDiamond)"
                            }
                          },
                          "id": 10714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "diamondStorage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 721,
                          "src": "1751:25:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                            "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                          }
                        },
                        "id": 10715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1751:27:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                        }
                      },
                      "id": 10716,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721_balances",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 459,
                      "src": "1751:43:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 10718,
                    "indexExpression": {
                      "id": 10717,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10697,
                      "src": "1795:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1751:50:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10702,
                  "id": 10719,
                  "nodeType": "Return",
                  "src": "1744:57:18"
                }
              ]
            },
            "documentation": {
              "id": 10695,
              "nodeType": "StructuredDocumentation",
              "src": "1438:48:18",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 10721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1500:9:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10699,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1577:8:18"
            },
            "parameters": {
              "id": 10698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10697,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1518:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 10721,
                  "src": "1510:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1509:15:18"
            },
            "returnParameters": {
              "id": 10702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10701,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10721,
                  "src": "1603:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1603:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1602:9:18"
            },
            "scope": 12106,
            "src": "1491:317:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              340
            ],
            "body": {
              "id": 10751,
              "nodeType": "Block",
              "src": "1990:222:18",
              "statements": [
                {
                  "assignments": [
                    10731
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10731,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2008:5:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 10751,
                      "src": "2000:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10730,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2000:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10738,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10732,
                            "name": "LibDiamond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1805,
                            "src": "2016:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                              "typeString": "type(library LibDiamond)"
                            }
                          },
                          "id": 10733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "diamondStorage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 721,
                          "src": "2016:25:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                            "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                          }
                        },
                        "id": 10734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2016:27:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                        }
                      },
                      "id": 10735,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721_owners",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 455,
                      "src": "2016:41:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 10737,
                    "indexExpression": {
                      "id": 10736,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10724,
                      "src": "2058:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2016:50:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2000:66:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10740,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10731,
                          "src": "2097:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2114:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2106:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10741,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2106:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2106:10:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2097:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 10746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2130:43:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 10739,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2076:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:107:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10748,
                  "nodeType": "ExpressionStatement",
                  "src": "2076:107:18"
                },
                {
                  "expression": {
                    "id": 10749,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10731,
                    "src": "2200:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 10729,
                  "id": 10750,
                  "nodeType": "Return",
                  "src": "2193:12:18"
                }
              ]
            },
            "documentation": {
              "id": 10722,
              "nodeType": "StructuredDocumentation",
              "src": "1814:46:18",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 10752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "1874:7:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10726,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1951:8:18"
            },
            "parameters": {
              "id": 10725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10724,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1890:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 10752,
                  "src": "1882:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1882:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1881:17:18"
            },
            "returnParameters": {
              "id": 10729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10728,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10752,
                  "src": "1977:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10727,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1977:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1976:9:18"
            },
            "scope": 12106,
            "src": "1865:347:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13292
            ],
            "body": {
              "id": 10764,
              "nodeType": "Block",
              "src": "2343:63:18",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 10759,
                          "name": "LibDiamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1805,
                          "src": "2360:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                            "typeString": "type(library LibDiamond)"
                          }
                        },
                        "id": 10760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "diamondStorage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 721,
                        "src": "2360:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                          "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                        }
                      },
                      "id": 10761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2360:27:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                      }
                    },
                    "id": 10762,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "erc721_name",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 488,
                    "src": "2360:39:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 10758,
                  "id": 10763,
                  "nodeType": "Return",
                  "src": "2353:46:18"
                }
              ]
            },
            "documentation": {
              "id": 10753,
              "nodeType": "StructuredDocumentation",
              "src": "2218:51:18",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 10765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2283:4:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10755,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2310:8:18"
            },
            "parameters": {
              "id": 10754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2287:2:18"
            },
            "returnParameters": {
              "id": 10758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10765,
                  "src": "2328:13:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10756,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2328:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2327:15:18"
            },
            "scope": 12106,
            "src": "2274:132:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13298
            ],
            "body": {
              "id": 10777,
              "nodeType": "Block",
              "src": "2541:65:18",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 10772,
                          "name": "LibDiamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1805,
                          "src": "2558:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                            "typeString": "type(library LibDiamond)"
                          }
                        },
                        "id": 10773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "diamondStorage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 721,
                        "src": "2558:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                          "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                        }
                      },
                      "id": 10774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2558:27:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                      }
                    },
                    "id": 10775,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "erc721_symbol",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 490,
                    "src": "2558:41:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 10771,
                  "id": 10776,
                  "nodeType": "Return",
                  "src": "2551:48:18"
                }
              ]
            },
            "documentation": {
              "id": 10766,
              "nodeType": "StructuredDocumentation",
              "src": "2412:53:18",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 10778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2479:6:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10768,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2508:8:18"
            },
            "parameters": {
              "id": 10767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2485:2:18"
            },
            "returnParameters": {
              "id": 10771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10770,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10778,
                  "src": "2526:13:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10769,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2526:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2525:15:18"
            },
            "scope": 12106,
            "src": "2470:136:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10789,
              "nodeType": "Block",
              "src": "2798:70:18",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 10784,
                          "name": "LibDiamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1805,
                          "src": "2815:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                            "typeString": "type(library LibDiamond)"
                          }
                        },
                        "id": 10785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "diamondStorage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 721,
                        "src": "2815:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                          "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                        }
                      },
                      "id": 10786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2815:27:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                      }
                    },
                    "id": 10787,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "erc721_contractURI",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 492,
                    "src": "2815:46:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 10783,
                  "id": 10788,
                  "nodeType": "Return",
                  "src": "2808:53:18"
                }
              ]
            },
            "documentation": {
              "id": 10779,
              "nodeType": "StructuredDocumentation",
              "src": "2612:122:18",
              "text": " @dev See {IERC721Metadata-symbol}.\n @dev See https://docs.opensea.io/docs/contract-level-metadata"
            },
            "functionSelector": "e8a3d485",
            "id": 10790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contractURI",
            "nameLocation": "2748:11:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2759:2:18"
            },
            "returnParameters": {
              "id": 10783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10782,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10790,
                  "src": "2783:13:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10781,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2783:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2782:15:18"
            },
            "scope": 12106,
            "src": "2739:129:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10801,
              "nodeType": "Block",
              "src": "3024:69:18",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 10796,
                          "name": "LibDiamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1805,
                          "src": "3041:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                            "typeString": "type(library LibDiamond)"
                          }
                        },
                        "id": 10797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "diamondStorage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 721,
                        "src": "3041:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                          "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                        }
                      },
                      "id": 10798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3041:27:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                      }
                    },
                    "id": 10799,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "erc721_licenseURI",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 494,
                    "src": "3041:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 10795,
                  "id": 10800,
                  "nodeType": "Return",
                  "src": "3034:52:18"
                }
              ]
            },
            "documentation": {
              "id": 10791,
              "nodeType": "StructuredDocumentation",
              "src": "2874:90:18",
              "text": " @dev Reference URI for the NFT license file hosted on Arweave permaweb."
            },
            "functionSelector": "6b87d24c",
            "id": 10802,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "license",
            "nameLocation": "2978:7:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2985:2:18"
            },
            "returnParameters": {
              "id": 10795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10794,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10802,
                  "src": "3009:13:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10793,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3009:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3008:15:18"
            },
            "scope": 12106,
            "src": "2969:124:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10813,
              "nodeType": "Block",
              "src": "3249:86:18",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 10808,
                          "name": "LibDiamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1805,
                          "src": "3266:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                            "typeString": "type(library LibDiamond)"
                          }
                        },
                        "id": 10809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "diamondStorage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 721,
                        "src": "3266:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                          "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                        }
                      },
                      "id": 10810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3266:27:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                      }
                    },
                    "id": 10811,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "erc721_genesisEggPresaleUnlockTime",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 496,
                    "src": "3266:62:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10807,
                  "id": 10812,
                  "nodeType": "Return",
                  "src": "3259:69:18"
                }
              ]
            },
            "documentation": {
              "id": 10803,
              "nodeType": "StructuredDocumentation",
              "src": "3099:86:18",
              "text": " @dev Timestamp (in seconds) when the genesis egg presale activates."
            },
            "functionSelector": "234a4b9b",
            "id": 10814,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "presaleUnlockTime",
            "nameLocation": "3199:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3216:2:18"
            },
            "returnParameters": {
              "id": 10807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10806,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10814,
                  "src": "3240:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3240:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3239:9:18"
            },
            "scope": 12106,
            "src": "3190:145:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10825,
              "nodeType": "Block",
              "src": "3497:84:18",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 10820,
                          "name": "LibDiamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1805,
                          "src": "3514:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                            "typeString": "type(library LibDiamond)"
                          }
                        },
                        "id": 10821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "diamondStorage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 721,
                        "src": "3514:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                          "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                        }
                      },
                      "id": 10822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3514:27:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                      }
                    },
                    "id": 10823,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "erc721_genesisEggHatchUnlockTime",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 498,
                    "src": "3514:60:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10819,
                  "id": 10824,
                  "nodeType": "Return",
                  "src": "3507:67:18"
                }
              ]
            },
            "documentation": {
              "id": 10815,
              "nodeType": "StructuredDocumentation",
              "src": "3341:84:18",
              "text": " @dev Timestamp (in seconds) when the genesis eggs can be hatched."
            },
            "functionSelector": "2964502d",
            "id": 10826,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "presaleHatchingUnlockTime",
            "nameLocation": "3439:25:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3464:2:18"
            },
            "returnParameters": {
              "id": 10819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10818,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10826,
                  "src": "3488:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3488:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3487:9:18"
            },
            "scope": 12106,
            "src": "3430:151:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10835,
              "nodeType": "Block",
              "src": "3736:56:18",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 10832,
                      "name": "LibDiamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1805,
                      "src": "3753:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                        "typeString": "type(library LibDiamond)"
                      }
                    },
                    "id": 10833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "ERC721_GENESIS_TOKENS",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 419,
                    "src": "3753:32:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10831,
                  "id": 10834,
                  "nodeType": "Return",
                  "src": "3746:39:18"
                }
              ]
            },
            "documentation": {
              "id": 10827,
              "nodeType": "StructuredDocumentation",
              "src": "3587:88:18",
              "text": " @dev Maximum genesis eggs that can be minted. (note: ids starts at 1)"
            },
            "functionSelector": "6c4b9134",
            "id": 10836,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "genesisEggsMax",
            "nameLocation": "3689:14:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3703:2:18"
            },
            "returnParameters": {
              "id": 10831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10830,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10836,
                  "src": "3727:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3727:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3726:9:18"
            },
            "scope": 12106,
            "src": "3680:112:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13306
            ],
            "body": {
              "id": 10863,
              "nodeType": "Block",
              "src": "3990:264:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10847,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10839,
                            "src": "4029:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10846,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11127,
                          "src": "4021:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 10848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4021:16:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 10849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4051:49:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 10845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4000:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4000:110:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10851,
                  "nodeType": "ExpressionStatement",
                  "src": "4000:110:18"
                },
                {
                  "assignments": [
                    10853
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10853,
                      "mutability": "mutable",
                      "name": "_tokenURI",
                      "nameLocation": "4134:9:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 10863,
                      "src": "4120:23:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 10852,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4120:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10860,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10854,
                            "name": "LibDiamond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1805,
                            "src": "4146:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                              "typeString": "type(library LibDiamond)"
                            }
                          },
                          "id": 10855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "diamondStorage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 721,
                          "src": "4146:25:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                            "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                          }
                        },
                        "id": 10856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4146:27:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                        }
                      },
                      "id": 10857,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721_tokenURIs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 502,
                      "src": "4146:44:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 10859,
                    "indexExpression": {
                      "id": 10858,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10839,
                      "src": "4204:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4146:75:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4120:101:18"
                },
                {
                  "expression": {
                    "id": 10861,
                    "name": "_tokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10853,
                    "src": "4238:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 10844,
                  "id": 10862,
                  "nodeType": "Return",
                  "src": "4231:16:18"
                }
              ]
            },
            "documentation": {
              "id": 10837,
              "nodeType": "StructuredDocumentation",
              "src": "3798:55:18",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 10864,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3867:8:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10841,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3945:8:18"
            },
            "parameters": {
              "id": 10840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10839,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3884:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 10864,
                  "src": "3876:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3876:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3875:17:18"
            },
            "returnParameters": {
              "id": 10844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10843,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10864,
                  "src": "3971:13:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10842,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3971:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3970:15:18"
            },
            "scope": 12106,
            "src": "3858:396:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10895,
              "nodeType": "Block",
              "src": "4361:256:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10873,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10866,
                            "src": "4400:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10872,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11127,
                          "src": "4392:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 10874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4392:16:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a205f736574546f6b656e55524920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 10875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4422:52:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_745603b15ef01e862ffb380975e36bf1dafe263969e7a229c9e8110bd2b3b601",
                          "typeString": "literal_string \"ERC721Metadata: _setTokenURI for nonexistent token\""
                        },
                        "value": "ERC721Metadata: _setTokenURI for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_745603b15ef01e862ffb380975e36bf1dafe263969e7a229c9e8110bd2b3b601",
                          "typeString": "literal_string \"ERC721Metadata: _setTokenURI for nonexistent token\""
                        }
                      ],
                      "id": 10871,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4371:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4371:113:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10877,
                  "nodeType": "ExpressionStatement",
                  "src": "4371:113:18"
                },
                {
                  "assignments": [
                    10882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10882,
                      "mutability": "mutable",
                      "name": "ds",
                      "nameLocation": "4528:2:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 10895,
                      "src": "4494:36:18",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage"
                      },
                      "typeName": {
                        "id": 10881,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10880,
                          "name": "LibDiamond.DiamondStorage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 709,
                          "src": "4494:25:18"
                        },
                        "referencedDeclaration": 709,
                        "src": "4494:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10886,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 10883,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "4533:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 10884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "diamondStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
                      "src": "4533:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                        "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                      }
                    },
                    "id": 10885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4533:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                      "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4494:66:18"
                },
                {
                  "expression": {
                    "id": 10893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 10887,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10882,
                          "src": "4570:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 10890,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_tokenURIs",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 502,
                        "src": "4570:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 10891,
                      "indexExpression": {
                        "id": 10889,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10866,
                        "src": "4590:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4570:28:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10892,
                      "name": "_tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10868,
                      "src": "4601:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4570:40:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 10894,
                  "nodeType": "ExpressionStatement",
                  "src": "4570:40:18"
                }
              ]
            },
            "id": 10896,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTokenURI",
            "nameLocation": "4269:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10866,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4290:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 10896,
                  "src": "4282:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4282:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10868,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nameLocation": "4313:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 10896,
                  "src": "4299:23:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10867,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4299:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4281:42:18"
            },
            "returnParameters": {
              "id": 10870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4361:0:18"
            },
            "scope": 12106,
            "src": "4260:357:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              368
            ],
            "body": {
              "id": 10938,
              "nodeType": "Block",
              "src": "4744:349:18",
              "statements": [
                {
                  "assignments": [
                    10906
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10906,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4762:5:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 10938,
                      "src": "4754:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10905,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4754:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10911,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10909,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10901,
                        "src": "4803:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10907,
                        "name": "ERC721WithDiamondStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12106,
                        "src": "4770:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721WithDiamondStorage_$12106_$",
                          "typeString": "type(contract ERC721WithDiamondStorage)"
                        }
                      },
                      "id": 10908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10752,
                      "src": "4770:32:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 10910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4770:41:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4754:57:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10913,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10899,
                          "src": "4829:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 10914,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10906,
                          "src": "4835:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4829:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 10916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4842:35:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 10912,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4821:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4821:57:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10918,
                  "nodeType": "ExpressionStatement",
                  "src": "4821:57:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 10923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 10920,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13319,
                              "src": "4910:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 10921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4910:12:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 10922,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10906,
                            "src": "4926:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4910:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10925,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10906,
                              "src": "4952:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 10926,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13319,
                                "src": "4959:10:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 10927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4959:12:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10924,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11001,
                            "src": "4935:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 10928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4935:37:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4910:62:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 10930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4986:58:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 10919,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4889:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4889:165:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10932,
                  "nodeType": "ExpressionStatement",
                  "src": "4889:165:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10934,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10899,
                        "src": "5074:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10935,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10901,
                        "src": "5078:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10933,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11498,
                      "src": "5065:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5065:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10937,
                  "nodeType": "ExpressionStatement",
                  "src": "5065:21:18"
                }
              ]
            },
            "documentation": {
              "id": 10897,
              "nodeType": "StructuredDocumentation",
              "src": "4623:46:18",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 10939,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4683:7:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10903,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4735:8:18"
            },
            "parameters": {
              "id": 10902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10899,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4699:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 10939,
                  "src": "4691:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4691:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10901,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4711:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 10939,
                  "src": "4703:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4703:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4690:29:18"
            },
            "returnParameters": {
              "id": 10904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4744:0:18"
            },
            "scope": 12106,
            "src": "4674:419:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              376
            ],
            "body": {
              "id": 10962,
              "nodeType": "Block",
              "src": "5283:200:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10950,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10942,
                            "src": "5322:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10949,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11127,
                          "src": "5314:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 10951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5314:16:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 10952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5344:46:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 10948,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5293:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5293:107:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10954,
                  "nodeType": "ExpressionStatement",
                  "src": "5293:107:18"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10955,
                            "name": "LibDiamond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1805,
                            "src": "5418:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                              "typeString": "type(library LibDiamond)"
                            }
                          },
                          "id": 10956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "diamondStorage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 721,
                          "src": "5418:25:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                            "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                          }
                        },
                        "id": 10957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5418:27:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                        }
                      },
                      "id": 10958,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721_tokenApprovals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 480,
                      "src": "5418:49:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 10960,
                    "indexExpression": {
                      "id": 10959,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10942,
                      "src": "5468:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5418:58:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 10947,
                  "id": 10961,
                  "nodeType": "Return",
                  "src": "5411:65:18"
                }
              ]
            },
            "documentation": {
              "id": 10940,
              "nodeType": "StructuredDocumentation",
              "src": "5099:50:18",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 10963,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "5163:11:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10944,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5244:8:18"
            },
            "parameters": {
              "id": 10943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10942,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5183:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 10963,
                  "src": "5175:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5175:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5174:17:18"
            },
            "returnParameters": {
              "id": 10947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10946,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10963,
                  "src": "5270:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5270:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5269:9:18"
            },
            "scope": 12106,
            "src": "5154:329:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              384
            ],
            "body": {
              "id": 10979,
              "nodeType": "Block",
              "src": "5662:69:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10973,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13319,
                          "src": "5691:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 10974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5691:12:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10975,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10966,
                        "src": "5705:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10976,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10968,
                        "src": "5715:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10972,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11541,
                      "src": "5672:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 10977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5672:52:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10978,
                  "nodeType": "ExpressionStatement",
                  "src": "5672:52:18"
                }
              ]
            },
            "documentation": {
              "id": 10964,
              "nodeType": "StructuredDocumentation",
              "src": "5489:56:18",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 10980,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "5559:17:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10970,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5649:8:18"
            },
            "parameters": {
              "id": 10969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10966,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5585:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 10980,
                  "src": "5577:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5577:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10968,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "5600:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 10980,
                  "src": "5595:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10967,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5595:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5576:33:18"
            },
            "returnParameters": {
              "id": 10971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5662:0:18"
            },
            "scope": 12106,
            "src": "5550:181:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              394
            ],
            "body": {
              "id": 11000,
              "nodeType": "Block",
              "src": "5944:135:18",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 10991,
                              "name": "LibDiamond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1805,
                              "src": "5973:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                                "typeString": "type(library LibDiamond)"
                              }
                            },
                            "id": 10992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "diamondStorage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 721,
                            "src": "5973:25:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                              "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                            }
                          },
                          "id": 10993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5973:27:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 10994,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_operatorApprovals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 486,
                        "src": "5973:52:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 10996,
                      "indexExpression": {
                        "id": 10995,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10983,
                        "src": "6026:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5973:59:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 10998,
                    "indexExpression": {
                      "id": 10997,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10985,
                      "src": "6050:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5973:99:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10990,
                  "id": 10999,
                  "nodeType": "Return",
                  "src": "5954:118:18"
                }
              ]
            },
            "documentation": {
              "id": 10981,
              "nodeType": "StructuredDocumentation",
              "src": "5737:55:18",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 11001,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "5806:16:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10987,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5908:8:18"
            },
            "parameters": {
              "id": 10986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10983,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5831:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11001,
                  "src": "5823:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5823:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10985,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5846:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11001,
                  "src": "5838:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5838:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5822:33:18"
            },
            "returnParameters": {
              "id": 10990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10989,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11001,
                  "src": "5934:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10988,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5934:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5933:6:18"
            },
            "scope": 12106,
            "src": "5797:282:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              360
            ],
            "body": {
              "id": 11027,
              "nodeType": "Block",
              "src": "6260:193:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11014,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13319,
                              "src": "6310:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 11015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6310:12:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11016,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11008,
                            "src": "6324:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 11013,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11168,
                          "src": "6291:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 11017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6291:41:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 11018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6346:51:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 11012,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6270:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6270:137:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11020,
                  "nodeType": "ExpressionStatement",
                  "src": "6270:137:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11022,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11004,
                        "src": "6428:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11023,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11006,
                        "src": "6434:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11024,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11008,
                        "src": "6438:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11021,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11463,
                      "src": "6418:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6418:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11026,
                  "nodeType": "ExpressionStatement",
                  "src": "6418:28:18"
                }
              ]
            },
            "documentation": {
              "id": 11002,
              "nodeType": "StructuredDocumentation",
              "src": "6085:51:18",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 11028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "6150:12:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11010,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6251:8:18"
            },
            "parameters": {
              "id": 11009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11004,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6180:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11028,
                  "src": "6172:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6172:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11006,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6202:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11028,
                  "src": "6194:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6194:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11008,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6222:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11028,
                  "src": "6214:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6214:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6162:73:18"
            },
            "returnParameters": {
              "id": 11011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6260:0:18"
            },
            "scope": 12106,
            "src": "6141:312:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              350
            ],
            "body": {
              "id": 11046,
              "nodeType": "Block",
              "src": "6642:56:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11040,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11031,
                        "src": "6669:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11041,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11033,
                        "src": "6675:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11042,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11035,
                        "src": "6679:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 11043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6688:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 11039,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11047,
                        11077
                      ],
                      "referencedDeclaration": 11077,
                      "src": "6652:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 11044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6652:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11045,
                  "nodeType": "ExpressionStatement",
                  "src": "6652:39:18"
                }
              ]
            },
            "documentation": {
              "id": 11029,
              "nodeType": "StructuredDocumentation",
              "src": "6459:55:18",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 11047,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "6528:16:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11037,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6633:8:18"
            },
            "parameters": {
              "id": 11036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11031,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6562:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11047,
                  "src": "6554:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6554:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11033,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6584:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11047,
                  "src": "6576:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6576:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11035,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6604:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11047,
                  "src": "6596:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6596:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6544:73:18"
            },
            "returnParameters": {
              "id": 11038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6642:0:18"
            },
            "scope": 12106,
            "src": "6519:179:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              406
            ],
            "body": {
              "id": 11076,
              "nodeType": "Block",
              "src": "6915:203:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11062,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13319,
                              "src": "6965:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 11063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6965:12:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11064,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11054,
                            "src": "6979:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 11061,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11168,
                          "src": "6946:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 11065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6946:41:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 11066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7001:51:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 11060,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6925:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6925:137:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11068,
                  "nodeType": "ExpressionStatement",
                  "src": "6925:137:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11070,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11050,
                        "src": "7086:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11071,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11052,
                        "src": "7092:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11072,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11054,
                        "src": "7096:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 11073,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11056,
                        "src": "7105:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 11069,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11106,
                      "src": "7072:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 11074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7072:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11075,
                  "nodeType": "ExpressionStatement",
                  "src": "7072:39:18"
                }
              ]
            },
            "documentation": {
              "id": 11048,
              "nodeType": "StructuredDocumentation",
              "src": "6704:55:18",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 11077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "6773:16:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11058,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6906:8:18"
            },
            "parameters": {
              "id": 11057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11050,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6807:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11077,
                  "src": "6799:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6799:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11052,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6829:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11077,
                  "src": "6821:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6821:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11054,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6849:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11077,
                  "src": "6841:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6841:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11056,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6879:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11077,
                  "src": "6866:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11055,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6866:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6789:101:18"
            },
            "returnParameters": {
              "id": 11059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6915:0:18"
            },
            "scope": 12106,
            "src": "6764:354:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11105,
              "nodeType": "Block",
              "src": "8121:200:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11090,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11080,
                        "src": "8141:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11091,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11082,
                        "src": "8147:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11092,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11084,
                        "src": "8151:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11089,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11463,
                      "src": "8131:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8131:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11094,
                  "nodeType": "ExpressionStatement",
                  "src": "8131:28:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11097,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11080,
                            "src": "8213:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11098,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11082,
                            "src": "8219:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11099,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11084,
                            "src": "8223:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 11100,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11086,
                            "src": "8232:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 11096,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11603,
                          "src": "8190:22:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 11101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8190:48:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 11102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8252:52:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 11095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8169:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8169:145:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11104,
                  "nodeType": "ExpressionStatement",
                  "src": "8169:145:18"
                }
              ]
            },
            "documentation": {
              "id": 11078,
              "nodeType": "StructuredDocumentation",
              "src": "7124:851:18",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 11106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "7989:13:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11080,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8020:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11106,
                  "src": "8012:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8012:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11082,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8042:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11106,
                  "src": "8034:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8034:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11084,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8062:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11106,
                  "src": "8054:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8054:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11086,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8092:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11106,
                  "src": "8079:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11085,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8079:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8002:101:18"
            },
            "returnParameters": {
              "id": 11088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8121:0:18"
            },
            "scope": 12106,
            "src": "7980:341:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11126,
              "nodeType": "Block",
              "src": "8695:88:18",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 11114,
                              "name": "LibDiamond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1805,
                              "src": "8712:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                                "typeString": "type(library LibDiamond)"
                              }
                            },
                            "id": 11115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "diamondStorage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 721,
                            "src": "8712:25:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                              "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                            }
                          },
                          "id": 11116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8712:27:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11117,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_owners",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 455,
                        "src": "8712:41:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 11119,
                      "indexExpression": {
                        "id": 11118,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11109,
                        "src": "8754:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8712:50:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 11122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8774:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 11121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8766:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8766:7:18",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8766:10:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8712:64:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11113,
                  "id": 11125,
                  "nodeType": "Return",
                  "src": "8705:71:18"
                }
              ]
            },
            "documentation": {
              "id": 11107,
              "nodeType": "StructuredDocumentation",
              "src": "8327:292:18",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 11127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "8633:7:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11109,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8649:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11127,
                  "src": "8641:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8641:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8640:17:18"
            },
            "returnParameters": {
              "id": 11113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11112,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11127,
                  "src": "8689:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11111,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8689:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8688:6:18"
            },
            "scope": 12106,
            "src": "8624:159:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11167,
              "nodeType": "Block",
              "src": "9076:321:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11139,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11132,
                            "src": "9115:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 11138,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11127,
                          "src": "9107:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 11140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9107:16:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 11141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9137:46:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 11137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9086:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9086:107:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11143,
                  "nodeType": "ExpressionStatement",
                  "src": "9086:107:18"
                },
                {
                  "assignments": [
                    11145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11145,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9211:5:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11167,
                      "src": "9203:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11144,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9203:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11150,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11148,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11132,
                        "src": "9252:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11146,
                        "name": "ERC721WithDiamondStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12106,
                        "src": "9219:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721WithDiamondStorage_$12106_$",
                          "typeString": "type(contract ERC721WithDiamondStorage)"
                        }
                      },
                      "id": 11147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10752,
                      "src": "9219:32:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 11149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9219:41:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9203:57:18"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 11159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 11153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 11151,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11130,
                              "src": "9278:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 11152,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11145,
                              "src": "9289:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "9278:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 11158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 11155,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11132,
                                  "src": "9322:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 11154,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10963,
                                "src": "9310:11:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 11156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9310:20:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 11157,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11130,
                              "src": "9334:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "9310:31:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9278:63:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 11161,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11145,
                              "src": "9374:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11162,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11130,
                              "src": "9381:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11160,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11001,
                            "src": "9357:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 11163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9357:32:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9278:111:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 11165,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9277:113:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11136,
                  "id": 11166,
                  "nodeType": "Return",
                  "src": "9270:120:18"
                }
              ]
            },
            "documentation": {
              "id": 11128,
              "nodeType": "StructuredDocumentation",
              "src": "8789:147:18",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 11168,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "8950:18:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11130,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8977:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11168,
                  "src": "8969:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8969:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11132,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8994:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11168,
                  "src": "8986:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8986:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8968:34:18"
            },
            "returnParameters": {
              "id": 11136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11135,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11168,
                  "src": "9066:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11134,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9066:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9065:6:18"
            },
            "scope": 12106,
            "src": "8941:456:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11182,
              "nodeType": "Block",
              "src": "9792:43:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11177,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11171,
                        "src": "9812:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11178,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11173,
                        "src": "9816:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 11179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9825:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 11176,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11183,
                        11212
                      ],
                      "referencedDeclaration": 11212,
                      "src": "9802:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 11180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9802:26:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11181,
                  "nodeType": "ExpressionStatement",
                  "src": "9802:26:18"
                }
              ]
            },
            "documentation": {
              "id": 11169,
              "nodeType": "StructuredDocumentation",
              "src": "9403:319:18",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 11183,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "9736:9:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11171,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9754:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11183,
                  "src": "9746:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9746:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11173,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9766:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11183,
                  "src": "9758:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9758:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9745:29:18"
            },
            "returnParameters": {
              "id": 11175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9792:0:18"
            },
            "scope": 12106,
            "src": "9727:108:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11211,
              "nodeType": "Block",
              "src": "10171:196:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11194,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11186,
                        "src": "10187:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11195,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11188,
                        "src": "10191:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11193,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11282,
                      "src": "10181:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10181:18:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11197,
                  "nodeType": "ExpressionStatement",
                  "src": "10181:18:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 11202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10261:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 11201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10253:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 11200,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10253:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10253:10:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11204,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11186,
                            "src": "10265:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11205,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11188,
                            "src": "10269:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 11206,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11190,
                            "src": "10278:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 11199,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11603,
                          "src": "10230:22:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 11207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10230:54:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 11208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10298:52:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 11198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10209:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10209:151:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11210,
                  "nodeType": "ExpressionStatement",
                  "src": "10209:151:18"
                }
              ]
            },
            "documentation": {
              "id": 11184,
              "nodeType": "StructuredDocumentation",
              "src": "9841:210:18",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 11212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "10065:9:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11186,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10092:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11212,
                  "src": "10084:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10084:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11188,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10112:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11212,
                  "src": "10104:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10104:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11190,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "10142:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11212,
                  "src": "10129:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11189,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10129:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10074:79:18"
            },
            "returnParameters": {
              "id": 11192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10171:0:18"
            },
            "scope": 12106,
            "src": "10056:311:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11281,
              "nodeType": "Block",
              "src": "10750:404:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11221,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11215,
                          "src": "10768:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10782:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10774:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11222,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10774:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10774:10:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10768:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 11227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10786:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 11220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10760:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10760:61:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11229,
                  "nodeType": "ExpressionStatement",
                  "src": "10760:61:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10839:17:18",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 11232,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11217,
                              "src": "10848:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11231,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11127,
                            "src": "10840:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 11233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10840:16:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 11235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10858:30:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 11230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10831:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10831:58:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11237,
                  "nodeType": "ExpressionStatement",
                  "src": "10831:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 11241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10929:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10921:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11239,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10921:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10921:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11243,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11215,
                        "src": "10933:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11244,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11217,
                        "src": "10937:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11238,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11748,
                      "src": "10900:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10900:45:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11246,
                  "nodeType": "ExpressionStatement",
                  "src": "10900:45:18"
                },
                {
                  "assignments": [
                    11251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11251,
                      "mutability": "mutable",
                      "name": "ds",
                      "nameLocation": "10989:2:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11281,
                      "src": "10955:36:18",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage"
                      },
                      "typeName": {
                        "id": 11250,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11249,
                          "name": "LibDiamond.DiamondStorage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 709,
                          "src": "10955:25:18"
                        },
                        "referencedDeclaration": 709,
                        "src": "10955:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11255,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11252,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "10994:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 11253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "diamondStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
                      "src": "10994:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                        "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                      }
                    },
                    "id": 11254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10994:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                      "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10955:66:18"
                },
                {
                  "expression": {
                    "id": 11262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 11256,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11251,
                          "src": "11031:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11259,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 459,
                        "src": "11031:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 11260,
                      "indexExpression": {
                        "id": 11258,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11215,
                        "src": "11050:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11031:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 11261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11057:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "11031:27:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11263,
                  "nodeType": "ExpressionStatement",
                  "src": "11031:27:18"
                },
                {
                  "expression": {
                    "id": 11270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 11264,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11251,
                          "src": "11068:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11267,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_owners",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 455,
                        "src": "11068:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 11268,
                      "indexExpression": {
                        "id": 11266,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11217,
                        "src": "11085:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11068:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11269,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11215,
                      "src": "11096:2:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11068:30:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11271,
                  "nodeType": "ExpressionStatement",
                  "src": "11068:30:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 11275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11131:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11123:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11273,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11123:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11123:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11277,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11215,
                        "src": "11135:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11278,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11217,
                        "src": "11139:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11272,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "11114:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11114:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11280,
                  "nodeType": "EmitStatement",
                  "src": "11109:38:18"
                }
              ]
            },
            "documentation": {
              "id": 11213,
              "nodeType": "StructuredDocumentation",
              "src": "10373:311:18",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 11282,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "10698:5:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11215,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10712:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11282,
                  "src": "10704:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10704:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11217,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10724:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11282,
                  "src": "10716:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10716:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10703:29:18"
            },
            "returnParameters": {
              "id": 11219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10750:0:18"
            },
            "scope": 12106,
            "src": "10689:465:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11370,
              "nodeType": "Block",
              "src": "11420:729:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11291,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11285,
                            "src": "11489:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 11289,
                            "name": "LibUnicornDNA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3835,
                            "src": "11451:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibUnicornDNA_$3835_$",
                              "typeString": "type(library LibUnicornDNA)"
                            }
                          },
                          "id": 11290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_unicornIsTransferrable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3799,
                          "src": "11451:37:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 11292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11451:46:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231576974684469616d6f6e6453746f726167653a2043616e6e6f74206275726e206120556e69636f726e206c6f636b656420696e2067616d65206f7220636f6f6c696e6720646f776e2066726f6d20616e20756e6c6f636b",
                        "id": 11293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11511:95:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad57d185460182bc609fd7a6a1012e0228b19b3db1b181de474ca39d591f3989",
                          "typeString": "literal_string \"ERC721WithDiamondStorage: Cannot burn a Unicorn locked in game or cooling down from an unlock\""
                        },
                        "value": "ERC721WithDiamondStorage: Cannot burn a Unicorn locked in game or cooling down from an unlock"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad57d185460182bc609fd7a6a1012e0228b19b3db1b181de474ca39d591f3989",
                          "typeString": "literal_string \"ERC721WithDiamondStorage: Cannot burn a Unicorn locked in game or cooling down from an unlock\""
                        }
                      ],
                      "id": 11288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11430:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11430:186:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11295,
                  "nodeType": "ExpressionStatement",
                  "src": "11430:186:18"
                },
                {
                  "assignments": [
                    11297
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11297,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "11634:5:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11370,
                      "src": "11626:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11296,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11626:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11302,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11300,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11285,
                        "src": "11675:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11298,
                        "name": "ERC721WithDiamondStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12106,
                        "src": "11642:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721WithDiamondStorage_$12106_$",
                          "typeString": "type(contract ERC721WithDiamondStorage)"
                        }
                      },
                      "id": 11299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10752,
                      "src": "11642:32:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 11301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11642:41:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11626:57:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11304,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11297,
                        "src": "11715:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 11307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11730:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11722:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11305,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11722:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11722:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11309,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11285,
                        "src": "11734:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11303,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11748,
                      "src": "11694:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11694:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11311,
                  "nodeType": "ExpressionStatement",
                  "src": "11694:48:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 11315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11797:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11789:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11313,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11789:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11789:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11317,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11285,
                        "src": "11801:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11312,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11498,
                      "src": "11780:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11780:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11319,
                  "nodeType": "ExpressionStatement",
                  "src": "11780:29:18"
                },
                {
                  "assignments": [
                    11324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11324,
                      "mutability": "mutable",
                      "name": "ds",
                      "nameLocation": "11853:2:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11370,
                      "src": "11819:36:18",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage"
                      },
                      "typeName": {
                        "id": 11323,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11322,
                          "name": "LibDiamond.DiamondStorage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 709,
                          "src": "11819:25:18"
                        },
                        "referencedDeclaration": 709,
                        "src": "11819:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11328,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11325,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "11858:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 11326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "diamondStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
                      "src": "11858:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                        "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                      }
                    },
                    "id": 11327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11858:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                      "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11819:66:18"
                },
                {
                  "expression": {
                    "id": 11335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 11329,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11324,
                          "src": "11895:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11332,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 459,
                        "src": "11895:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 11333,
                      "indexExpression": {
                        "id": 11331,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11297,
                        "src": "11914:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11895:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 11334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11924:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "11895:30:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11336,
                  "nodeType": "ExpressionStatement",
                  "src": "11895:30:18"
                },
                {
                  "expression": {
                    "id": 11341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11935:32:18",
                    "subExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 11337,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11324,
                          "src": "11942:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11338,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_owners",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 455,
                        "src": "11942:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 11340,
                      "indexExpression": {
                        "id": 11339,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11285,
                        "src": "11959:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11942:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11342,
                  "nodeType": "ExpressionStatement",
                  "src": "11935:32:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 11345,
                                "name": "ds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11324,
                                "src": "11988:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                                  "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                                }
                              },
                              "id": 11346,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "erc721_tokenURIs",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 502,
                              "src": "11988:19:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 11348,
                            "indexExpression": {
                              "id": 11347,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11285,
                              "src": "12008:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11988:28:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 11344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11982:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 11343,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "11982:5:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11982:35:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 11350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11982:42:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12028:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11982:47:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11360,
                  "nodeType": "IfStatement",
                  "src": "11978:113:18",
                  "trueBody": {
                    "id": 11359,
                    "nodeType": "Block",
                    "src": "12031:60:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 11357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "12045:35:18",
                          "subExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 11353,
                                "name": "ds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11324,
                                "src": "12052:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                                  "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                                }
                              },
                              "id": 11354,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "erc721_tokenURIs",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 502,
                              "src": "12052:19:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 11356,
                            "indexExpression": {
                              "id": 11355,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11285,
                              "src": "12072:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12052:28:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11358,
                        "nodeType": "ExpressionStatement",
                        "src": "12045:35:18"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11362,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11297,
                        "src": "12115:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 11365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12130:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12122:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11363,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12122:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12122:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11367,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11285,
                        "src": "12134:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11361,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "12106:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12106:36:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11369,
                  "nodeType": "EmitStatement",
                  "src": "12101:41:18"
                }
              ]
            },
            "documentation": {
              "id": 11283,
              "nodeType": "StructuredDocumentation",
              "src": "11160:206:18",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 11371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "11380:5:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11285,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11394:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11371,
                  "src": "11386:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11386:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11385:17:18"
            },
            "returnParameters": {
              "id": 11287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11420:0:18"
            },
            "scope": 12106,
            "src": "11371:778:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11462,
              "nodeType": "Block",
              "src": "12582:802:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 11384,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11378,
                              "src": "12646:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 11382,
                              "name": "ERC721WithDiamondStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12106,
                              "src": "12613:24:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721WithDiamondStorage_$12106_$",
                                "typeString": "type(contract ERC721WithDiamondStorage)"
                              }
                            },
                            "id": 11383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10752,
                            "src": "12613:32:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 11385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12613:41:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 11386,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11374,
                          "src": "12658:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12613:49:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 11388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12676:43:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 11381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12592:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12592:137:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11390,
                  "nodeType": "ExpressionStatement",
                  "src": "12592:137:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11392,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11376,
                          "src": "12747:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12761:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12753:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11393,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12753:7:18",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12753:10:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12747:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 11398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12765:38:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 11391,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12739:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12739:65:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11400,
                  "nodeType": "ExpressionStatement",
                  "src": "12739:65:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11404,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11378,
                            "src": "12873:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 11402,
                            "name": "LibUnicornDNA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3835,
                            "src": "12835:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibUnicornDNA_$3835_$",
                              "typeString": "type(library LibUnicornDNA)"
                            }
                          },
                          "id": 11403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_unicornIsTransferrable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3799,
                          "src": "12835:37:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 11405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12835:46:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231576974684469616d6f6e6453746f726167653a2043616e6e6f74207472616e73666572206120556e69636f726e206c6f636b656420696e2067616d65206f7220636f6f6c696e6720646f776e2066726f6d20756e6c6f636b",
                        "id": 11406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12895:96:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_907f2a9e9f9394443ce52ec1285165773b703729be0e888cdf21198dcaab07ba",
                          "typeString": "literal_string \"ERC721WithDiamondStorage: Cannot transfer a Unicorn locked in game or cooling down from unlock\""
                        },
                        "value": "ERC721WithDiamondStorage: Cannot transfer a Unicorn locked in game or cooling down from unlock"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_907f2a9e9f9394443ce52ec1285165773b703729be0e888cdf21198dcaab07ba",
                          "typeString": "literal_string \"ERC721WithDiamondStorage: Cannot transfer a Unicorn locked in game or cooling down from unlock\""
                        }
                      ],
                      "id": 11401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12814:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12814:187:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11408,
                  "nodeType": "ExpressionStatement",
                  "src": "12814:187:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11410,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11374,
                        "src": "13033:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11411,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11376,
                        "src": "13039:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11412,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11378,
                        "src": "13043:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11409,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11748,
                      "src": "13012:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13012:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11414,
                  "nodeType": "ExpressionStatement",
                  "src": "13012:39:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 11418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13130:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13122:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11416,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13122:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13122:10:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11420,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11378,
                        "src": "13134:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11415,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11498,
                      "src": "13113:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13113:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11422,
                  "nodeType": "ExpressionStatement",
                  "src": "13113:29:18"
                },
                {
                  "assignments": [
                    11427
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11427,
                      "mutability": "mutable",
                      "name": "ds",
                      "nameLocation": "13186:2:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11462,
                      "src": "13152:36:18",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage"
                      },
                      "typeName": {
                        "id": 11426,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11425,
                          "name": "LibDiamond.DiamondStorage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 709,
                          "src": "13152:25:18"
                        },
                        "referencedDeclaration": 709,
                        "src": "13152:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11431,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11428,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "13191:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 11429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "diamondStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
                      "src": "13191:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                        "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                      }
                    },
                    "id": 11430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13191:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                      "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13152:66:18"
                },
                {
                  "expression": {
                    "id": 11438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 11432,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11427,
                          "src": "13228:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11435,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 459,
                        "src": "13228:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 11436,
                      "indexExpression": {
                        "id": 11434,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11374,
                        "src": "13247:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13228:24:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 11437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13256:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13228:29:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11439,
                  "nodeType": "ExpressionStatement",
                  "src": "13228:29:18"
                },
                {
                  "expression": {
                    "id": 11446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 11440,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11427,
                          "src": "13267:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11443,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_balances",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 459,
                        "src": "13267:18:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 11444,
                      "indexExpression": {
                        "id": 11442,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11376,
                        "src": "13286:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13267:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 11445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13293:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13267:27:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11447,
                  "nodeType": "ExpressionStatement",
                  "src": "13267:27:18"
                },
                {
                  "expression": {
                    "id": 11454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 11448,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11427,
                          "src": "13304:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11451,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_owners",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 455,
                        "src": "13304:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 11452,
                      "indexExpression": {
                        "id": 11450,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11378,
                        "src": "13321:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13304:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11453,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11376,
                      "src": "13332:2:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13304:30:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11455,
                  "nodeType": "ExpressionStatement",
                  "src": "13304:30:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11457,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11374,
                        "src": "13359:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11458,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11376,
                        "src": "13365:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11459,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11378,
                        "src": "13369:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11456,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "13350:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13350:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11461,
                  "nodeType": "EmitStatement",
                  "src": "13345:32:18"
                }
              ]
            },
            "documentation": {
              "id": 11372,
              "nodeType": "StructuredDocumentation",
              "src": "12155:313:18",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 11463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "12482:9:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11374,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12509:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11463,
                  "src": "12501:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12501:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11376,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12531:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11463,
                  "src": "12523:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12523:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11378,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12551:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11463,
                  "src": "12543:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12543:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12491:73:18"
            },
            "returnParameters": {
              "id": 11380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12582:0:18"
            },
            "scope": 12106,
            "src": "12473:911:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11497,
              "nodeType": "Block",
              "src": "13559:210:18",
              "statements": [
                {
                  "assignments": [
                    11475
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11475,
                      "mutability": "mutable",
                      "name": "ds",
                      "nameLocation": "13603:2:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11497,
                      "src": "13569:36:18",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage"
                      },
                      "typeName": {
                        "id": 11474,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11473,
                          "name": "LibDiamond.DiamondStorage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 709,
                          "src": "13569:25:18"
                        },
                        "referencedDeclaration": 709,
                        "src": "13569:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11479,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11476,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "13608:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 11477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "diamondStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
                      "src": "13608:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                        "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                      }
                    },
                    "id": 11478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13608:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                      "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13569:66:18"
                },
                {
                  "expression": {
                    "id": 11486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 11480,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11475,
                          "src": "13645:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11483,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_tokenApprovals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 480,
                        "src": "13645:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 11484,
                      "indexExpression": {
                        "id": 11482,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11468,
                        "src": "13670:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13645:33:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11485,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11466,
                      "src": "13681:2:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13645:38:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11487,
                  "nodeType": "ExpressionStatement",
                  "src": "13645:38:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11491,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11468,
                            "src": "13740:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 11489,
                            "name": "ERC721WithDiamondStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12106,
                            "src": "13707:24:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721WithDiamondStorage_$12106_$",
                              "typeString": "type(contract ERC721WithDiamondStorage)"
                            }
                          },
                          "id": 11490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10752,
                          "src": "13707:32:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 11492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13707:41:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11493,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11466,
                        "src": "13750:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11494,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11468,
                        "src": "13754:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11488,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 315,
                      "src": "13698:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 11495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13698:64:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11496,
                  "nodeType": "EmitStatement",
                  "src": "13693:69:18"
                }
              ]
            },
            "documentation": {
              "id": 11464,
              "nodeType": "StructuredDocumentation",
              "src": "13390:100:18",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 11498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "13504:8:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11466,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13521:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11498,
                  "src": "13513:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13513:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11468,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13533:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11498,
                  "src": "13525:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13525:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13512:29:18"
            },
            "returnParameters": {
              "id": 11470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13559:0:18"
            },
            "scope": 12106,
            "src": "13495:274:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11540,
              "nodeType": "Block",
              "src": "14027:269:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11509,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11501,
                          "src": "14045:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 11510,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11503,
                          "src": "14054:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14045:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 11512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14064:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 11508,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14037:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14037:55:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11514,
                  "nodeType": "ExpressionStatement",
                  "src": "14037:55:18"
                },
                {
                  "assignments": [
                    11519
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11519,
                      "mutability": "mutable",
                      "name": "ds",
                      "nameLocation": "14136:2:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11540,
                      "src": "14102:36:18",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage"
                      },
                      "typeName": {
                        "id": 11518,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11517,
                          "name": "LibDiamond.DiamondStorage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 709,
                          "src": "14102:25:18"
                        },
                        "referencedDeclaration": 709,
                        "src": "14102:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11523,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11520,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "14141:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 11521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "diamondStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
                      "src": "14141:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                        "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                      }
                    },
                    "id": 11522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14141:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                      "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14102:66:18"
                },
                {
                  "expression": {
                    "id": 11532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "expression": {
                            "id": 11524,
                            "name": "ds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11519,
                            "src": "14178:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                              "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                            }
                          },
                          "id": 11528,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "erc721_operatorApprovals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 486,
                          "src": "14178:27:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 11529,
                        "indexExpression": {
                          "id": 11526,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11501,
                          "src": "14206:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14178:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11530,
                      "indexExpression": {
                        "id": 11527,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11503,
                        "src": "14213:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14178:44:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11531,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11505,
                      "src": "14225:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14178:55:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11533,
                  "nodeType": "ExpressionStatement",
                  "src": "14178:55:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11535,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11501,
                        "src": "14263:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11536,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11503,
                        "src": "14270:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11537,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11505,
                        "src": "14280:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11534,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "14248:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 11538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14248:41:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11539,
                  "nodeType": "EmitStatement",
                  "src": "14243:46:18"
                }
              ]
            },
            "documentation": {
              "id": 11499,
              "nodeType": "StructuredDocumentation",
              "src": "13775:124:18",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
            },
            "id": 11541,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "13913:18:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11501,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "13949:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11541,
                  "src": "13941:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13941:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11503,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13972:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11541,
                  "src": "13964:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13964:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11505,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "13995:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11541,
                  "src": "13990:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11504,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13990:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13931:78:18"
            },
            "returnParameters": {
              "id": 11507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14027:0:18"
            },
            "scope": 12106,
            "src": "13904:392:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11602,
              "nodeType": "Block",
              "src": "15005:862:18",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11555,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11546,
                        "src": "15019:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 11556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12587,
                      "src": "15019:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 11557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15019:15:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 11600,
                    "nodeType": "Block",
                    "src": "15825:36:18",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 11598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15846:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 11554,
                        "id": 11599,
                        "nodeType": "Return",
                        "src": "15839:11:18"
                      }
                    ]
                  },
                  "id": 11601,
                  "nodeType": "IfStatement",
                  "src": "15015:846:18",
                  "trueBody": {
                    "id": 11597,
                    "nodeType": "Block",
                    "src": "15036:783:18",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 11577,
                              "nodeType": "Block",
                              "src": "15277:91:18",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 11575,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 11571,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11569,
                                      "src": "15302:6:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 11572,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 13249,
                                          "src": "15312:15:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$13249_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 11573,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 13248,
                                        "src": "15312:32:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 11574,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "15312:41:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "15302:51:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 11554,
                                  "id": 11576,
                                  "nodeType": "Return",
                                  "src": "15295:58:18"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 11578,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 11570,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 11569,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "15269:6:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 11578,
                                  "src": "15262:13:18",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 11568,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15262:6:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "15261:15:18"
                            },
                            "src": "15253:115:18"
                          },
                          {
                            "block": {
                              "id": 11594,
                              "nodeType": "Block",
                              "src": "15397:412:18",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 11585,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 11582,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11580,
                                        "src": "15419:6:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 11583,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "15419:13:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 11584,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15436:1:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "15419:18:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 11592,
                                    "nodeType": "Block",
                                    "src": "15592:203:18",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "15691:86:18",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "15728:2:18",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "15732:6:18"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "15724:3:18"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15724:15:18"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "15747:6:18"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "15741:5:18"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "15741:13:18"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15717:6:18"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "15717:38:18"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "15717:38:18"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 11580,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "15732:6:18",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 11580,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "15747:6:18",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 11591,
                                        "nodeType": "InlineAssembly",
                                        "src": "15682:95:18"
                                      }
                                    ]
                                  },
                                  "id": 11593,
                                  "nodeType": "IfStatement",
                                  "src": "15415:380:18",
                                  "trueBody": {
                                    "id": 11590,
                                    "nodeType": "Block",
                                    "src": "15439:147:18",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 11587,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "15493:52:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 11586,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "15461:6:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 11588,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15461:106:18",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 11589,
                                        "nodeType": "ExpressionStatement",
                                        "src": "15461:106:18"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 11595,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 11581,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 11580,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "15389:6:18",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 11595,
                                  "src": "15376:19:18",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 11579,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15376:5:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "15375:21:18"
                            },
                            "src": "15369:440:18"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 11562,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13319,
                                "src": "15128:10:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 11563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15128:12:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11564,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11544,
                              "src": "15162:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11565,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11548,
                              "src": "15188:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 11566,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11550,
                              "src": "15217:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 11559,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11546,
                                  "src": "15086:2:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 11558,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13249,
                                "src": "15070:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$13249_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 11560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15070:19:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$13249",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 11561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13248,
                            "src": "15070:36:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 11567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15070:170:18",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 11596,
                        "nodeType": "TryStatement",
                        "src": "15050:759:18"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 11542,
              "nodeType": "StructuredDocumentation",
              "src": "14302:542:18",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 11603,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "14858:22:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11544,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14898:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11603,
                  "src": "14890:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14890:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11546,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14920:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11603,
                  "src": "14912:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14912:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11548,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14940:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11603,
                  "src": "14932:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14932:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11550,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "14970:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11603,
                  "src": "14957:18:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11549,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14957:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14880:101:18"
            },
            "returnParameters": {
              "id": 11554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11553,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11603,
                  "src": "14999:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11552,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14999:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14998:6:18"
            },
            "scope": 12106,
            "src": "14849:1018:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              13261
            ],
            "body": {
              "id": 11623,
              "nodeType": "Block",
              "src": "16089:126:18",
              "statements": [
                {
                  "assignments": [
                    11614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11614,
                      "mutability": "mutable",
                      "name": "ds",
                      "nameLocation": "16133:2:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11623,
                      "src": "16099:36:18",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage"
                      },
                      "typeName": {
                        "id": 11613,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11612,
                          "name": "LibDiamond.DiamondStorage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 709,
                          "src": "16099:25:18"
                        },
                        "referencedDeclaration": 709,
                        "src": "16099:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11618,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11615,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "16138:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 11616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "diamondStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
                      "src": "16138:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                        "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                      }
                    },
                    "id": 11617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16138:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                      "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16099:66:18"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 11619,
                        "name": "ds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11614,
                        "src": "16182:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                        }
                      },
                      "id": 11620,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721_allTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 472,
                      "src": "16182:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 11621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "16182:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11609,
                  "id": 11622,
                  "nodeType": "Return",
                  "src": "16175:33:18"
                }
              ]
            },
            "documentation": {
              "id": 11604,
              "nodeType": "StructuredDocumentation",
              "src": "15954:60:18",
              "text": " @dev See {IERC721Enumerable-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 11624,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "16028:11:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11606,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "16062:8:18"
            },
            "parameters": {
              "id": 11605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16039:2:18"
            },
            "returnParameters": {
              "id": 11609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11608,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11624,
                  "src": "16080:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16080:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16079:9:18"
            },
            "scope": 12106,
            "src": "16019:196:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13271
            ],
            "body": {
              "id": 11660,
              "nodeType": "Block",
              "src": "16444:259:18",
              "statements": [
                {
                  "assignments": [
                    11639
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11639,
                      "mutability": "mutable",
                      "name": "ds",
                      "nameLocation": "16488:2:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11660,
                      "src": "16454:36:18",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage"
                      },
                      "typeName": {
                        "id": 11638,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11637,
                          "name": "LibDiamond.DiamondStorage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 709,
                          "src": "16454:25:18"
                        },
                        "referencedDeclaration": 709,
                        "src": "16454:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11643,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11640,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "16493:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 11641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "diamondStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
                      "src": "16493:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                        "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                      }
                    },
                    "id": 11642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16493:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                      "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16454:66:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11645,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11629,
                          "src": "16551:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 11647,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11627,
                              "src": "16569:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11646,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10721,
                            "src": "16559:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 11648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16559:16:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16551:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473",
                        "id": 11650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16589:45:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c",
                          "typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""
                        },
                        "value": "ERC721Enumerable: owner index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c",
                          "typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""
                        }
                      ],
                      "id": 11644,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16530:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16530:114:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11652,
                  "nodeType": "ExpressionStatement",
                  "src": "16530:114:18"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 11653,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11639,
                          "src": "16661:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11654,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_ownedTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 465,
                        "src": "16661:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 11656,
                      "indexExpression": {
                        "id": 11655,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11627,
                        "src": "16683:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16661:28:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 11658,
                    "indexExpression": {
                      "id": 11657,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11629,
                      "src": "16690:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16661:35:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11634,
                  "id": 11659,
                  "nodeType": "Return",
                  "src": "16654:42:18"
                }
              ]
            },
            "documentation": {
              "id": 11625,
              "nodeType": "StructuredDocumentation",
              "src": "16221:68:18",
              "text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
            },
            "functionSelector": "2f745c59",
            "id": 11661,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
            "nameLocation": "16303:19:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11631,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "16405:8:18"
            },
            "parameters": {
              "id": 11630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11627,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "16331:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11661,
                  "src": "16323:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16323:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11629,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "16346:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11661,
                  "src": "16338:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16338:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16322:30:18"
            },
            "returnParameters": {
              "id": 11634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11633,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11661,
                  "src": "16431:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16431:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16430:9:18"
            },
            "scope": 12106,
            "src": "16294:409:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13279
            ],
            "body": {
              "id": 11692,
              "nodeType": "Block",
              "src": "16903:248:18",
              "statements": [
                {
                  "assignments": [
                    11674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11674,
                      "mutability": "mutable",
                      "name": "ds",
                      "nameLocation": "16947:2:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11692,
                      "src": "16913:36:18",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage"
                      },
                      "typeName": {
                        "id": 11673,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11672,
                          "name": "LibDiamond.DiamondStorage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 709,
                          "src": "16913:25:18"
                        },
                        "referencedDeclaration": 709,
                        "src": "16913:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11678,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11675,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "16952:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 11676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "diamondStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
                      "src": "16952:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                        "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                      }
                    },
                    "id": 11677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16952:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                      "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16913:66:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11680,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11664,
                          "src": "17010:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11681,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11624,
                            "src": "17018:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 11682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17018:13:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17010:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473",
                        "id": 11684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17045:46:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc",
                          "typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""
                        },
                        "value": "ERC721Enumerable: global index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc",
                          "typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""
                        }
                      ],
                      "id": 11679,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16989:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16989:112:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11686,
                  "nodeType": "ExpressionStatement",
                  "src": "16989:112:18"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "id": 11687,
                        "name": "ds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11674,
                        "src": "17118:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                        }
                      },
                      "id": 11688,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721_allTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 472,
                      "src": "17118:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 11690,
                    "indexExpression": {
                      "id": 11689,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11664,
                      "src": "17138:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17118:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11669,
                  "id": 11691,
                  "nodeType": "Return",
                  "src": "17111:33:18"
                }
              ]
            },
            "documentation": {
              "id": 11662,
              "nodeType": "StructuredDocumentation",
              "src": "16709:61:18",
              "text": " @dev See {IERC721Enumerable-tokenByIndex}."
            },
            "functionSelector": "4f6ccce7",
            "id": 11693,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenByIndex",
            "nameLocation": "16784:12:18",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11666,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "16864:8:18"
            },
            "parameters": {
              "id": 11665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11664,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "16805:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11693,
                  "src": "16797:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16797:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16796:15:18"
            },
            "returnParameters": {
              "id": 11669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11668,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11693,
                  "src": "16890:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16890:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16889:9:18"
            },
            "scope": 12106,
            "src": "16775:376:18",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11747,
              "nodeType": "Block",
              "src": "17867:387:18",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11703,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11696,
                      "src": "17881:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 11706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17897:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 11705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "17889:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11704,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17889:7:18",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17889:10:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17881:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 11716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11714,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11696,
                        "src": "17976:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 11715,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11698,
                        "src": "17984:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "17976:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 11723,
                    "nodeType": "IfStatement",
                    "src": "17972:88:18",
                    "trueBody": {
                      "id": 11722,
                      "nodeType": "Block",
                      "src": "17988:72:18",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 11718,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11696,
                                "src": "18035:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 11719,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11700,
                                "src": "18041:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 11717,
                              "name": "_removeTokenFromOwnerEnumeration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11869,
                              "src": "18002:32:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256)"
                              }
                            },
                            "id": 11720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18002:47:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 11721,
                          "nodeType": "ExpressionStatement",
                          "src": "18002:47:18"
                        }
                      ]
                    }
                  },
                  "id": 11724,
                  "nodeType": "IfStatement",
                  "src": "17877:183:18",
                  "trueBody": {
                    "id": 11713,
                    "nodeType": "Block",
                    "src": "17901:65:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 11710,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11700,
                              "src": "17947:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11709,
                            "name": "_addTokenToAllTokensEnumeration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11903,
                            "src": "17915:31:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 11711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17915:40:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11712,
                        "nodeType": "ExpressionStatement",
                        "src": "17915:40:18"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11725,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11698,
                      "src": "18073:2:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 11728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18087:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 11727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "18079:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11726,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18079:7:18",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18079:10:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "18073:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 11738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11736,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11698,
                        "src": "18171:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 11737,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11696,
                        "src": "18177:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "18171:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 11745,
                    "nodeType": "IfStatement",
                    "src": "18167:81:18",
                    "trueBody": {
                      "id": 11744,
                      "nodeType": "Block",
                      "src": "18183:65:18",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 11740,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11698,
                                "src": "18225:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 11741,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11700,
                                "src": "18229:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 11739,
                              "name": "_addTokenToOwnerEnumeration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11790,
                              "src": "18197:27:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256)"
                              }
                            },
                            "id": 11742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18197:40:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 11743,
                          "nodeType": "ExpressionStatement",
                          "src": "18197:40:18"
                        }
                      ]
                    }
                  },
                  "id": 11746,
                  "nodeType": "IfStatement",
                  "src": "18069:179:18",
                  "trueBody": {
                    "id": 11735,
                    "nodeType": "Block",
                    "src": "18091:70:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 11732,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11700,
                              "src": "18142:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11731,
                            "name": "_removeTokenFromAllTokensEnumeration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11970,
                            "src": "18105:36:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 11733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18105:45:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11734,
                        "nodeType": "ExpressionStatement",
                        "src": "18105:45:18"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 11694,
              "nodeType": "StructuredDocumentation",
              "src": "17157:585:18",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 11748,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "17756:20:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11696,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "17794:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11748,
                  "src": "17786:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17786:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11698,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "17816:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11748,
                  "src": "17808:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17808:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11700,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "17836:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11748,
                  "src": "17828:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17828:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17776:73:18"
            },
            "returnParameters": {
              "id": 11702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17867:0:18"
            },
            "scope": 12106,
            "src": "17747:507:18",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11789,
              "nodeType": "Block",
              "src": "18622:230:18",
              "statements": [
                {
                  "assignments": [
                    11760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11760,
                      "mutability": "mutable",
                      "name": "ds",
                      "nameLocation": "18666:2:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11789,
                      "src": "18632:36:18",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage"
                      },
                      "typeName": {
                        "id": 11759,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11758,
                          "name": "LibDiamond.DiamondStorage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 709,
                          "src": "18632:25:18"
                        },
                        "referencedDeclaration": 709,
                        "src": "18632:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11764,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11761,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "18671:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 11762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "diamondStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
                      "src": "18671:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                        "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                      }
                    },
                    "id": 11763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18671:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                      "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18632:66:18"
                },
                {
                  "assignments": [
                    11766
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11766,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "18716:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11789,
                      "src": "18708:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11765,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18708:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11770,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11768,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11751,
                        "src": "18735:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11767,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10721,
                      "src": "18725:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 11769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18725:13:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18708:30:18"
                },
                {
                  "expression": {
                    "id": 11779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "expression": {
                            "id": 11771,
                            "name": "ds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11760,
                            "src": "18748:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                              "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                            }
                          },
                          "id": 11775,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "erc721_ownedTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 465,
                          "src": "18748:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 11776,
                        "indexExpression": {
                          "id": 11773,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11751,
                          "src": "18770:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18748:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 11777,
                      "indexExpression": {
                        "id": 11774,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11766,
                        "src": "18774:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18748:33:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11778,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11753,
                      "src": "18784:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18748:43:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11780,
                  "nodeType": "ExpressionStatement",
                  "src": "18748:43:18"
                },
                {
                  "expression": {
                    "id": 11787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 11781,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11760,
                          "src": "18801:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11784,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_ownedTokensIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 469,
                        "src": "18801:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 11785,
                      "indexExpression": {
                        "id": 11783,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11753,
                        "src": "18828:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18801:35:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11786,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11766,
                      "src": "18839:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18801:44:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11788,
                  "nodeType": "ExpressionStatement",
                  "src": "18801:44:18"
                }
              ]
            },
            "documentation": {
              "id": 11749,
              "nodeType": "StructuredDocumentation",
              "src": "18260:283:18",
              "text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
            },
            "id": 11790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addTokenToOwnerEnumeration",
            "nameLocation": "18557:27:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11751,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "18593:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11790,
                  "src": "18585:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18585:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11753,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "18605:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11790,
                  "src": "18597:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18597:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18584:29:18"
            },
            "returnParameters": {
              "id": 11755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18622:0:18"
            },
            "scope": 12106,
            "src": "18548:304:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 11868,
              "nodeType": "Block",
              "src": "19562:1012:18",
              "statements": [
                {
                  "assignments": [
                    11802
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11802,
                      "mutability": "mutable",
                      "name": "ds",
                      "nameLocation": "19606:2:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11868,
                      "src": "19572:36:18",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage"
                      },
                      "typeName": {
                        "id": 11801,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11800,
                          "name": "LibDiamond.DiamondStorage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 709,
                          "src": "19572:25:18"
                        },
                        "referencedDeclaration": 709,
                        "src": "19572:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11806,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11803,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "19611:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 11804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "diamondStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
                      "src": "19611:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                        "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                      }
                    },
                    "id": 11805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19611:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                      "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19572:66:18"
                },
                {
                  "assignments": [
                    11808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11808,
                      "mutability": "mutable",
                      "name": "lastTokenIndex",
                      "nameLocation": "19827:14:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11868,
                      "src": "19819:22:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11807,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19819:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11814,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 11810,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11793,
                          "src": "19854:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11809,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10721,
                        "src": "19844:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 11811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19844:15:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 11812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19862:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "19844:19:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19819:44:18"
                },
                {
                  "assignments": [
                    11816
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11816,
                      "mutability": "mutable",
                      "name": "tokenIndex",
                      "nameLocation": "19881:10:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11868,
                      "src": "19873:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11815,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19873:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11821,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "id": 11817,
                        "name": "ds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11802,
                        "src": "19894:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                        }
                      },
                      "id": 11818,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721_ownedTokensIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 469,
                      "src": "19894:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 11820,
                    "indexExpression": {
                      "id": 11819,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11795,
                      "src": "19921:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19894:35:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19873:56:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11822,
                      "name": "tokenIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11816,
                      "src": "20033:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 11823,
                      "name": "lastTokenIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11808,
                      "src": "20047:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20033:28:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11853,
                  "nodeType": "IfStatement",
                  "src": "20029:350:18",
                  "trueBody": {
                    "id": 11852,
                    "nodeType": "Block",
                    "src": "20063:316:18",
                    "statements": [
                      {
                        "assignments": [
                          11826
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 11826,
                            "mutability": "mutable",
                            "name": "lastTokenId",
                            "nameLocation": "20085:11:18",
                            "nodeType": "VariableDeclaration",
                            "scope": 11852,
                            "src": "20077:19:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 11825,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "20077:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 11833,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 11827,
                                "name": "ds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11802,
                                "src": "20099:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                                  "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                                }
                              },
                              "id": 11828,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "erc721_ownedTokens",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 465,
                              "src": "20099:21:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 11830,
                            "indexExpression": {
                              "id": 11829,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11793,
                              "src": "20121:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20099:27:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 11832,
                          "indexExpression": {
                            "id": 11831,
                            "name": "lastTokenIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11808,
                            "src": "20127:14:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20099:43:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20077:65:18"
                      },
                      {
                        "expression": {
                          "id": 11842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 11834,
                                  "name": "ds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11802,
                                  "src": "20157:2:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                                    "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                                  }
                                },
                                "id": 11838,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "erc721_ownedTokens",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 465,
                                "src": "20157:21:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 11839,
                              "indexExpression": {
                                "id": 11836,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11793,
                                "src": "20179:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20157:27:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 11840,
                            "indexExpression": {
                              "id": 11837,
                              "name": "tokenIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11816,
                              "src": "20185:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "20157:39:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 11841,
                            "name": "lastTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11826,
                            "src": "20199:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20157:53:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11843,
                        "nodeType": "ExpressionStatement",
                        "src": "20157:53:18"
                      },
                      {
                        "expression": {
                          "id": 11850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 11844,
                                "name": "ds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11802,
                                "src": "20282:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                                  "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                                }
                              },
                              "id": 11847,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "erc721_ownedTokensIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 469,
                              "src": "20282:26:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 11848,
                            "indexExpression": {
                              "id": 11846,
                              "name": "lastTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11826,
                              "src": "20309:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "20282:39:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 11849,
                            "name": "tokenIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11816,
                            "src": "20324:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20282:52:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11851,
                        "nodeType": "ExpressionStatement",
                        "src": "20282:52:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 11858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "20465:42:18",
                    "subExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 11854,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11802,
                          "src": "20472:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11855,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_ownedTokensIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 469,
                        "src": "20472:26:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 11857,
                      "indexExpression": {
                        "id": 11856,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11795,
                        "src": "20499:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20472:35:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11859,
                  "nodeType": "ExpressionStatement",
                  "src": "20465:42:18"
                },
                {
                  "expression": {
                    "id": 11866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "20517:50:18",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "expression": {
                            "id": 11860,
                            "name": "ds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11802,
                            "src": "20524:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                              "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                            }
                          },
                          "id": 11861,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "erc721_ownedTokens",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 465,
                          "src": "20524:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 11863,
                        "indexExpression": {
                          "id": 11862,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11793,
                          "src": "20546:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20524:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 11865,
                      "indexExpression": {
                        "id": 11864,
                        "name": "lastTokenIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11808,
                        "src": "20552:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20524:43:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11867,
                  "nodeType": "ExpressionStatement",
                  "src": "20517:50:18"
                }
              ]
            },
            "documentation": {
              "id": 11791,
              "nodeType": "StructuredDocumentation",
              "src": "18858:606:18",
              "text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
            },
            "id": 11869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeTokenFromOwnerEnumeration",
            "nameLocation": "19478:32:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11793,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "19519:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11869,
                  "src": "19511:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19511:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11795,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "19533:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11869,
                  "src": "19525:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19525:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19510:31:18"
            },
            "returnParameters": {
              "id": 11797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19562:0:18"
            },
            "scope": 12106,
            "src": "19469:1105:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 11902,
              "nodeType": "Block",
              "src": "20835:199:18",
              "statements": [
                {
                  "assignments": [
                    11879
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11879,
                      "mutability": "mutable",
                      "name": "ds",
                      "nameLocation": "20879:2:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11902,
                      "src": "20845:36:18",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage"
                      },
                      "typeName": {
                        "id": 11878,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11877,
                          "name": "LibDiamond.DiamondStorage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 709,
                          "src": "20845:25:18"
                        },
                        "referencedDeclaration": 709,
                        "src": "20845:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11883,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11880,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "20884:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 11881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "diamondStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
                      "src": "20884:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                        "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                      }
                    },
                    "id": 11882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20884:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                      "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20845:66:18"
                },
                {
                  "expression": {
                    "id": 11892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 11884,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11879,
                          "src": "20922:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11887,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_allTokensIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 476,
                        "src": "20922:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 11888,
                      "indexExpression": {
                        "id": 11886,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11872,
                        "src": "20947:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20922:33:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 11889,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11879,
                          "src": "20958:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11890,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_allTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 472,
                        "src": "20958:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 11891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "20958:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20922:62:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11893,
                  "nodeType": "ExpressionStatement",
                  "src": "20922:62:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11899,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11872,
                        "src": "21019:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 11894,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11879,
                          "src": "20994:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11897,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_allTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 472,
                        "src": "20994:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 11898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "20994:24:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 11900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20994:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11901,
                  "nodeType": "ExpressionStatement",
                  "src": "20994:33:18"
                }
              ]
            },
            "documentation": {
              "id": 11870,
              "nodeType": "StructuredDocumentation",
              "src": "20580:184:18",
              "text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
            },
            "id": 11903,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addTokenToAllTokensEnumeration",
            "nameLocation": "20778:31:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11872,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "20818:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11903,
                  "src": "20810:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20810:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20809:17:18"
            },
            "returnParameters": {
              "id": 11874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20835:0:18"
            },
            "scope": 12106,
            "src": "20769:265:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 11969,
              "nodeType": "Block",
              "src": "21393:1130:18",
              "statements": [
                {
                  "assignments": [
                    11913
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11913,
                      "mutability": "mutable",
                      "name": "ds",
                      "nameLocation": "21437:2:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11969,
                      "src": "21403:36:18",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                        "typeString": "struct LibDiamond.DiamondStorage"
                      },
                      "typeName": {
                        "id": 11912,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11911,
                          "name": "LibDiamond.DiamondStorage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 709,
                          "src": "21403:25:18"
                        },
                        "referencedDeclaration": 709,
                        "src": "21403:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11917,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11914,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "21442:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 11915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "diamondStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 721,
                      "src": "21442:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$709_storage_ptr_$",
                        "typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
                      }
                    },
                    "id": 11916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21442:27:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                      "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21403:66:18"
                },
                {
                  "assignments": [
                    11919
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11919,
                      "mutability": "mutable",
                      "name": "lastTokenIndex",
                      "nameLocation": "21656:14:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11969,
                      "src": "21648:22:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11918,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21648:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11925,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 11920,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11913,
                          "src": "21673:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11921,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_allTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 472,
                        "src": "21673:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 11922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "21673:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 11923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21702:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "21673:30:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21648:55:18"
                },
                {
                  "assignments": [
                    11927
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11927,
                      "mutability": "mutable",
                      "name": "tokenIndex",
                      "nameLocation": "21721:10:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11969,
                      "src": "21713:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11926,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21713:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11932,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "id": 11928,
                        "name": "ds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11913,
                        "src": "21734:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                        }
                      },
                      "id": 11929,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721_allTokensIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 476,
                      "src": "21734:24:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 11931,
                    "indexExpression": {
                      "id": 11930,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11906,
                      "src": "21759:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21734:33:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21713:54:18"
                },
                {
                  "assignments": [
                    11934
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11934,
                      "mutability": "mutable",
                      "name": "lastTokenId",
                      "nameLocation": "22097:11:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 11969,
                      "src": "22089:19:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11933,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22089:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11939,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "id": 11935,
                        "name": "ds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11913,
                        "src": "22111:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                          "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                        }
                      },
                      "id": 11936,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "erc721_allTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 472,
                      "src": "22111:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 11938,
                    "indexExpression": {
                      "id": 11937,
                      "name": "lastTokenIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11919,
                      "src": "22131:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "22111:35:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22089:57:18"
                },
                {
                  "expression": {
                    "id": 11946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 11940,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11913,
                          "src": "22157:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11943,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_allTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 472,
                        "src": "22157:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 11944,
                      "indexExpression": {
                        "id": 11942,
                        "name": "tokenIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11927,
                        "src": "22177:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22157:31:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11945,
                      "name": "lastTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11934,
                      "src": "22191:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22157:45:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11947,
                  "nodeType": "ExpressionStatement",
                  "src": "22157:45:18"
                },
                {
                  "expression": {
                    "id": 11954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 11948,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11913,
                          "src": "22270:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11951,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_allTokensIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 476,
                        "src": "22270:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 11952,
                      "indexExpression": {
                        "id": 11950,
                        "name": "lastTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11934,
                        "src": "22295:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22270:37:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11953,
                      "name": "tokenIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11927,
                      "src": "22310:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22270:50:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11955,
                  "nodeType": "ExpressionStatement",
                  "src": "22270:50:18"
                },
                {
                  "expression": {
                    "id": 11960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "22441:40:18",
                    "subExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 11956,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11913,
                          "src": "22448:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11957,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_allTokensIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 476,
                        "src": "22448:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 11959,
                      "indexExpression": {
                        "id": 11958,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11906,
                        "src": "22473:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22448:33:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11961,
                  "nodeType": "ExpressionStatement",
                  "src": "22441:40:18"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 11962,
                          "name": "ds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11913,
                          "src": "22491:2:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DiamondStorage_$709_storage_ptr",
                            "typeString": "struct LibDiamond.DiamondStorage storage pointer"
                          }
                        },
                        "id": 11965,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721_allTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 472,
                        "src": "22491:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 11966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "22491:23:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer)"
                      }
                    },
                    "id": 11967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22491:25:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11968,
                  "nodeType": "ExpressionStatement",
                  "src": "22491:25:18"
                }
              ]
            },
            "documentation": {
              "id": 11904,
              "nodeType": "StructuredDocumentation",
              "src": "21040:277:18",
              "text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
            },
            "id": 11970,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeTokenFromAllTokensEnumeration",
            "nameLocation": "21331:36:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11906,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "21376:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11970,
                  "src": "21368:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21368:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21367:17:18"
            },
            "returnParameters": {
              "id": 11908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21393:0:18"
            },
            "scope": 12106,
            "src": "21322:1201:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 11983,
              "nodeType": "Block",
              "src": "22638:55:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11980,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11973,
                        "src": "22677:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11978,
                        "name": "LibUnicornDNA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3835,
                        "src": "22655:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibUnicornDNA_$3835_$",
                          "typeString": "type(library LibUnicornDNA)"
                        }
                      },
                      "id": 11979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getDNA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2644,
                      "src": "22655:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 11981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22655:31:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11977,
                  "id": 11982,
                  "nodeType": "Return",
                  "src": "22648:38:18"
                }
              ]
            },
            "documentation": {
              "id": 11971,
              "nodeType": "StructuredDocumentation",
              "src": "22529:38:18",
              "text": " Unicorn DNA methods"
            },
            "functionSelector": "5bb209a5",
            "id": 11984,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDNA",
            "nameLocation": "22581:6:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11973,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "22596:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 11984,
                  "src": "22588:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22588:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22587:18:18"
            },
            "returnParameters": {
              "id": 11977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11976,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11984,
                  "src": "22629:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22629:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22628:9:18"
            },
            "scope": 12106,
            "src": "22572:121:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12070,
              "nodeType": "Block",
              "src": "22810:719:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11994,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11986,
                          "src": "22841:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 11995,
                            "name": "LibDiamond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1805,
                            "src": "22853:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                              "typeString": "type(library LibDiamond)"
                            }
                          },
                          "id": 11996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ERC721_GENESIS_TOKENS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 419,
                          "src": "22853:32:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "22841:44:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231576974684469616d6f6e6453746f726167653a2043616e206f6e6c792073657420444e4120666f722067656e6573697320746f6b656e73",
                        "id": 11998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22899:63:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_659ab66da585a076bf01ea6dad7c29fc6da70361ab33d4de41413f425daa36a3",
                          "typeString": "literal_string \"ERC721WithDiamondStorage: Can only set DNA for genesis tokens\""
                        },
                        "value": "ERC721WithDiamondStorage: Can only set DNA for genesis tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_659ab66da585a076bf01ea6dad7c29fc6da70361ab33d4de41413f425daa36a3",
                          "typeString": "literal_string \"ERC721WithDiamondStorage: Can only set DNA for genesis tokens\""
                        }
                      ],
                      "id": 11993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22820:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22820:152:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12000,
                  "nodeType": "ExpressionStatement",
                  "src": "22820:152:18"
                },
                {
                  "assignments": [
                    12002
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12002,
                      "mutability": "mutable",
                      "name": "dna",
                      "nameLocation": "22990:3:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 12070,
                      "src": "22982:11:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12001,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22982:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12004,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 12003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "22996:1:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22982:15:18"
                },
                {
                  "expression": {
                    "id": 12013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12005,
                      "name": "dna",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12002,
                      "src": "23007:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12008,
                          "name": "dna",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12002,
                          "src": "23039:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 12009,
                              "name": "LibUnicornDNA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3835,
                              "src": "23044:13:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LibUnicornDNA_$3835_$",
                                "typeString": "type(library LibUnicornDNA)"
                              }
                            },
                            "id": 12010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_targetDNAVersion",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2711,
                            "src": "23044:31:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 12011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23044:33:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 12006,
                          "name": "LibUnicornDNA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3835,
                          "src": "23013:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibUnicornDNA_$3835_$",
                            "typeString": "type(library LibUnicornDNA)"
                          }
                        },
                        "id": 12007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_setVersion",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2728,
                        "src": "23013:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 12012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23013:65:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23007:71:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12014,
                  "nodeType": "ExpressionStatement",
                  "src": "23007:71:18"
                },
                {
                  "expression": {
                    "id": 12021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12015,
                      "name": "dna",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12002,
                      "src": "23088:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12018,
                          "name": "dna",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12002,
                          "src": "23119:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 12019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23124:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 12016,
                          "name": "LibUnicornDNA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3835,
                          "src": "23094:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibUnicornDNA_$3835_$",
                            "typeString": "type(library LibUnicornDNA)"
                          }
                        },
                        "id": 12017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_setOrigin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2775,
                        "src": "23094:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                          "typeString": "function (uint256,bool) pure returns (uint256)"
                        }
                      },
                      "id": 12020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23094:35:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23088:41:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12022,
                  "nodeType": "ExpressionStatement",
                  "src": "23088:41:18"
                },
                {
                  "expression": {
                    "id": 12029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12023,
                      "name": "dna",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12002,
                      "src": "23139:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12026,
                          "name": "dna",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12002,
                          "src": "23174:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 12027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23179:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 12024,
                          "name": "LibUnicornDNA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3835,
                          "src": "23145:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibUnicornDNA_$3835_$",
                            "typeString": "type(library LibUnicornDNA)"
                          }
                        },
                        "id": 12025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_setGameLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2806,
                        "src": "23145:28:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                          "typeString": "function (uint256,bool) pure returns (uint256)"
                        }
                      },
                      "id": 12028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23145:40:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23139:46:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12030,
                  "nodeType": "ExpressionStatement",
                  "src": "23139:46:18"
                },
                {
                  "expression": {
                    "id": 12037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12031,
                      "name": "dna",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12002,
                      "src": "23195:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12034,
                          "name": "dna",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12002,
                          "src": "23234:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 12035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23239:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 12032,
                          "name": "LibUnicornDNA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3835,
                          "src": "23201:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibUnicornDNA_$3835_$",
                            "typeString": "type(library LibUnicornDNA)"
                          }
                        },
                        "id": 12033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_setLimitedEdition",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2837,
                        "src": "23201:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                          "typeString": "function (uint256,bool) pure returns (uint256)"
                        }
                      },
                      "id": 12036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23201:44:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23195:50:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12038,
                  "nodeType": "ExpressionStatement",
                  "src": "23195:50:18"
                },
                {
                  "expression": {
                    "id": 12046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12039,
                      "name": "dna",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12002,
                      "src": "23255:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12042,
                          "name": "dna",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12002,
                          "src": "23307:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 12043,
                            "name": "LibUnicornDNA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3835,
                            "src": "23324:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LibUnicornDNA_$3835_$",
                              "typeString": "type(library LibUnicornDNA)"
                            }
                          },
                          "id": 12044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "LIFECYCLE_EGG",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2609,
                          "src": "23324:27:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "expression": {
                          "id": 12040,
                          "name": "LibUnicornDNA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3835,
                          "src": "23261:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibUnicornDNA_$3835_$",
                            "typeString": "type(library LibUnicornDNA)"
                          }
                        },
                        "id": 12041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_setLifecycleStage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2868,
                        "src": "23261:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 12045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23261:100:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23255:106:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12047,
                  "nodeType": "ExpressionStatement",
                  "src": "23255:106:18"
                },
                {
                  "expression": {
                    "id": 12054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12048,
                      "name": "dna",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12002,
                      "src": "23371:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12051,
                          "name": "dna",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12002,
                          "src": "23410:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 12052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23415:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 12049,
                          "name": "LibUnicornDNA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3835,
                          "src": "23377:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibUnicornDNA_$3835_$",
                            "typeString": "type(library LibUnicornDNA)"
                          }
                        },
                        "id": 12050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_setBreedingPoints",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2899,
                        "src": "23377:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 12053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23377:40:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23371:46:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12055,
                  "nodeType": "ExpressionStatement",
                  "src": "23371:46:18"
                },
                {
                  "expression": {
                    "id": 12062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12056,
                      "name": "dna",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12002,
                      "src": "23427:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12059,
                          "name": "dna",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12002,
                          "src": "23457:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 12060,
                          "name": "_class",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11988,
                          "src": "23462:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "expression": {
                          "id": 12057,
                          "name": "LibUnicornDNA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3835,
                          "src": "23433:13:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibUnicornDNA_$3835_$",
                            "typeString": "type(library LibUnicornDNA)"
                          }
                        },
                        "id": 12058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_setClass",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2933,
                        "src": "23433:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint8) pure returns (uint256)"
                        }
                      },
                      "id": 12061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23433:36:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23427:42:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12063,
                  "nodeType": "ExpressionStatement",
                  "src": "23427:42:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12066,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11986,
                        "src": "23508:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12067,
                        "name": "dna",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12002,
                        "src": "23518:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12064,
                        "name": "LibUnicornDNA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3835,
                        "src": "23486:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibUnicornDNA_$3835_$",
                          "typeString": "type(library LibUnicornDNA)"
                        }
                      },
                      "id": 12065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setDNA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2700,
                      "src": "23486:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 12068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23486:36:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11992,
                  "id": 12069,
                  "nodeType": "Return",
                  "src": "23479:43:18"
                }
              ]
            },
            "id": 12071,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setDNAForGenesisToken",
            "nameLocation": "22708:22:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11986,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "22739:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 12071,
                  "src": "22731:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11985,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22731:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11988,
                  "mutability": "mutable",
                  "name": "_class",
                  "nameLocation": "22755:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 12071,
                  "src": "22749:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 11987,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "22749:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22730:32:18"
            },
            "returnParameters": {
              "id": 11992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11991,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12071,
                  "src": "22797:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22797:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22796:9:18"
            },
            "scope": 12106,
            "src": "22699:830:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12104,
              "nodeType": "Block",
              "src": "23632:177:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 12079,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "23642:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$1805_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 12081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "enforceIsContractOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1001,
                      "src": "23642:33:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 12082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23642:35:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12083,
                  "nodeType": "ExpressionStatement",
                  "src": "23642:35:18"
                },
                {
                  "body": {
                    "id": 12102,
                    "nodeType": "Block",
                    "src": "23734:69:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 12096,
                                "name": "_tokenIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12074,
                                "src": "23771:9:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 12098,
                              "indexExpression": {
                                "id": 12097,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12085,
                                "src": "23781:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "23771:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 12099,
                              "name": "_class",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12076,
                              "src": "23785:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 12095,
                            "name": "_setDNAForGenesisToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12071,
                            "src": "23748:22:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint8) returns (uint256)"
                            }
                          },
                          "id": 12100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23748:44:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12101,
                        "nodeType": "ExpressionStatement",
                        "src": "23748:44:18"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12088,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12085,
                      "src": "23707:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 12089,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12074,
                        "src": "23711:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 12090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "23711:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23707:20:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12103,
                  "initializationExpression": {
                    "assignments": [
                      12085
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 12085,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "23700:1:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 12103,
                        "src": "23692:9:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 12084,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23692:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 12087,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 12086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23704:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "23692:13:18"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 12093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "23729:3:18",
                      "subExpression": {
                        "id": 12092,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12085,
                        "src": "23729:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12094,
                    "nodeType": "ExpressionStatement",
                    "src": "23729:3:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "23687:116:18"
                }
              ]
            },
            "functionSelector": "fad5cdd6",
            "id": 12105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDNAForGenesisTokens",
            "nameLocation": "23544:22:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12074,
                  "mutability": "mutable",
                  "name": "_tokenIds",
                  "nameLocation": "23586:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 12105,
                  "src": "23567:28:18",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12072,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23567:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12073,
                    "nodeType": "ArrayTypeName",
                    "src": "23567:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12076,
                  "mutability": "mutable",
                  "name": "_class",
                  "nameLocation": "23603:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 12105,
                  "src": "23597:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 12075,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "23597:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23566:44:18"
            },
            "returnParameters": {
              "id": 12078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23632:0:18"
            },
            "scope": 12106,
            "src": "23535:274:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 12107,
        "src": "774:23037:18",
        "usedErrors": []
      }
    ],
    "src": "39:23773:18"
  },
  "bytecode": "608060405234801561001057600080fd5b50612e18806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80635bb209a5116100c3578063a22cb4651161007c578063a22cb46514610292578063b88d4fde146102a5578063c87b56dd146102b8578063e8a3d485146102cb578063e985e9c5146102d3578063fad5cdd6146102e657600080fd5b80635bb209a5146102415780636352211e146102545780636b87d24c146102675780636c4b91341461026f57806370a082311461027757806395d89b411461028a57600080fd5b8063234a4b9b11610115578063234a4b9b146101e557806323b872dd146101ed5780632964502d146102005780632f745c591461020857806342842e0e1461021b5780634f6ccce71461022e57600080fd5b806301ffc9a71461015257806306fdde031461017a578063081812fc1461018f578063095ea7b3146101ba57806318160ddd146101cf575b600080fd5b6101656101603660046128dc565b6102f9565b60405190151581526020015b60405180910390f35b610182610366565b6040516101719190612946565b6101a261019d366004612959565b610401565b6040516001600160a01b039091168152602001610171565b6101cd6101c836600461298e565b610497565b005b6101d76105ad565b604051908152602001610171565b6101d76105c2565b6101cd6101fb3660046129b8565b6105d5565b6101d7610606565b6101d761021636600461298e565b610619565b6101cd6102293660046129b8565b6106be565b6101d761023c366004612959565b6106d9565b6101d761024f366004612959565b610779565b6101a2610262366004612959565b610784565b61018261080c565b6127106101d7565b6101d76102853660046129f4565b610824565b6101826108b9565b6101cd6102a0366004612a0f565b6108d1565b6101cd6102b3366004612a61565b6108e0565b6101826102c6366004612959565b610918565b610182610a34565b6101656102e1366004612b3d565b610a4c565b6101cd6102f4366004612b70565b610a89565b60006001600160e01b031982166380ac58cd60e01b148061032a57506001600160e01b03198216635b5e139f60e01b145b8061034557506001600160e01b0319821663780e9d6360e01b145b8061036057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060610370610ad1565b600e01805461037e90612bfc565b80601f01602080910402602001604051908101604052809291908181526020018280546103aa90612bfc565b80156103f75780601f106103cc576101008083540402835291602001916103f7565b820191906000526020600020905b8154815290600101906020018083116103da57829003601f168201915b5050505050905090565b600061040c82610af5565b6104725760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b61047a610ad1565b6000928352600c016020525060409020546001600160a01b031690565b60006104a282610784565b9050806001600160a01b0316836001600160a01b031614156105105760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610469565b336001600160a01b038216148061052c575061052c8133610a4c565b61059e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610469565b6105a88383610b23565b505050565b6000806105b8610ad1565b600a015492915050565b60006105cc610ad1565b60120154905090565b6105df3382610ba1565b6105fb5760405162461bcd60e51b815260040161046990612c37565b6105a8838383610c6b565b6000610610610ad1565b60130154905090565b600080610624610ad1565b905061062f84610824565b83106106915760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610469565b6001600160a01b039390931660009081526008909301602090815260408085209385529290525090205490565b6105a8838383604051806020016040528060008152506108e0565b6000806106e4610ad1565b90506106ee6105ad565b83106107515760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610469565b80600a01838154811061076657610766612c88565b9060005260206000200154915050919050565b600061036082610ecd565b60008061078f610ad1565b600084815260069190910160205260409020546001600160a01b03169050806103605760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610469565b6060610816610ad1565b601101805461037e90612bfc565b60006001600160a01b03821661088f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610469565b610897610ad1565b6001600160a01b03909216600090815260079290920160205250604090205490565b60606108c3610ad1565b600f01805461037e90612bfc565b6108dc338383610f02565b5050565b6108ea3383610ba1565b6109065760405162461bcd60e51b815260040161046990612c37565b61091284848484610fe5565b50505050565b606061092382610af5565b6109875760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610469565b6000610991610ad1565b60008481526014919091016020526040902080546109ae90612bfc565b80601f01602080910402602001604051908101604052809291908181526020018280546109da90612bfc565b8015610a275780601f106109fc57610100808354040283529160200191610a27565b820191906000526020600020905b815481529060010190602001808311610a0a57829003601f168201915b5093979650505050505050565b6060610a3e610ad1565b601001805461037e90612bfc565b6000610a56610ad1565b6001600160a01b039384166000908152600d91909101602090815260408083209490951682529290925250205460ff1690565b610a91611018565b60005b8281101561091257610abe848483818110610ab157610ab1612c88565b9050602002013583611088565b5080610ac981612cb4565b915050610a94565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b600080610b00610ad1565b60009384526006016020526040909220546001600160a01b031690911415919050565b6000610b2d610ad1565b6000838152600c82016020526040902080546001600160a01b0319166001600160a01b0386169081179091559091508290610b6782610784565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610bac82610af5565b610c0d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610469565b6000610c1883610784565b9050806001600160a01b0316846001600160a01b03161480610c535750836001600160a01b0316610c4884610401565b6001600160a01b0316145b80610c635750610c638185610a4c565b949350505050565b826001600160a01b0316610c7e82610784565b6001600160a01b031614610ce65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610469565b6001600160a01b038216610d485760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610469565b610d518161116e565b610de95760405162461bcd60e51b815260206004820152605e60248201527f455243373231576974684469616d6f6e6453746f726167653a2043616e6e6f7460448201527f207472616e73666572206120556e69636f726e206c6f636b656420696e20676160648201527f6d65206f7220636f6f6c696e6720646f776e2066726f6d20756e6c6f636b0000608482015260a401610469565b610df48383836111c6565b610dff600082610b23565b6000610e09610ad1565b6001600160a01b038516600090815260078201602052604081208054929350600192909190610e39908490612ccf565b90915550506001600160a01b03831660009081526007820160205260408120805460019290610e69908490612ce6565b9091555050600082815260068201602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a450505050565b6000610ed88261123f565b15610ee65761036082611343565b610eee610ad1565b600092835260180160205250604090205490565b816001600160a01b0316836001600160a01b03161415610f645760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610469565b6000610f6e610ad1565b6001600160a01b038581166000818152600d84016020908152604080832094891680845294825291829020805460ff19168815159081179091559151918252939450919290917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b610ff0848484610c6b565b610ffc84848484611d59565b6109125760405162461bcd60e51b815260040161046990612cfe565b611020610ad1565b600401546001600160a01b031633146110865760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b6064820152608401610469565b565b60006127108311156111025760405162461bcd60e51b815260206004820152603d60248201527f455243373231576974684469616d6f6e6453746f726167653a2043616e206f6e60448201527f6c792073657420444e4120666f722067656e6573697320746f6b656e730000006064820152608401610469565b600061111581611110611e66565b611e79565b9050611122816001611e8e565b905061112f816000611e9d565b905061113c816000611eac565b9050611149816000611ebb565b9050611156816000611eca565b90506111628184611eda565b9050610c638482611eed565b600061118161117c83610ecd565b611fa0565b1561118e57506000919050565b6000611198610ad1565b603981015460008581526038830160205260408120549293509142916111bd91612ce6565b10949350505050565b6001600160a01b0383166111e2576111dd81611fae565b611205565b816001600160a01b0316836001600160a01b031614611205576112058382611fe7565b6001600160a01b03821661121c576105a88161209c565b826001600160a01b0316826001600160a01b0316146105a8576105a88282612165565b600061124a826121b5565b801561125c575061125a826121ce565b155b1561133b5760008281527ffdccebc9c7798f16c9158af32c6bb14bb2526bcd260561cab5771cff2fa8ad9660209081526040808320548084527ffdccebc9c7798f16c9158af32c6bb14bb2526bcd260561cab5771cff2fa8ad908352818420548085527ffdccebc9c7798f16c9158af32c6bb14bb2526bcd260561cab5771cff2fa8ad949093529220547ffdccebc9c7798f16c9158af32c6bb14bb2526bcd260561cab5771cff2fa8ad8e929190158015906113275750600081815260068401602052604090205443115b1561133757506001949350505050565b5050505b506000919050565b600061134e826121ce565b1561139b5760405162461bcd60e51b815260206004820152601a60248201527f4c69624861746368696e673a20524e47206e6f742072656164790000000000006044820152606401610469565b6113a4826121b5565b6113f05760405162461bcd60e51b815260206004820181905260248201527f4c69624861746368696e673a2057616974696e6720666f72205652462054544c6044820152606401610469565b60008281527ffdccebc9c7798f16c9158af32c6bb14bb2526bcd260561cab5771cff2fa8ad96602090815260408083205483527ffdccebc9c7798f16c9158af32c6bb14bb2526bcd260561cab5771cff2fa8ad908252808320548084527ffdccebc9c7798f16c9158af32c6bb14bb2526bcd260561cab5771cff2fa8ad94909252909120547ffdccebc9c7798f16c9158af32c6bb14bb2526bcd260561cab5771cff2fa8ad8e91906114e45760405162461bcd60e51b815260206004820152601760248201527f4c69624861746368696e673a204e6f20524e47207365740000000000000000006044820152606401610469565b6000818152600683016020526040902054431161155f5760405162461bcd60e51b815260206004820152603360248201527f4c69624861746368696e673a2050726564696374696f6e206d61736b656420646044820152727572696e6720524e472073657420626c6f636b60681b6064820152608401610469565b600061156a856121e7565b90506000611577826121f1565b146115d85760405162461bcd60e51b815260206004820152602b60248201527f4c69624861746368696e673a20444e412068617320616c72656164792062656560448201526a1b881c195c9cda5cdd195960aa1b6064820152608401610469565b60006115e3826121ff565b60ff16905060006115f2610ad1565b6000888152603a8201602052604081209192509061161390825b0154610ecd565b6000898152603a84016020526040812091925090611631908261160c565b9050600061163e836121ff565b60ff16851490506000611650836121ff565b60ff1686149050600082806116625750815b905061166f886001611ebb565b60008a815260048c01602090815260408083205460058f01909252822054929a5091908380156116ab5750826116a961271084600b61220e565b105b15611747578580156116ba5750845b156116e2576116cc600283600c61220e565b6001146116d957866116db565b875b90506116f2565b856116ed57866116ef565b875b90505b6117048b6116ff83612250565b612260565b9a506117188b61171383612271565b612282565b9a5061172c8b61172783612294565b6122a6565b9a506117408b61173b836122b9565b6122cc565b9a506117b0565b6117748b8a60260160006117608d8f600189600d6122e0565b815260200190815260200160002054612260565b9a506117878b6117138b8d86600e612483565b9a5061179a8b6117278b8d86600f612483565b9a506117ad8b61173b8b8d866010612483565b9a505b8380156117c95750826117c761271084601561220e565b105b15611865578580156117d85750845b15611800576117ea600283601661220e565b6001146117f757866117f9565b875b9050611810565b8561180b578661180d565b875b90505b6118228b61181d83612595565b6125a5565b9a506118368b611831836125b6565b6125c6565b9a5061184a8b611845836125d7565b6125e7565b9a5061185e8b611859836125f8565b612608565b9a506118ce565b6118928b8a602601600061187e8d8f60028960176122e0565b8152602001908152602001600020546125a5565b9a506118a58b6118318b8d866018612483565b9a506118b88b6118458b8d866019612483565b9a506118cb8b6118598b8d86601a612483565b9a505b8380156118e75750826118e561271084601f61220e565b105b15611983578580156118f65750845b1561191e57611908600283602061220e565b6001146119155786611917565b875b905061192e565b85611929578661192b565b875b90505b6119408b61193b83612619565b612629565b9a506119548b61194f8361263a565b61264a565b9a506119688b6119638361265b565b61266b565b9a5061197c8b6119778361267c565b61268c565b9a506119ec565b6119b08b8a602601600061199c8d8f60038960216122e0565b815260200190815260200160002054612629565b9a506119c38b61194f8b8d866022612483565b9a506119d68b6119638b8d866023612483565b9a506119e98b6119778b8d866024612483565b9a505b838015611a05575082611a0361271084602961220e565b105b15611aa157858015611a145750845b15611a3c57611a26600283602a61220e565b600114611a335786611a35565b875b9050611a4c565b85611a475786611a49565b875b90505b611a5e8b611a598361269d565b6126ad565b9a50611a728b611a6d836126be565b6126ce565b9a50611a868b611a81836126df565b6126ef565b9a50611a9a8b611a9583612700565b612710565b9a50611b0a565b611ace8b8a6026016000611aba8d8f600489602b6122e0565b8152602001908152602001600020546126ad565b9a50611ae18b611a6d8b8d86602c612483565b9a50611af48b611a818b8d86602d612483565b9a50611b078b611a958b8d86602e612483565b9a505b838015611b23575082611b2161271084603361220e565b105b15611bbf57858015611b325750845b15611b5a57611b44600283603461220e565b600114611b515786611b53565b875b9050611b6a565b85611b655786611b67565b875b90505b611b7c8b611b7783612721565b612731565b9a50611b908b611b8b83612742565b612752565b9a50611ba48b611b9f83612763565b612773565b9a50611bb88b611bb383612784565b612794565b9a50611c28565b611bec8b8a6026016000611bd88d8f60058960356122e0565b815260200190815260200160002054612731565b9a50611bff8b611b8b8b8d866036612483565b9a50611c128b611b9f8b8d866037612483565b9a50611c258b611bb38b8d866038612483565b9a505b838015611c41575082611c3f61271084603d61220e565b105b15611cdd57858015611c505750845b15611c7857611c62600283603e61220e565b600114611c6f5786611c71565b875b9050611c88565b85611c835786611c85565b875b90505b611c9a8b611c95836127a5565b6127b5565b9a50611cae8b611ca9836127c6565b6127d6565b9a50611cc28b611cbd836127e7565b6127f7565b9a50611cd68b611cd183612808565b612818565b9a50611d46565b611d0a8b8a6026016000611cf68d8f600689603f6122e0565b8152602001908152602001600020546127b5565b9a50611d1d8b611ca98b8d866040612483565b9a50611d308b611cbd8b8d866041612483565b9a50611d438b611cd18b8d866042612483565b9a505b50989d9c50505050505050505050505050565b60006001600160a01b0384163b15611e5b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611d9d903390899088908890600401612d50565b602060405180830381600087803b158015611db757600080fd5b505af1925050508015611de7575060408051601f3d908101601f19168201909252611de491810190612d8d565b60015b611e41573d808015611e15576040519150601f19603f3d011682016040523d82523d6000602084013e611e1a565b606091505b508051611e395760405162461bcd60e51b815260040161046990612cfe565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c63565b506001949350505050565b6000611e70610ad1565b60410154905090565b6000611e87838360ff612825565b9392505050565b6000611e878383610100612849565b6000611e878383610200612849565b6000611e878383610400612849565b6000611e878383611800612825565b6000611e8783836201e000612825565b6000611e87838360ff16621e0000612825565b6000808211611f3e5760405162461bcd60e51b815260206004820152601f60248201527f4c6962556e69636f726e444e413a2063616e6e6f7420736574203020444e41006044820152606401610469565b6000611f48610ad1565b600085815260188201602090815260409182902086905581518781529081018690529192507f9224d149facb2ec112bf239305994586c3a09a1776770edcaf18f1ec3a4596b1910160405180910390a1509092915050565b600061020082161515610360565b6000611fb8610ad1565b600a810180546000858152600b9093016020908152604084208290556001820183559183529120019190915550565b6000611ff1610ad1565b90506000600161200085610824565b61200a9190612ccf565b6000848152600984016020526040902054909150808214612063576001600160a01b0385166000908152600884016020908152604080832085845282528083205484845281842081905583526009860190915290208190555b50600092835260098201602090815260408085208590556001600160a01b03909516845260089092018252838320908352905290812055565b60006120a6610ad1565b600a8101549091506000906120bd90600190612ccf565b6000848152600b84016020526040812054600a850180549394509092849081106120e9576120e9612c88565b906000526020600020015490508084600a01838154811061210c5761210c612c88565b6000918252602080832090910192909255828152600b86019091526040808220849055868252812055600a840180548061214857612148612daa565b600190038181906000526020600020016000905590555050505050565b600061216f610ad1565b9050600061217c84610824565b6001600160a01b039094166000908152600883016020908152604080832087845282528083208690559482526009909301909252502055565b6000806121c183612867565b9050608081161515611e87565b6000806121da83612867565b9050604081161515611e87565b6000610eee610ad1565b600061036082611800612887565b600061036082621e0000612887565b600083838360405160200161222d929190918252602082015260400190565b6040516020818303038152906040528051906020012060001c610c639190612dc0565b600061036082631fe00000612887565b6000611e878383631fe00000612825565b600061036082641fe0000000612887565b6000611e878383641fe0000000612825565b600061036082651fe000000000612887565b6000611e878383651fe000000000612825565b600061036082661fe00000000000612887565b6000611e878383661fe00000000000612825565b6000848152602986016020908152604080832086845290915281205481805b8281101561237457600088815260298a01602090815260408083208a845290915281208054602b8c019291908490811061233b5761233b612c88565b9060005260206000200154815260200190815260200160002054826123609190612ce6565b91508061236c81612cb4565b9150506122ff565b50600061238282878761220e565b61238d906001612ce6565b90506000805b8481101561241d5760008a815260298c01602090815260408083208c845290915281208054839081106123c8576123c8612c88565b6000918252602080832090910154808352602b8f019091526040909120549091506123f38185612ce6565b935083851161240a5750955061247a945050505050565b50508061241690612cb4565b9050612393565b5060405162461bcd60e51b815260206004820152602b60248201527f4861746368696e6746616365743a204661696c65642067657474696e6720524e60448201526a4720626f6479706172747360a81b6064820152608401610469565b95945050505050565b60008381526021850160209081526040808320546022880190925282205482906124ae90868661220e565b6124b9906001612ce6565b90506000805b8381101561253d57600088815260218a01602052604081208054839081106124e9576124e9612c88565b9060005260206000200154905089602301600082815260200190815260200160002054836125179190612ce6565b925082841161252c579450610c639350505050565b5061253681612cb4565b90506124bf565b5060405162461bcd60e51b815260206004820152602660248201527f4861746368696e6746616365743a204661696c65642067657474696e6720524e604482015265472067656e6560d01b6064820152608401610469565b60006103608260ff60351b612887565b6000611e87838360ff60351b612825565b60006103608260ff603d1b612887565b6000611e87838360ff603d1b612825565b60006103608260ff60451b612887565b6000611e87838360ff60451b612825565b60006103608260ff604d1b612887565b6000611e87838360ff604d1b612825565b60006103608260ff60551b612887565b6000611e87838360ff60551b612825565b60006103608260ff605d1b612887565b6000611e87838360ff605d1b612825565b60006103608260ff60651b612887565b6000611e87838360ff60651b612825565b60006103608260ff606d1b612887565b6000611e87838360ff606d1b612825565b60006103608260ff60751b612887565b6000611e87838360ff60751b612825565b60006103608260ff607d1b612887565b6000611e87838360ff607d1b612825565b60006103608260ff60851b612887565b6000611e87838360ff60851b612825565b60006103608260ff608d1b612887565b6000611e87838360ff608d1b612825565b60006103608260ff60951b612887565b6000611e87838360ff60951b612825565b60006103608260ff609d1b612887565b6000611e87838360ff609d1b612825565b60006103608260ff60a51b612887565b6000611e87838360ff60a51b612825565b60006103608260ff60ad1b612887565b6000611e87838360ff60ad1b612825565b60006103608260ff60b51b612887565b6000611e87838360ff60b51b612825565b60006103608260ff60bd1b612887565b6000611e87838360ff60bd1b612825565b60006103608260ff60c51b612887565b6000611e87838360ff60c51b612825565b60006103608260ff60cd1b612887565b6000611e87838360ff60cd1b5b600080612831836128a0565b600019841886169085901b8416179150509392505050565b6000610c63848461285b57600061285e565b60015b60ff1684612825565b600080612872610ad1565b60009384526019016020525050604090205490565b600080612893836128a0565b9290931690911c92915050565b6000805b600183166103605760019290921c916128bc81612cb4565b90506128a4565b6001600160e01b0319811681146128d957600080fd5b50565b6000602082840312156128ee57600080fd5b8135611e87816128c3565b6000815180845260005b8181101561291f57602081850181015186830182015201612903565b81811115612931576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611e8760208301846128f9565b60006020828403121561296b57600080fd5b5035919050565b80356001600160a01b038116811461298957600080fd5b919050565b600080604083850312156129a157600080fd5b6129aa83612972565b946020939093013593505050565b6000806000606084860312156129cd57600080fd5b6129d684612972565b92506129e460208501612972565b9150604084013590509250925092565b600060208284031215612a0657600080fd5b611e8782612972565b60008060408385031215612a2257600080fd5b612a2b83612972565b915060208301358015158114612a4057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215612a7757600080fd5b612a8085612972565b9350612a8e60208601612972565b925060408501359150606085013567ffffffffffffffff80821115612ab257600080fd5b818701915087601f830112612ac657600080fd5b813581811115612ad857612ad8612a4b565b604051601f8201601f19908116603f01168101908382118183101715612b0057612b00612a4b565b816040528281528a6020848701011115612b1957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215612b5057600080fd5b612b5983612972565b9150612b6760208401612972565b90509250929050565b600080600060408486031215612b8557600080fd5b833567ffffffffffffffff80821115612b9d57600080fd5b818601915086601f830112612bb157600080fd5b813581811115612bc057600080fd5b8760208260051b8501011115612bd557600080fd5b6020928301955093505084013560ff81168114612bf157600080fd5b809150509250925092565b600181811c90821680612c1057607f821691505b60208210811415612c3157634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415612cc857612cc8612c9e565b5060010190565b600082821015612ce157612ce1612c9e565b500390565b60008219821115612cf957612cf9612c9e565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612d83908301846128f9565b9695505050505050565b600060208284031215612d9f57600080fd5b8151611e87816128c3565b634e487b7160e01b600052603160045260246000fd5b600082612ddd57634e487b7160e01b600052601260045260246000fd5b50069056fea26469706673582212205dc999c69aa53b0afdf6b71bb681fe00f2cdd16417e9c4ec8d757eeb740af96864736f6c63430008090033",
  "bytecodeSha1": "63caacf96ea119302650efd41c1ceb12b8579aa5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "ERC721WithDiamondStorage",
  "coverageMap": {
    "branches": {
      "11": {},
      "12": {},
      "13": {},
      "18": {
        "ERC721WithDiamondStorage._beforeTokenTransfer": {
          "257": [
            17881,
            17899,
            false
          ],
          "258": [
            17976,
            17986,
            false
          ],
          "259": [
            18073,
            18089,
            false
          ],
          "260": [
            18171,
            18181,
            false
          ]
        },
        "ERC721WithDiamondStorage._isApprovedOrOwner": {
          "250": [
            9107,
            9123,
            true
          ]
        },
        "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration": {
          "261": [
            20033,
            20061,
            false
          ]
        },
        "ERC721WithDiamondStorage._safeTransfer": {
          "255": [
            8190,
            8238,
            true
          ]
        },
        "ERC721WithDiamondStorage._setApprovalForAll": {
          "254": [
            14045,
            14062,
            true
          ]
        },
        "ERC721WithDiamondStorage._setDNAForGenesisToken": {
          "256": [
            22841,
            22885,
            true
          ]
        },
        "ERC721WithDiamondStorage._transfer": {
          "251": [
            12613,
            12662,
            true
          ],
          "252": [
            12747,
            12763,
            true
          ],
          "253": [
            12835,
            12881,
            true
          ]
        },
        "ERC721WithDiamondStorage.approve": {
          "240": [
            4829,
            4840,
            true
          ],
          "241": [
            4910,
            4931,
            true
          ],
          "242": [
            4935,
            4972,
            true
          ]
        },
        "ERC721WithDiamondStorage.balanceOf": {
          "247": [
            1647,
            1666,
            true
          ]
        },
        "ERC721WithDiamondStorage.getApproved": {
          "239": [
            5314,
            5330,
            true
          ]
        },
        "ERC721WithDiamondStorage.ownerOf": {
          "246": [
            2097,
            2116,
            true
          ]
        },
        "ERC721WithDiamondStorage.safeTransferFrom": {
          "248": [
            6946,
            6987,
            true
          ]
        },
        "ERC721WithDiamondStorage.tokenByIndex": {
          "245": [
            17010,
            17031,
            true
          ]
        },
        "ERC721WithDiamondStorage.tokenOfOwnerByIndex": {
          "244": [
            16551,
            16575,
            true
          ]
        },
        "ERC721WithDiamondStorage.tokenURI": {
          "249": [
            4021,
            4037,
            true
          ]
        },
        "ERC721WithDiamondStorage.transferFrom": {
          "243": [
            6291,
            6332,
            true
          ]
        }
      },
      "2": {},
      "21": {
        "LibBin.splice": {
          "262": [
            1580,
            1590,
            true
          ]
        }
      },
      "22": {
        "LibDiamond.enforceIsContractOwner": {
          "263": [
            12238,
            12282,
            true
          ]
        }
      },
      "23": {
        "LibHatching.getRandomGeneId": {
          "307": [
            19576,
            19602,
            false
          ]
        },
        "LibHatching.getRandomPartId": {
          "306": [
            18857,
            18883,
            false
          ]
        },
        "LibHatching.predictBabyDNA": {
          "267": [
            8035,
            8079,
            true
          ],
          "268": [
            8128,
            8183,
            true
          ],
          "269": [
            8690,
            8758,
            true
          ],
          "270": [
            9677,
            9696,
            false
          ],
          "271": [
            9700,
            9761,
            false
          ],
          "272": [
            9805,
            9823,
            false
          ],
          "273": [
            9827,
            9846,
            false
          ],
          "274": [
            9881,
            9923,
            true
          ],
          "275": [
            10012,
            10030,
            true
          ],
          "276": [
            11026,
            11045,
            false
          ],
          "277": [
            11049,
            11110,
            false
          ],
          "278": [
            11154,
            11172,
            false
          ],
          "279": [
            11176,
            11195,
            false
          ],
          "280": [
            11230,
            11272,
            true
          ],
          "281": [
            11361,
            11379,
            true
          ],
          "282": [
            12375,
            12394,
            false
          ],
          "283": [
            12398,
            12459,
            false
          ],
          "284": [
            12503,
            12521,
            false
          ],
          "285": [
            12525,
            12544,
            false
          ],
          "286": [
            12579,
            12621,
            true
          ],
          "287": [
            12710,
            12728,
            true
          ],
          "288": [
            13726,
            13745,
            false
          ],
          "289": [
            13749,
            13810,
            false
          ],
          "290": [
            13854,
            13872,
            false
          ],
          "291": [
            13876,
            13895,
            false
          ],
          "292": [
            13930,
            13972,
            true
          ],
          "293": [
            14061,
            14079,
            true
          ],
          "294": [
            15101,
            15120,
            false
          ],
          "295": [
            15124,
            15185,
            false
          ],
          "296": [
            15229,
            15247,
            false
          ],
          "297": [
            15251,
            15270,
            false
          ],
          "298": [
            15305,
            15347,
            true
          ],
          "299": [
            15436,
            15454,
            true
          ],
          "300": [
            16450,
            16469,
            false
          ],
          "301": [
            16473,
            16534,
            false
          ],
          "302": [
            16578,
            16596,
            false
          ],
          "303": [
            16600,
            16619,
            false
          ],
          "304": [
            16654,
            16696,
            true
          ],
          "305": [
            16785,
            16803,
            true
          ]
        },
        "LibHatching.shouldUsePredictiveDNA": {
          "264": [
            6191,
            6246,
            false
          ],
          "265": [
            6263,
            6306,
            false
          ],
          "266": [
            6564,
            6614,
            false
          ]
        }
      },
      "24": {},
      "25": {},
      "27": {
        "LibUnicornDNA._getDNA": {
          "308": [
            8889,
            8933,
            false
          ]
        },
        "LibUnicornDNA._setDNA": {
          "310": [
            9351,
            9359,
            true
          ]
        },
        "LibUnicornDNA._unicornIsTransferrable": {
          "309": [
            21121,
            21153,
            false
          ]
        }
      },
      "29": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {}
    },
    "statements": {
      "11": {
        "ERC165.supportsInterface": {
          "1": [
            864,
            911
          ]
        }
      },
      "12": {},
      "13": {},
      "18": {
        "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration": {
          "157": [
            20922,
            20984
          ],
          "158": [
            20994,
            21027
          ]
        },
        "ERC721WithDiamondStorage._addTokenToOwnerEnumeration": {
          "167": [
            18748,
            18791
          ],
          "168": [
            18801,
            18845
          ]
        },
        "ERC721WithDiamondStorage._approve": {
          "35": [
            13645,
            13683
          ],
          "36": [
            13693,
            13762
          ]
        },
        "ERC721WithDiamondStorage._beforeTokenTransfer": {
          "66": [
            17915,
            17955
          ],
          "67": [
            18002,
            18049
          ],
          "68": [
            18105,
            18150
          ],
          "69": [
            18197,
            18237
          ]
        },
        "ERC721WithDiamondStorage._checkOnERC721Received": {
          "140": [
            15461,
            15567
          ],
          "141": [
            15295,
            15353
          ],
          "142": [
            15839,
            15850
          ]
        },
        "ERC721WithDiamondStorage._exists": {
          "34": [
            8705,
            8776
          ]
        },
        "ERC721WithDiamondStorage._isApprovedOrOwner": {
          "37": [
            9086,
            9193
          ],
          "38": [
            9270,
            9390
          ]
        },
        "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration": {
          "163": [
            22157,
            22202
          ],
          "164": [
            22270,
            22320
          ],
          "165": [
            22441,
            22481
          ],
          "166": [
            22491,
            22516
          ]
        },
        "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration": {
          "159": [
            20157,
            20210
          ],
          "160": [
            20282,
            20334
          ],
          "161": [
            20465,
            20507
          ],
          "162": [
            20517,
            20567
          ]
        },
        "ERC721WithDiamondStorage._safeTransfer": {
          "53": [
            8131,
            8159
          ],
          "54": [
            8169,
            8314
          ]
        },
        "ERC721WithDiamondStorage._setApprovalForAll": {
          "50": [
            14037,
            14092
          ],
          "51": [
            14178,
            14233
          ],
          "52": [
            14243,
            14289
          ]
        },
        "ERC721WithDiamondStorage._setDNAForGenesisToken": {
          "56": [
            22820,
            22972
          ],
          "57": [
            23007,
            23078
          ],
          "58": [
            23088,
            23129
          ],
          "59": [
            23139,
            23185
          ],
          "60": [
            23195,
            23245
          ],
          "61": [
            23255,
            23361
          ],
          "62": [
            23371,
            23417
          ],
          "63": [
            23427,
            23469
          ],
          "64": [
            23479,
            23522
          ]
        },
        "ERC721WithDiamondStorage._transfer": {
          "39": [
            12592,
            12729
          ],
          "40": [
            12739,
            12804
          ],
          "41": [
            12814,
            13001
          ],
          "42": [
            13012,
            13051
          ],
          "43": [
            13113,
            13142
          ],
          "44": [
            13228,
            13257
          ],
          "45": [
            13267,
            13294
          ],
          "46": [
            13304,
            13334
          ],
          "47": [
            13345,
            13377
          ]
        },
        "ERC721WithDiamondStorage.approve": {
          "5": [
            4821,
            4878
          ],
          "7": [
            4889,
            5054
          ],
          "8": [
            5065,
            5086
          ]
        },
        "ERC721WithDiamondStorage.balanceOf": {
          "22": [
            1626,
            1734
          ],
          "23": [
            1744,
            1801
          ]
        },
        "ERC721WithDiamondStorage.contractURI": {
          "29": [
            2808,
            2861
          ]
        },
        "ERC721WithDiamondStorage.getApproved": {
          "3": [
            5293,
            5400
          ],
          "4": [
            5411,
            5476
          ]
        },
        "ERC721WithDiamondStorage.getDNA": {
          "19": [
            22648,
            22686
          ]
        },
        "ERC721WithDiamondStorage.isApprovedForAll": {
          "30": [
            5954,
            6072
          ]
        },
        "ERC721WithDiamondStorage.license": {
          "21": [
            3034,
            3086
          ]
        },
        "ERC721WithDiamondStorage.name": {
          "2": [
            2353,
            2399
          ]
        },
        "ERC721WithDiamondStorage.ownerOf": {
          "20": [
            2076,
            2183
          ]
        },
        "ERC721WithDiamondStorage.presaleHatchingUnlockTime": {
          "13": [
            3507,
            3574
          ]
        },
        "ERC721WithDiamondStorage.presaleUnlockTime": {
          "10": [
            3259,
            3328
          ]
        },
        "ERC721WithDiamondStorage.safeTransferFrom": {
          "16": [
            6652,
            6691
          ],
          "26": [
            6925,
            7062
          ],
          "27": [
            7072,
            7111
          ]
        },
        "ERC721WithDiamondStorage.setApprovalForAll": {
          "25": [
            5672,
            5724
          ]
        },
        "ERC721WithDiamondStorage.setDNAForGenesisTokens": {
          "31": [
            23642,
            23677
          ],
          "32": [
            23748,
            23792
          ],
          "33": [
            23729,
            23732
          ]
        },
        "ERC721WithDiamondStorage.supportsInterface": {
          "0": [
            1184,
            1425
          ]
        },
        "ERC721WithDiamondStorage.symbol": {
          "24": [
            2551,
            2599
          ]
        },
        "ERC721WithDiamondStorage.tokenByIndex": {
          "17": [
            16989,
            17101
          ],
          "18": [
            17111,
            17144
          ]
        },
        "ERC721WithDiamondStorage.tokenOfOwnerByIndex": {
          "14": [
            16530,
            16644
          ],
          "15": [
            16654,
            16696
          ]
        },
        "ERC721WithDiamondStorage.tokenURI": {
          "28": [
            4000,
            4110
          ]
        },
        "ERC721WithDiamondStorage.totalSupply": {
          "9": [
            16175,
            16208
          ]
        },
        "ERC721WithDiamondStorage.transferFrom": {
          "11": [
            6270,
            6407
          ],
          "12": [
            6418,
            6446
          ]
        }
      },
      "2": {},
      "21": {
        "LibBin._getShiftAmount": {
          "237": [
            563,
            574
          ],
          "238": [
            588,
            595
          ]
        },
        "LibBin.extract": {
          "236": [
            2047,
            2083
          ]
        },
        "LibBin.extractBool": {
          "155": [
            2277,
            2308
          ]
        },
        "LibBin.splice": {
          "233": [
            1273,
            1344
          ],
          "234": [
            1555,
            1606
          ]
        }
      },
      "22": {
        "LibDiamond.enforceIsContractOwner": {
          "55": [
            12217,
            12342
          ]
        }
      },
      "23": {
        "LibHatching.getRandomGeneId": {
          "189": [
            19513,
            19558
          ],
          "190": [
            19622,
            19635
          ],
          "191": [
            19436,
            19439
          ],
          "192": [
            19669,
            19717
          ]
        },
        "LibHatching.getRandomPartId": {
          "183": [
            18414,
            18488
          ],
          "184": [
            18395,
            18398
          ],
          "185": [
            18809,
            18839
          ],
          "186": [
            18903,
            18918
          ],
          "187": [
            18655,
            18658
          ],
          "188": [
            18952,
            19005
          ]
        },
        "LibHatching.predictBabyDNA": {
          "72": [
            8027,
            8110
          ],
          "73": [
            8120,
            8220
          ],
          "74": [
            8387,
            8473
          ],
          "75": [
            8483,
            8608
          ],
          "76": [
            8682,
            8806
          ],
          "77": [
            9383,
            9456
          ],
          "78": [
            9866,
            9958
          ],
          "79": [
            9997,
            10065
          ],
          "80": [
            10093,
            10172
          ],
          "81": [
            10186,
            10275
          ],
          "82": [
            10289,
            10374
          ],
          "83": [
            10388,
            10477
          ],
          "84": [
            10534,
            10665
          ],
          "85": [
            10679,
            10772
          ],
          "86": [
            10786,
            10877
          ],
          "87": [
            10891,
            10984
          ],
          "88": [
            11215,
            11307
          ],
          "89": [
            11346,
            11414
          ],
          "90": [
            11442,
            11521
          ],
          "91": [
            11535,
            11624
          ],
          "92": [
            11638,
            11723
          ],
          "93": [
            11737,
            11826
          ],
          "94": [
            11883,
            12014
          ],
          "95": [
            12028,
            12121
          ],
          "96": [
            12135,
            12226
          ],
          "97": [
            12240,
            12333
          ],
          "98": [
            12564,
            12656
          ],
          "99": [
            12695,
            12763
          ],
          "100": [
            12791,
            12870
          ],
          "101": [
            12884,
            12973
          ],
          "102": [
            12987,
            13072
          ],
          "103": [
            13086,
            13175
          ],
          "104": [
            13232,
            13363
          ],
          "105": [
            13377,
            13470
          ],
          "106": [
            13484,
            13575
          ],
          "107": [
            13589,
            13682
          ],
          "108": [
            13915,
            14007
          ],
          "109": [
            14046,
            14114
          ],
          "110": [
            14142,
            14225
          ],
          "111": [
            14239,
            14332
          ],
          "112": [
            14346,
            14435
          ],
          "113": [
            14449,
            14542
          ],
          "114": [
            14599,
            14734
          ],
          "115": [
            14748,
            14843
          ],
          "116": [
            14857,
            14950
          ],
          "117": [
            14964,
            15059
          ],
          "118": [
            15290,
            15382
          ],
          "119": [
            15421,
            15489
          ],
          "120": [
            15517,
            15596
          ],
          "121": [
            15610,
            15699
          ],
          "122": [
            15713,
            15798
          ],
          "123": [
            15812,
            15901
          ],
          "124": [
            15958,
            16089
          ],
          "125": [
            16103,
            16196
          ],
          "126": [
            16210,
            16301
          ],
          "127": [
            16315,
            16408
          ],
          "128": [
            16639,
            16731
          ],
          "129": [
            16770,
            16838
          ],
          "130": [
            16866,
            16945
          ],
          "131": [
            16959,
            17048
          ],
          "132": [
            17062,
            17147
          ],
          "133": [
            17161,
            17250
          ],
          "134": [
            17307,
            17438
          ],
          "135": [
            17452,
            17545
          ],
          "136": [
            17559,
            17650
          ],
          "137": [
            17664,
            17757
          ],
          "138": [
            17777,
            17787
          ]
        },
        "LibHatching.shouldUsePredictiveDNA": {
          "70": [
            6728,
            6739
          ],
          "71": [
            6773,
            6785
          ]
        }
      },
      "24": {
        "LibIdempotence._getHatchingRandomnessFulfilled": {
          "169": [
            4767,
            4840
          ]
        },
        "LibIdempotence._getHatchingStarted": {
          "170": [
            4161,
            4221
          ]
        },
        "LibIdempotence._getIdempotenceState": {
          "235": [
            2337,
            2374
          ]
        }
      },
      "25": {
        "LibRNG.expand": {
          "174": [
            3230,
            3292
          ]
        }
      },
      "27": {
        "LibUnicornDNA._getBodyMajorGene": {
          "177": [
            12940,
            12991
          ]
        },
        "LibUnicornDNA._getBodyMidGene": {
          "179": [
            13275,
            13324
          ]
        },
        "LibUnicornDNA._getBodyMinorGene": {
          "181": [
            13614,
            13665
          ]
        },
        "LibUnicornDNA._getBodyPart": {
          "175": [
            12605,
            12650
          ]
        },
        "LibUnicornDNA._getCanonicalDNA": {
          "171": [
            9168,
            9224
          ]
        },
        "LibUnicornDNA._getClass": {
          "173": [
            12281,
            12331
          ]
        },
        "LibUnicornDNA._getDNA": {
          "48": [
            8949,
            8992
          ],
          "49": [
            9013,
            9069
          ]
        },
        "LibUnicornDNA._getFaceMajorGene": {
          "195": [
            14274,
            14325
          ]
        },
        "LibUnicornDNA._getFaceMidGene": {
          "197": [
            14609,
            14658
          ]
        },
        "LibUnicornDNA._getFaceMinorGene": {
          "199": [
            14948,
            14999
          ]
        },
        "LibUnicornDNA._getFacePart": {
          "193": [
            13939,
            13984
          ]
        },
        "LibUnicornDNA._getGameLocked": {
          "156": [
            10929,
            10977
          ]
        },
        "LibUnicornDNA._getHoovesMajorGene": {
          "211": [
            15622,
            15675
          ]
        },
        "LibUnicornDNA._getHoovesMidGene": {
          "213": [
            15965,
            16016
          ]
        },
        "LibUnicornDNA._getHoovesMinorGene": {
          "215": [
            16312,
            16365
          ]
        },
        "LibUnicornDNA._getHoovesPart": {
          "209": [
            15279,
            15326
          ]
        },
        "LibUnicornDNA._getHornMajorGene": {
          "203": [
            16974,
            17025
          ]
        },
        "LibUnicornDNA._getHornMidGene": {
          "205": [
            17309,
            17358
          ]
        },
        "LibUnicornDNA._getHornMinorGene": {
          "207": [
            17648,
            17699
          ]
        },
        "LibUnicornDNA._getHornPart": {
          "201": [
            16639,
            16684
          ]
        },
        "LibUnicornDNA._getLifecycleStage": {
          "172": [
            11613,
            11665
          ]
        },
        "LibUnicornDNA._getManeMajorGene": {
          "219": [
            18308,
            18359
          ]
        },
        "LibUnicornDNA._getManeMidGene": {
          "221": [
            18643,
            18692
          ]
        },
        "LibUnicornDNA._getManeMinorGene": {
          "223": [
            18982,
            19033
          ]
        },
        "LibUnicornDNA._getManePart": {
          "217": [
            17973,
            18018
          ]
        },
        "LibUnicornDNA._getTailMajorGene": {
          "227": [
            19642,
            19693
          ]
        },
        "LibUnicornDNA._getTailMidGene": {
          "229": [
            19977,
            20026
          ]
        },
        "LibUnicornDNA._getTailMinorGene": {
          "231": [
            20316,
            20367
          ]
        },
        "LibUnicornDNA._getTailPart": {
          "225": [
            19307,
            19352
          ]
        },
        "LibUnicornDNA._setBodyMajorGene": {
          "178": [
            12788,
            12844
          ]
        },
        "LibUnicornDNA._setBodyMidGene": {
          "180": [
            13127,
            13181
          ]
        },
        "LibUnicornDNA._setBodyMinorGene": {
          "182": [
            13462,
            13518
          ]
        },
        "LibUnicornDNA._setBodyPart": {
          "176": [
            12464,
            12514
          ]
        },
        "LibUnicornDNA._setBreedingPoints": {
          "149": [
            11804,
            11861
          ]
        },
        "LibUnicornDNA._setClass": {
          "150": [
            12138,
            12195
          ]
        },
        "LibUnicornDNA._setDNA": {
          "151": [
            9343,
            9395
          ],
          "152": [
            9481,
            9512
          ],
          "153": [
            9522,
            9553
          ],
          "154": [
            9563,
            9574
          ]
        },
        "LibUnicornDNA._setFaceMajorGene": {
          "196": [
            14122,
            14178
          ]
        },
        "LibUnicornDNA._setFaceMidGene": {
          "198": [
            14461,
            14515
          ]
        },
        "LibUnicornDNA._setFaceMinorGene": {
          "200": [
            14796,
            14852
          ]
        },
        "LibUnicornDNA._setFacePart": {
          "194": [
            13798,
            13848
          ]
        },
        "LibUnicornDNA._setGameLocked": {
          "146": [
            10790,
            10839
          ]
        },
        "LibUnicornDNA._setHoovesMajorGene": {
          "212": [
            15466,
            15524
          ]
        },
        "LibUnicornDNA._setHoovesMidGene": {
          "214": [
            15813,
            15869
          ]
        },
        "LibUnicornDNA._setHoovesMinorGene": {
          "216": [
            16156,
            16214
          ]
        },
        "LibUnicornDNA._setHoovesPart": {
          "210": [
            15134,
            15186
          ]
        },
        "LibUnicornDNA._setHornMajorGene": {
          "204": [
            16822,
            16878
          ]
        },
        "LibUnicornDNA._setHornMidGene": {
          "206": [
            17161,
            17215
          ]
        },
        "LibUnicornDNA._setHornMinorGene": {
          "208": [
            17496,
            17552
          ]
        },
        "LibUnicornDNA._setHornPart": {
          "202": [
            16498,
            16548
          ]
        },
        "LibUnicornDNA._setLifecycleStage": {
          "148": [
            11459,
            11516
          ]
        },
        "LibUnicornDNA._setLimitedEdition": {
          "147": [
            11113,
            11170
          ]
        },
        "LibUnicornDNA._setManeMajorGene": {
          "220": [
            18156,
            18212
          ]
        },
        "LibUnicornDNA._setManeMidGene": {
          "222": [
            18495,
            18549
          ]
        },
        "LibUnicornDNA._setManeMinorGene": {
          "224": [
            18830,
            18886
          ]
        },
        "LibUnicornDNA._setManePart": {
          "218": [
            17832,
            17882
          ]
        },
        "LibUnicornDNA._setOrigin": {
          "145": [
            10475,
            10524
          ]
        },
        "LibUnicornDNA._setTailMajorGene": {
          "228": [
            19490,
            19546
          ]
        },
        "LibUnicornDNA._setTailMidGene": {
          "230": [
            19829,
            19883
          ]
        },
        "LibUnicornDNA._setTailMinorGene": {
          "232": [
            20164,
            20220
          ]
        },
        "LibUnicornDNA._setTailPart": {
          "226": [
            19166,
            19216
          ]
        },
        "LibUnicornDNA._setVersion": {
          "144": [
            9956,
            10008
          ]
        },
        "LibUnicornDNA._targetDNAVersion": {
          "143": [
            9771,
            9822
          ]
        },
        "LibUnicornDNA._unicornIsTransferrable": {
          "65": [
            21169,
            21181
          ]
        }
      },
      "29": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "Address.isContract": {
          "139": [
            1073,
            1088
          ]
        }
      },
      "7": {
        "Context._msgSender": {
          "6": [
            659,
            676
          ]
        }
      },
      "8": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Address",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC721Receiver",
    "LibBin",
    "LibDiamond",
    "LibHatching",
    "LibIdempotence",
    "LibRNG",
    "LibUnicornDNA",
    "LibUtil",
    "smartcontractkit/chainlink@1.0.1/LinkTokenInterface",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061014d5760003560e01c80635bb209a5116100c3578063a22cb4651161007c578063a22cb46514610292578063b88d4fde146102a5578063c87b56dd146102b8578063e8a3d485146102cb578063e985e9c5146102d3578063fad5cdd6146102e657600080fd5b80635bb209a5146102415780636352211e146102545780636b87d24c146102675780636c4b91341461026f57806370a082311461027757806395d89b411461028a57600080fd5b8063234a4b9b11610115578063234a4b9b146101e557806323b872dd146101ed5780632964502d146102005780632f745c591461020857806342842e0e1461021b5780634f6ccce71461022e57600080fd5b806301ffc9a71461015257806306fdde031461017a578063081812fc1461018f578063095ea7b3146101ba57806318160ddd146101cf575b600080fd5b6101656101603660046128dc565b6102f9565b60405190151581526020015b60405180910390f35b610182610366565b6040516101719190612946565b6101a261019d366004612959565b610401565b6040516001600160a01b039091168152602001610171565b6101cd6101c836600461298e565b610497565b005b6101d76105ad565b604051908152602001610171565b6101d76105c2565b6101cd6101fb3660046129b8565b6105d5565b6101d7610606565b6101d761021636600461298e565b610619565b6101cd6102293660046129b8565b6106be565b6101d761023c366004612959565b6106d9565b6101d761024f366004612959565b610779565b6101a2610262366004612959565b610784565b61018261080c565b6127106101d7565b6101d76102853660046129f4565b610824565b6101826108b9565b6101cd6102a0366004612a0f565b6108d1565b6101cd6102b3366004612a61565b6108e0565b6101826102c6366004612959565b610918565b610182610a34565b6101656102e1366004612b3d565b610a4c565b6101cd6102f4366004612b70565b610a89565b60006001600160e01b031982166380ac58cd60e01b148061032a57506001600160e01b03198216635b5e139f60e01b145b8061034557506001600160e01b0319821663780e9d6360e01b145b8061036057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060610370610ad1565b600e01805461037e90612bfc565b80601f01602080910402602001604051908101604052809291908181526020018280546103aa90612bfc565b80156103f75780601f106103cc576101008083540402835291602001916103f7565b820191906000526020600020905b8154815290600101906020018083116103da57829003601f168201915b5050505050905090565b600061040c82610af5565b6104725760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b61047a610ad1565b6000928352600c016020525060409020546001600160a01b031690565b60006104a282610784565b9050806001600160a01b0316836001600160a01b031614156105105760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610469565b336001600160a01b038216148061052c575061052c8133610a4c565b61059e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610469565b6105a88383610b23565b505050565b6000806105b8610ad1565b600a015492915050565b60006105cc610ad1565b60120154905090565b6105df3382610ba1565b6105fb5760405162461bcd60e51b815260040161046990612c37565b6105a8838383610c6b565b6000610610610ad1565b60130154905090565b600080610624610ad1565b905061062f84610824565b83106106915760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610469565b6001600160a01b039390931660009081526008909301602090815260408085209385529290525090205490565b6105a8838383604051806020016040528060008152506108e0565b6000806106e4610ad1565b90506106ee6105ad565b83106107515760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610469565b80600a01838154811061076657610766612c88565b9060005260206000200154915050919050565b600061036082610ecd565b60008061078f610ad1565b600084815260069190910160205260409020546001600160a01b03169050806103605760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610469565b6060610816610ad1565b601101805461037e90612bfc565b60006001600160a01b03821661088f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610469565b610897610ad1565b6001600160a01b03909216600090815260079290920160205250604090205490565b60606108c3610ad1565b600f01805461037e90612bfc565b6108dc338383610f02565b5050565b6108ea3383610ba1565b6109065760405162461bcd60e51b815260040161046990612c37565b61091284848484610fe5565b50505050565b606061092382610af5565b6109875760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610469565b6000610991610ad1565b60008481526014919091016020526040902080546109ae90612bfc565b80601f01602080910402602001604051908101604052809291908181526020018280546109da90612bfc565b8015610a275780601f106109fc57610100808354040283529160200191610a27565b820191906000526020600020905b815481529060010190602001808311610a0a57829003601f168201915b5093979650505050505050565b6060610a3e610ad1565b601001805461037e90612bfc565b6000610a56610ad1565b6001600160a01b039384166000908152600d91909101602090815260408083209490951682529290925250205460ff1690565b610a91611018565b60005b8281101561091257610abe848483818110610ab157610ab1612c88565b9050602002013583611088565b5080610ac981612cb4565b915050610a94565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b600080610b00610ad1565b60009384526006016020526040909220546001600160a01b031690911415919050565b6000610b2d610ad1565b6000838152600c82016020526040902080546001600160a01b0319166001600160a01b0386169081179091559091508290610b6782610784565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610bac82610af5565b610c0d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610469565b6000610c1883610784565b9050806001600160a01b0316846001600160a01b03161480610c535750836001600160a01b0316610c4884610401565b6001600160a01b0316145b80610c635750610c638185610a4c565b949350505050565b826001600160a01b0316610c7e82610784565b6001600160a01b031614610ce65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610469565b6001600160a01b038216610d485760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610469565b610d518161116e565b610de95760405162461bcd60e51b815260206004820152605e60248201527f455243373231576974684469616d6f6e6453746f726167653a2043616e6e6f7460448201527f207472616e73666572206120556e69636f726e206c6f636b656420696e20676160648201527f6d65206f7220636f6f6c696e6720646f776e2066726f6d20756e6c6f636b0000608482015260a401610469565b610df48383836111c6565b610dff600082610b23565b6000610e09610ad1565b6001600160a01b038516600090815260078201602052604081208054929350600192909190610e39908490612ccf565b90915550506001600160a01b03831660009081526007820160205260408120805460019290610e69908490612ce6565b9091555050600082815260068201602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a450505050565b6000610ed88261123f565b15610ee65761036082611343565b610eee610ad1565b600092835260180160205250604090205490565b816001600160a01b0316836001600160a01b03161415610f645760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610469565b6000610f6e610ad1565b6001600160a01b038581166000818152600d84016020908152604080832094891680845294825291829020805460ff19168815159081179091559151918252939450919290917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b610ff0848484610c6b565b610ffc84848484611d59565b6109125760405162461bcd60e51b815260040161046990612cfe565b611020610ad1565b600401546001600160a01b031633146110865760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b6064820152608401610469565b565b60006127108311156111025760405162461bcd60e51b815260206004820152603d60248201527f455243373231576974684469616d6f6e6453746f726167653a2043616e206f6e60448201527f6c792073657420444e4120666f722067656e6573697320746f6b656e730000006064820152608401610469565b600061111581611110611e66565b611e79565b9050611122816001611e8e565b905061112f816000611e9d565b905061113c816000611eac565b9050611149816000611ebb565b9050611156816000611eca565b90506111628184611eda565b9050610c638482611eed565b600061118161117c83610ecd565b611fa0565b1561118e57506000919050565b6000611198610ad1565b603981015460008581526038830160205260408120549293509142916111bd91612ce6565b10949350505050565b6001600160a01b0383166111e2576111dd81611fae565b611205565b816001600160a01b0316836001600160a01b031614611205576112058382611fe7565b6001600160a01b03821661121c576105a88161209c565b826001600160a01b0316826001600160a01b0316146105a8576105a88282612165565b600061124a826121b5565b801561125c575061125a826121ce565b155b1561133b5760008281527ffdccebc9c7798f16c9158af32c6bb14bb2526bcd260561cab5771cff2fa8ad9660209081526040808320548084527ffdccebc9c7798f16c9158af32c6bb14bb2526bcd260561cab5771cff2fa8ad908352818420548085527ffdccebc9c7798f16c9158af32c6bb14bb2526bcd260561cab5771cff2fa8ad949093529220547ffdccebc9c7798f16c9158af32c6bb14bb2526bcd260561cab5771cff2fa8ad8e929190158015906113275750600081815260068401602052604090205443115b1561133757506001949350505050565b5050505b506000919050565b600061134e826121ce565b1561139b5760405162461bcd60e51b815260206004820152601a60248201527f4c69624861746368696e673a20524e47206e6f742072656164790000000000006044820152606401610469565b6113a4826121b5565b6113f05760405162461bcd60e51b815260206004820181905260248201527f4c69624861746368696e673a2057616974696e6720666f72205652462054544c6044820152606401610469565b60008281527ffdccebc9c7798f16c9158af32c6bb14bb2526bcd260561cab5771cff2fa8ad96602090815260408083205483527ffdccebc9c7798f16c9158af32c6bb14bb2526bcd260561cab5771cff2fa8ad908252808320548084527ffdccebc9c7798f16c9158af32c6bb14bb2526bcd260561cab5771cff2fa8ad94909252909120547ffdccebc9c7798f16c9158af32c6bb14bb2526bcd260561cab5771cff2fa8ad8e91906114e45760405162461bcd60e51b815260206004820152601760248201527f4c69624861746368696e673a204e6f20524e47207365740000000000000000006044820152606401610469565b6000818152600683016020526040902054431161155f5760405162461bcd60e51b815260206004820152603360248201527f4c69624861746368696e673a2050726564696374696f6e206d61736b656420646044820152727572696e6720524e472073657420626c6f636b60681b6064820152608401610469565b600061156a856121e7565b90506000611577826121f1565b146115d85760405162461bcd60e51b815260206004820152602b60248201527f4c69624861746368696e673a20444e412068617320616c72656164792062656560448201526a1b881c195c9cda5cdd195960aa1b6064820152608401610469565b60006115e3826121ff565b60ff16905060006115f2610ad1565b6000888152603a8201602052604081209192509061161390825b0154610ecd565b6000898152603a84016020526040812091925090611631908261160c565b9050600061163e836121ff565b60ff16851490506000611650836121ff565b60ff1686149050600082806116625750815b905061166f886001611ebb565b60008a815260048c01602090815260408083205460058f01909252822054929a5091908380156116ab5750826116a961271084600b61220e565b105b15611747578580156116ba5750845b156116e2576116cc600283600c61220e565b6001146116d957866116db565b875b90506116f2565b856116ed57866116ef565b875b90505b6117048b6116ff83612250565b612260565b9a506117188b61171383612271565b612282565b9a5061172c8b61172783612294565b6122a6565b9a506117408b61173b836122b9565b6122cc565b9a506117b0565b6117748b8a60260160006117608d8f600189600d6122e0565b815260200190815260200160002054612260565b9a506117878b6117138b8d86600e612483565b9a5061179a8b6117278b8d86600f612483565b9a506117ad8b61173b8b8d866010612483565b9a505b8380156117c95750826117c761271084601561220e565b105b15611865578580156117d85750845b15611800576117ea600283601661220e565b6001146117f757866117f9565b875b9050611810565b8561180b578661180d565b875b90505b6118228b61181d83612595565b6125a5565b9a506118368b611831836125b6565b6125c6565b9a5061184a8b611845836125d7565b6125e7565b9a5061185e8b611859836125f8565b612608565b9a506118ce565b6118928b8a602601600061187e8d8f60028960176122e0565b8152602001908152602001600020546125a5565b9a506118a58b6118318b8d866018612483565b9a506118b88b6118458b8d866019612483565b9a506118cb8b6118598b8d86601a612483565b9a505b8380156118e75750826118e561271084601f61220e565b105b15611983578580156118f65750845b1561191e57611908600283602061220e565b6001146119155786611917565b875b905061192e565b85611929578661192b565b875b90505b6119408b61193b83612619565b612629565b9a506119548b61194f8361263a565b61264a565b9a506119688b6119638361265b565b61266b565b9a5061197c8b6119778361267c565b61268c565b9a506119ec565b6119b08b8a602601600061199c8d8f60038960216122e0565b815260200190815260200160002054612629565b9a506119c38b61194f8b8d866022612483565b9a506119d68b6119638b8d866023612483565b9a506119e98b6119778b8d866024612483565b9a505b838015611a05575082611a0361271084602961220e565b105b15611aa157858015611a145750845b15611a3c57611a26600283602a61220e565b600114611a335786611a35565b875b9050611a4c565b85611a475786611a49565b875b90505b611a5e8b611a598361269d565b6126ad565b9a50611a728b611a6d836126be565b6126ce565b9a50611a868b611a81836126df565b6126ef565b9a50611a9a8b611a9583612700565b612710565b9a50611b0a565b611ace8b8a6026016000611aba8d8f600489602b6122e0565b8152602001908152602001600020546126ad565b9a50611ae18b611a6d8b8d86602c612483565b9a50611af48b611a818b8d86602d612483565b9a50611b078b611a958b8d86602e612483565b9a505b838015611b23575082611b2161271084603361220e565b105b15611bbf57858015611b325750845b15611b5a57611b44600283603461220e565b600114611b515786611b53565b875b9050611b6a565b85611b655786611b67565b875b90505b611b7c8b611b7783612721565b612731565b9a50611b908b611b8b83612742565b612752565b9a50611ba48b611b9f83612763565b612773565b9a50611bb88b611bb383612784565b612794565b9a50611c28565b611bec8b8a6026016000611bd88d8f60058960356122e0565b815260200190815260200160002054612731565b9a50611bff8b611b8b8b8d866036612483565b9a50611c128b611b9f8b8d866037612483565b9a50611c258b611bb38b8d866038612483565b9a505b838015611c41575082611c3f61271084603d61220e565b105b15611cdd57858015611c505750845b15611c7857611c62600283603e61220e565b600114611c6f5786611c71565b875b9050611c88565b85611c835786611c85565b875b90505b611c9a8b611c95836127a5565b6127b5565b9a50611cae8b611ca9836127c6565b6127d6565b9a50611cc28b611cbd836127e7565b6127f7565b9a50611cd68b611cd183612808565b612818565b9a50611d46565b611d0a8b8a6026016000611cf68d8f600689603f6122e0565b8152602001908152602001600020546127b5565b9a50611d1d8b611ca98b8d866040612483565b9a50611d308b611cbd8b8d866041612483565b9a50611d438b611cd18b8d866042612483565b9a505b50989d9c50505050505050505050505050565b60006001600160a01b0384163b15611e5b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611d9d903390899088908890600401612d50565b602060405180830381600087803b158015611db757600080fd5b505af1925050508015611de7575060408051601f3d908101601f19168201909252611de491810190612d8d565b60015b611e41573d808015611e15576040519150601f19603f3d011682016040523d82523d6000602084013e611e1a565b606091505b508051611e395760405162461bcd60e51b815260040161046990612cfe565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c63565b506001949350505050565b6000611e70610ad1565b60410154905090565b6000611e87838360ff612825565b9392505050565b6000611e878383610100612849565b6000611e878383610200612849565b6000611e878383610400612849565b6000611e878383611800612825565b6000611e8783836201e000612825565b6000611e87838360ff16621e0000612825565b6000808211611f3e5760405162461bcd60e51b815260206004820152601f60248201527f4c6962556e69636f726e444e413a2063616e6e6f7420736574203020444e41006044820152606401610469565b6000611f48610ad1565b600085815260188201602090815260409182902086905581518781529081018690529192507f9224d149facb2ec112bf239305994586c3a09a1776770edcaf18f1ec3a4596b1910160405180910390a1509092915050565b600061020082161515610360565b6000611fb8610ad1565b600a810180546000858152600b9093016020908152604084208290556001820183559183529120019190915550565b6000611ff1610ad1565b90506000600161200085610824565b61200a9190612ccf565b6000848152600984016020526040902054909150808214612063576001600160a01b0385166000908152600884016020908152604080832085845282528083205484845281842081905583526009860190915290208190555b50600092835260098201602090815260408085208590556001600160a01b03909516845260089092018252838320908352905290812055565b60006120a6610ad1565b600a8101549091506000906120bd90600190612ccf565b6000848152600b84016020526040812054600a850180549394509092849081106120e9576120e9612c88565b906000526020600020015490508084600a01838154811061210c5761210c612c88565b6000918252602080832090910192909255828152600b86019091526040808220849055868252812055600a840180548061214857612148612daa565b600190038181906000526020600020016000905590555050505050565b600061216f610ad1565b9050600061217c84610824565b6001600160a01b039094166000908152600883016020908152604080832087845282528083208690559482526009909301909252502055565b6000806121c183612867565b9050608081161515611e87565b6000806121da83612867565b9050604081161515611e87565b6000610eee610ad1565b600061036082611800612887565b600061036082621e0000612887565b600083838360405160200161222d929190918252602082015260400190565b6040516020818303038152906040528051906020012060001c610c639190612dc0565b600061036082631fe00000612887565b6000611e878383631fe00000612825565b600061036082641fe0000000612887565b6000611e878383641fe0000000612825565b600061036082651fe000000000612887565b6000611e878383651fe000000000612825565b600061036082661fe00000000000612887565b6000611e878383661fe00000000000612825565b6000848152602986016020908152604080832086845290915281205481805b8281101561237457600088815260298a01602090815260408083208a845290915281208054602b8c019291908490811061233b5761233b612c88565b9060005260206000200154815260200190815260200160002054826123609190612ce6565b91508061236c81612cb4565b9150506122ff565b50600061238282878761220e565b61238d906001612ce6565b90506000805b8481101561241d5760008a815260298c01602090815260408083208c845290915281208054839081106123c8576123c8612c88565b6000918252602080832090910154808352602b8f019091526040909120549091506123f38185612ce6565b935083851161240a5750955061247a945050505050565b50508061241690612cb4565b9050612393565b5060405162461bcd60e51b815260206004820152602b60248201527f4861746368696e6746616365743a204661696c65642067657474696e6720524e60448201526a4720626f6479706172747360a81b6064820152608401610469565b95945050505050565b60008381526021850160209081526040808320546022880190925282205482906124ae90868661220e565b6124b9906001612ce6565b90506000805b8381101561253d57600088815260218a01602052604081208054839081106124e9576124e9612c88565b9060005260206000200154905089602301600082815260200190815260200160002054836125179190612ce6565b925082841161252c579450610c639350505050565b5061253681612cb4565b90506124bf565b5060405162461bcd60e51b815260206004820152602660248201527f4861746368696e6746616365743a204661696c65642067657474696e6720524e604482015265472067656e6560d01b6064820152608401610469565b60006103608260ff60351b612887565b6000611e87838360ff60351b612825565b60006103608260ff603d1b612887565b6000611e87838360ff603d1b612825565b60006103608260ff60451b612887565b6000611e87838360ff60451b612825565b60006103608260ff604d1b612887565b6000611e87838360ff604d1b612825565b60006103608260ff60551b612887565b6000611e87838360ff60551b612825565b60006103608260ff605d1b612887565b6000611e87838360ff605d1b612825565b60006103608260ff60651b612887565b6000611e87838360ff60651b612825565b60006103608260ff606d1b612887565b6000611e87838360ff606d1b612825565b60006103608260ff60751b612887565b6000611e87838360ff60751b612825565b60006103608260ff607d1b612887565b6000611e87838360ff607d1b612825565b60006103608260ff60851b612887565b6000611e87838360ff60851b612825565b60006103608260ff608d1b612887565b6000611e87838360ff608d1b612825565b60006103608260ff60951b612887565b6000611e87838360ff60951b612825565b60006103608260ff609d1b612887565b6000611e87838360ff609d1b612825565b60006103608260ff60a51b612887565b6000611e87838360ff60a51b612825565b60006103608260ff60ad1b612887565b6000611e87838360ff60ad1b612825565b60006103608260ff60b51b612887565b6000611e87838360ff60b51b612825565b60006103608260ff60bd1b612887565b6000611e87838360ff60bd1b612825565b60006103608260ff60c51b612887565b6000611e87838360ff60c51b612825565b60006103608260ff60cd1b612887565b6000611e87838360ff60cd1b5b600080612831836128a0565b600019841886169085901b8416179150509392505050565b6000610c63848461285b57600061285e565b60015b60ff1684612825565b600080612872610ad1565b60009384526019016020525050604090205490565b600080612893836128a0565b9290931690911c92915050565b6000805b600183166103605760019290921c916128bc81612cb4565b90506128a4565b6001600160e01b0319811681146128d957600080fd5b50565b6000602082840312156128ee57600080fd5b8135611e87816128c3565b6000815180845260005b8181101561291f57602081850181015186830182015201612903565b81811115612931576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611e8760208301846128f9565b60006020828403121561296b57600080fd5b5035919050565b80356001600160a01b038116811461298957600080fd5b919050565b600080604083850312156129a157600080fd5b6129aa83612972565b946020939093013593505050565b6000806000606084860312156129cd57600080fd5b6129d684612972565b92506129e460208501612972565b9150604084013590509250925092565b600060208284031215612a0657600080fd5b611e8782612972565b60008060408385031215612a2257600080fd5b612a2b83612972565b915060208301358015158114612a4057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215612a7757600080fd5b612a8085612972565b9350612a8e60208601612972565b925060408501359150606085013567ffffffffffffffff80821115612ab257600080fd5b818701915087601f830112612ac657600080fd5b813581811115612ad857612ad8612a4b565b604051601f8201601f19908116603f01168101908382118183101715612b0057612b00612a4b565b816040528281528a6020848701011115612b1957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215612b5057600080fd5b612b5983612972565b9150612b6760208401612972565b90509250929050565b600080600060408486031215612b8557600080fd5b833567ffffffffffffffff80821115612b9d57600080fd5b818601915086601f830112612bb157600080fd5b813581811115612bc057600080fd5b8760208260051b8501011115612bd557600080fd5b6020928301955093505084013560ff81168114612bf157600080fd5b809150509250925092565b600181811c90821680612c1057607f821691505b60208210811415612c3157634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415612cc857612cc8612c9e565b5060010190565b600082821015612ce157612ce1612c9e565b500390565b60008219821115612cf957612cf9612c9e565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612d83908301846128f9565b9695505050505050565b600060208284031215612d9f57600080fd5b8151611e87816128c3565b634e487b7160e01b600052603160045260246000fd5b600082612ddd57634e487b7160e01b600052601260045260246000fd5b50069056fea26469706673582212205dc999c69aa53b0afdf6b71bb681fe00f2cdd16417e9c4ec8d757eeb740af96864736f6c63430008090033",
  "deployedSourceMap": "774:23037:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:410;;;;;;:::i;:::-;;:::i;:::-;;;565:14:30;;558:22;540:41;;528:2;513:18;1022:410:18;;;;;;;;2274:132;;;:::i;:::-;;;;;;;:::i;5154:329::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1643:32:30;;;1625:51;;1613:2;1598:18;5154:329:18;1479:203:30;4674:419:18;;;;;;:::i;:::-;;:::i;:::-;;16019:196;;;:::i;:::-;;;2270:25:30;;;2258:2;2243:18;16019:196:18;2124:177:30;3190:145:18;;;:::i;6141:312::-;;;;;;:::i;:::-;;:::i;3430:151::-;;;:::i;16294:409::-;;;;;;:::i;:::-;;:::i;6519:179::-;;;;;;:::i;:::-;;:::i;16775:376::-;;;;;;:::i;:::-;;:::i;22572:121::-;;;;;;:::i;:::-;;:::i;1865:347::-;;;;;;:::i;:::-;;:::i;2969:124::-;;;:::i;3680:112::-;722:5:22;3680:112:18;;1491:317;;;;;;:::i;:::-;;:::i;2470:136::-;;;:::i;5550:181::-;;;;;;:::i;:::-;;:::i;6764:354::-;;;;;;:::i;:::-;;:::i;3858:396::-;;;;;;:::i;:::-;;:::i;2739:129::-;;;:::i;5797:282::-;;;;;;:::i;:::-;;:::i;23535:274::-;;;;;;:::i;:::-;;:::i;1022:410::-;1164:4;-1:-1:-1;;;;;;1203:40:18;;-1:-1:-1;;;1203:40:18;;:104;;-1:-1:-1;;;;;;;1259:48:18;;-1:-1:-1;;;1259:48:18;1203:104;:170;;;-1:-1:-1;;;;;;;1323:50:18;;-1:-1:-1;;;1323:50:18;1203:170;:222;;;-1:-1:-1;;;;;;;;;;871:40:11;;;1389:36:18;1184:241;1022:410;-1:-1:-1;;1022:410:18:o;2274:132::-;2328:13;2360:27;:25;:27::i;:::-;:39;;2353:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2274:132;:::o;5154:329::-;5270:7;5314:16;5322:7;5314;:16::i;:::-;5293:107;;;;-1:-1:-1;;;5293:107:18;;6092:2:30;5293:107:18;;;6074:21:30;6131:2;6111:18;;;6104:30;6170:34;6150:18;;;6143:62;-1:-1:-1;;;6221:18:30;;;6214:42;6273:19;;5293:107:18;;;;;;;;;5418:27;:25;:27::i;:::-;:58;;;;:49;;:58;;-1:-1:-1;5418:58:18;;;;-1:-1:-1;;;;;5418:58:18;;5154:329::o;4674:419::-;4754:13;4770:41;4803:7;4770:32;:41::i;:::-;4754:57;;4835:5;-1:-1:-1;;;;;4829:11:18;:2;-1:-1:-1;;;;;4829:11:18;;;4821:57;;;;-1:-1:-1;;;4821:57:18;;6505:2:30;4821:57:18;;;6487:21:30;6544:2;6524:18;;;6517:30;6583:34;6563:18;;;6556:62;-1:-1:-1;;;6634:18:30;;;6627:31;6675:19;;4821:57:18;6303:397:30;4821:57:18;666:10:7;-1:-1:-1;;;;;4910:21:18;;;;:62;;-1:-1:-1;4935:37:18;4952:5;666:10:7;5797:282:18;:::i;4935:37::-;4889:165;;;;-1:-1:-1;;;4889:165:18;;6907:2:30;4889:165:18;;;6889:21:30;6946:2;6926:18;;;6919:30;6985:34;6965:18;;;6958:62;7056:26;7036:18;;;7029:54;7100:19;;4889:165:18;6705:420:30;4889:165:18;5065:21;5074:2;5078:7;5065:8;:21::i;:::-;4744:349;4674:419;;:::o;16019:196::-;16080:7;16099:36;16138:27;:25;:27::i;:::-;16182:19;;:26;;16019:196;-1:-1:-1;;16019:196:18:o;3190:145::-;3240:7;3266:27;:25;:27::i;:::-;:62;;;3259:69;;3190:145;:::o;6141:312::-;6291:41;666:10:7;6324:7:18;6291:18;:41::i;:::-;6270:137;;;;-1:-1:-1;;;6270:137:18;;;;;;;:::i;:::-;6418:28;6428:4;6434:2;6438:7;6418:9;:28::i;3430:151::-;3488:7;3514:27;:25;:27::i;:::-;:60;;;3507:67;;3430:151;:::o;16294:409::-;16431:7;16454:36;16493:27;:25;:27::i;:::-;16454:66;;16559:16;16569:5;16559:9;:16::i;:::-;16551:5;:24;16530:114;;;;-1:-1:-1;;;16530:114:18;;7750:2:30;16530:114:18;;;7732:21:30;7789:2;7769:18;;;7762:30;7828:34;7808:18;;;7801:62;-1:-1:-1;;;7879:18:30;;;7872:41;7930:19;;16530:114:18;7548:407:30;16530:114:18;-1:-1:-1;;;;;16661:28:18;;;;;;;;:21;;;;:28;;;;;;;;:35;;;;;;-1:-1:-1;16661:35:18;;;;16294:409::o;6519:179::-;6652:39;6669:4;6675:2;6679:7;6652:39;;;;;;;;;;;;:16;:39::i;16775:376::-;16890:7;16913:36;16952:27;:25;:27::i;:::-;16913:66;;17018:13;:11;:13::i;:::-;17010:5;:21;16989:112;;;;-1:-1:-1;;;16989:112:18;;8162:2:30;16989:112:18;;;8144:21:30;8201:2;8181:18;;;8174:30;8240:34;8220:18;;;8213:62;-1:-1:-1;;;8291:18:30;;;8284:42;8343:19;;16989:112:18;7960:408:30;16989:112:18;17118:2;:19;;17138:5;17118:26;;;;;;;;:::i;:::-;;;;;;;;;17111:33;;;16775:376;;;:::o;22572:121::-;22629:7;22655:31;22677:8;22655:21;:31::i;1865:347::-;1977:7;2000:13;2016:27;:25;:27::i;:::-;:50;;;;:41;;;;;:50;;;;;;-1:-1:-1;;;;;2016:50:18;;-1:-1:-1;2097:19:18;2076:107;;;;-1:-1:-1;;;2076:107:18;;8707:2:30;2076:107:18;;;8689:21:30;8746:2;8726:18;;;8719:30;8785:34;8765:18;;;8758:62;-1:-1:-1;;;8836:18:30;;;8829:39;8885:19;;2076:107:18;8505:405:30;2969:124:18;3009:13;3041:27;:25;:27::i;:::-;:45;;3034:52;;;;;:::i;1491:317::-;1603:7;-1:-1:-1;;;;;1647:19:18;;1626:108;;;;-1:-1:-1;;;1626:108:18;;9117:2:30;1626:108:18;;;9099:21:30;9156:2;9136:18;;;9129:30;9195:34;9175:18;;;9168:62;-1:-1:-1;;;9246:18:30;;;9239:40;9296:19;;1626:108:18;8915:406:30;1626:108:18;1751:27;:25;:27::i;:::-;-1:-1:-1;;;;;1751:50:18;;;;;;;:43;;;;;:50;;-1:-1:-1;1751:50:18;;;;;1491:317::o;2470:136::-;2526:13;2558:27;:25;:27::i;:::-;:41;;2551:48;;;;;:::i;5550:181::-;5672:52;666:10:7;5705:8:18;5715;5672:18;:52::i;:::-;5550:181;;:::o;6764:354::-;6946:41;666:10:7;6979:7:18;6946:18;:41::i;:::-;6925:137;;;;-1:-1:-1;;;6925:137:18;;;;;;;:::i;:::-;7072:39;7086:4;7092:2;7096:7;7105:5;7072:13;:39::i;:::-;6764:354;;;;:::o;3858:396::-;3971:13;4021:16;4029:7;4021;:16::i;:::-;4000:110;;;;-1:-1:-1;;;4000:110:18;;9528:2:30;4000:110:18;;;9510:21:30;9567:2;9547:18;;;9540:30;9606:34;9586:18;;;9579:62;-1:-1:-1;;;9657:18:30;;;9650:45;9712:19;;4000:110:18;9326:411:30;4000:110:18;4120:23;4146:27;:25;:27::i;:::-;:75;;;;:44;;;;;:75;;;;;4120:101;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4120:101:18;;3858:396;-1:-1:-1;;;;;;;3858:396:18:o;2739:129::-;2783:13;2815:27;:25;:27::i;:::-;:46;;2808:53;;;;;:::i;5797:282::-;5934:4;5973:27;:25;:27::i;:::-;-1:-1:-1;;;;;5973:59:18;;;;;;;:52;;;;;:59;;;;;;;;:99;;;;;;;;;;-1:-1:-1;5973:99:18;;;;;5797:282::o;23535:274::-;23642:35;:33;:35::i;:::-;23692:9;23687:116;23707:20;;;23687:116;;;23748:44;23771:9;;23781:1;23771:12;;;;;;;:::i;:::-;;;;;;;23785:6;23748:22;:44::i;:::-;-1:-1:-1;23729:3:18;;;;:::i;:::-;;;;23687:116;;9129:281:22;572:45;;9129:281::o;8624:159:18:-;8689:4;;8712:27;:25;:27::i;:::-;:50;;;;:41;;:50;;;;;;;-1:-1:-1;;;;;8712:50:18;:64;;;;;;-1:-1:-1;8624:159:18:o;13495:274::-;13569:36;13608:27;:25;:27::i;:::-;13645:33;;;;:24;;;:33;;;;;:38;;-1:-1:-1;;;;;;13645:38:18;-1:-1:-1;;;;;13645:38:18;;;;;;;;:24;;-1:-1:-1;13645:33:18;;13707:41;13645:33;13707:32;:41::i;:::-;-1:-1:-1;;;;;13698:64:18;;;;;;;;;;;13559:210;13495:274;;:::o;8941:456::-;9066:4;9107:16;9115:7;9107;:16::i;:::-;9086:107;;;;-1:-1:-1;;;9086:107:18;;10216:2:30;9086:107:18;;;10198:21:30;10255:2;10235:18;;;10228:30;10294:34;10274:18;;;10267:62;-1:-1:-1;;;10345:18:30;;;10338:42;10397:19;;9086:107:18;10014:408:30;9086:107:18;9203:13;9219:41;9252:7;9219:32;:41::i;:::-;9203:57;;9289:5;-1:-1:-1;;;;;9278:16:18;:7;-1:-1:-1;;;;;9278:16:18;;:63;;;;9334:7;-1:-1:-1;;;;;9310:31:18;:20;9322:7;9310:11;:20::i;:::-;-1:-1:-1;;;;;9310:31:18;;9278:63;:111;;;;9357:32;9374:5;9381:7;9357:16;:32::i;:::-;9270:120;8941:456;-1:-1:-1;;;;8941:456:18:o;12473:911::-;12658:4;-1:-1:-1;;;;;12613:49:18;:41;12646:7;12613:32;:41::i;:::-;-1:-1:-1;;;;;12613:49:18;;12592:137;;;;-1:-1:-1;;;12592:137:18;;10629:2:30;12592:137:18;;;10611:21:30;10668:2;10648:18;;;10641:30;10707:34;10687:18;;;10680:62;-1:-1:-1;;;10758:18:30;;;10751:39;10807:19;;12592:137:18;10427:405:30;12592:137:18;-1:-1:-1;;;;;12747:16:18;;12739:65;;;;-1:-1:-1;;;12739:65:18;;11039:2:30;12739:65:18;;;11021:21:30;11078:2;11058:18;;;11051:30;11117:34;11097:18;;;11090:62;-1:-1:-1;;;11168:18:30;;;11161:34;11212:19;;12739:65:18;10837:400:30;12739:65:18;12835:46;12873:7;12835:37;:46::i;:::-;12814:187;;;;-1:-1:-1;;;12814:187:18;;11444:2:30;12814:187:18;;;11426:21:30;11483:2;11463:18;;;11456:30;11522:34;11502:18;;;11495:62;11593:34;11573:18;;;11566:62;11665:32;11644:19;;;11637:61;11715:19;;12814:187:18;11242:498:30;12814:187:18;13012:39;13033:4;13039:2;13043:7;13012:20;:39::i;:::-;13113:29;13130:1;13134:7;13113:8;:29::i;:::-;13152:36;13191:27;:25;:27::i;:::-;-1:-1:-1;;;;;13228:24:18;;;;;;:18;;;:24;;;;;:29;;13152:66;;-1:-1:-1;13256:1:18;;13228:24;;;:29;;13256:1;;13228:29;:::i;:::-;;;;-1:-1:-1;;;;;;;13267:22:18;;;;;;:18;;;:22;;;;;:27;;13293:1;;13267:22;:27;;13293:1;;13267:27;:::i;:::-;;;;-1:-1:-1;;13304:25:18;;;;:16;;;:25;;;;;;:30;;-1:-1:-1;;;;;;13304:30:18;-1:-1:-1;;;;;13304:30:18;;;;;;;;;13350:27;;13304:25;;13350:27;;;;;;;12582:802;12473:911;;;:::o;8808:268:27:-;8866:7;8889:44;8924:8;8889:34;:44::i;:::-;8885:118;;;8956:36;8983:8;8956:26;:36::i;8885:118::-;9020:27;:25;:27::i;:::-;:49;;;;:39;;:49;;-1:-1:-1;9020:49:27;;;;;8808:268::o;13904:392:18:-;14054:8;-1:-1:-1;;;;;14045:17:18;:5;-1:-1:-1;;;;;14045:17:18;;;14037:55;;;;-1:-1:-1;;;14037:55:18;;12210:2:30;14037:55:18;;;12192:21:30;12249:2;12229:18;;;12222:30;12288:27;12268:18;;;12261:55;12333:18;;14037:55:18;12008:349:30;14037:55:18;14102:36;14141:27;:25;:27::i;:::-;-1:-1:-1;;;;;14178:34:18;;;;;;;:27;;;:34;;;;;;;;:44;;;;;;;;;;;;;:55;;-1:-1:-1;;14178:55:18;;;;;;;;;;14248:41;;540::30;;;14178:27:18;;-1:-1:-1;14178:44:18;;:34;;14248:41;;513:18:30;14248:41:18;;;;;;;14027:269;13904:392;;;:::o;7980:341::-;8131:28;8141:4;8147:2;8151:7;8131:9;:28::i;:::-;8190:48;8213:4;8219:2;8223:7;8232:5;8190:22;:48::i;:::-;8169:145;;;;-1:-1:-1;;;8169:145:18;;;;;;;:::i;12159:190:22:-;12252:16;:14;:16::i;:::-;:30;;;-1:-1:-1;;;;;12252:30:22;12238:10;:44;12217:125;;;;-1:-1:-1;;;12217:125:22;;12983:2:30;12217:125:22;;;12965:21:30;13022:2;13002:18;;;12995:30;13061:34;13041:18;;;13034:62;-1:-1:-1;;;13112:18:30;;;13105:32;13154:19;;12217:125:22;12781:398:30;12217:125:22;12159:190::o;22699:830:18:-;22797:7;722:5:22;22841:8:18;:44;;22820:152;;;;-1:-1:-1;;;22820:152:18;;13386:2:30;22820:152:18;;;13368:21:30;13425:2;13405:18;;;13398:30;13464:34;13444:18;;;13437:62;13535:31;13515:18;;;13508:59;13584:19;;22820:152:18;13184:425:30;22820:152:18;22982:11;23013:65;23039:3;23044:33;:31;:33::i;:::-;23013:25;:65::i;:::-;23007:71;;23094:35;23119:3;23124:4;23094:24;:35::i;:::-;23088:41;;23145:40;23174:3;23179:5;23145:28;:40::i;:::-;23139:46;;23201:44;23234:3;23239:5;23201:32;:44::i;:::-;23195:50;-1:-1:-1;23261:100:18;23195:50;8645:1:27;23261:32:18;:100::i;:::-;23255:106;;23377:40;23410:3;23415:1;23377:32;:40::i;:::-;23371:46;;23433:36;23457:3;23462:6;23433:23;:36::i;:::-;23427:42;;23486:36;23508:8;23518:3;23486:21;:36::i;21030:484:27:-;21102:4;21121:32;21136:16;21144:7;21136;:16::i;:::-;21121:14;:32::i;:::-;21118:74;;;-1:-1:-1;21176:5:27;;21030:484;-1:-1:-1;21030:484:27:o;21118:74::-;21202:36;21241:27;:25;:27::i;:::-;21357:36;;;;21278:31;21313:41;;;:32;;;:41;;;;;;21202:66;;-1:-1:-1;21278:31:27;21398:15;;21313:80;;;:::i;:::-;21312:101;;21030:484;-1:-1:-1;;;;21030:484:27:o;17747:507:18:-;-1:-1:-1;;;;;17881:18:18;;17877:183;;17915:40;17947:7;17915:31;:40::i;:::-;17877:183;;;17984:2;-1:-1:-1;;;;;17976:10:18;:4;-1:-1:-1;;;;;17976:10:18;;17972:88;;18002:47;18035:4;18041:7;18002:32;:47::i;:::-;-1:-1:-1;;;;;18073:16:18;;18069:179;;18105:45;18142:7;18105:36;:45::i;18069:179::-;18177:4;-1:-1:-1;;;;;18171:10:18;:2;-1:-1:-1;;;;;18171:10:18;;18167:81;;18197:40;18225:2;18229:7;18197:27;:40::i;6086:706:23:-;6158:4;6191:55;6238:7;6191:46;:55::i;:::-;:115;;;;;6263:43;6298:7;6263:34;:43::i;:::-;6262:44;6191:115;6174:590;;;6331:30;6417:33;;;:24;:33;;;;;;;;;6487:42;;;:29;:42;;;;;;6564:46;;;:32;:46;;;;;;636:40;;6417:33;6487:42;6564:50;;;;:131;;-1:-1:-1;6634:46:23;;;;:32;;;:46;;;;;;6683:12;-1:-1:-1;6564:131:23;6543:211;;;-1:-1:-1;6735:4:23;;6086:706;-1:-1:-1;;;;6086:706:23:o;6543:211::-;6317:447;;;6174:590;-1:-1:-1;6780:5:23;;6086:706;-1:-1:-1;6086:706:23:o;7944:9850::-;8008:7;8036:43;8071:7;8036:34;:43::i;:::-;8035:44;8027:83;;;;-1:-1:-1;;;8027:83:23;;13816:2:30;8027:83:23;;;13798:21:30;13855:2;13835:18;;;13828:30;13894:28;13874:18;;;13867:56;13940:18;;8027:83:23;13614:350:30;8027:83:23;8128:55;8175:7;8128:46;:55::i;:::-;8120:100;;;;-1:-1:-1;;;8120:100:23;;14171:2:30;8120:100:23;;;14153:21:30;;;14190:18;;;14183:30;14249:34;14229:18;;;14222:62;14301:18;;8120:100:23;13969:356:30;8120:100:23;8230:30;8343:33;;;:24;:33;;;;;;;;;8313:64;;:29;:64;;;;;;8395:46;;;:32;:46;;;;;;;636:40;;8313:64;8387:86;;;;-1:-1:-1;;;8387:86:23;;14532:2:30;8387:86:23;;;14514:21:30;14571:2;14551:18;;;14544:30;14610:25;14590:18;;;14583:53;14653:18;;8387:86:23;14330:347:30;8387:86:23;8491:46;;;;:32;;;:46;;;;;;8540:12;-1:-1:-1;8483:125:23;;;;-1:-1:-1;;;8483:125:23;;14884:2:30;8483:125:23;;;14866:21:30;14923:2;14903:18;;;14896:30;14962:34;14942:18;;;14935:62;-1:-1:-1;;;15013:18:30;;;15006:49;15072:19;;8483:125:23;14682:415:30;8483:125:23;8619:11;8633:39;8664:7;8633:30;:39::i;:::-;8619:53;-1:-1:-1;8645:1:27;8690:37:23;8619:53;8690:32;:37::i;:::-;:68;8682:124;;;;-1:-1:-1;;;8682:124:23;;15304:2:30;8682:124:23;;;15286:21:30;15343:2;15323:18;;;15316:30;15382:34;15362:18;;;15355:62;-1:-1:-1;;;15433:18:30;;;15426:41;15484:19;;8682:124:23;15102:407:30;8682:124:23;8817:15;8835:28;8859:3;8835:23;:28::i;:::-;8817:46;;;;8874:36;8913:27;:25;:27::i;:::-;8950:22;8997:26;;;:17;;;:26;;;;;8874:66;;-1:-1:-1;8950:22:23;8975:52;;8950:22;8997:29;;;8975:21;:52::i;:::-;9037:23;9085:26;;;:17;;;:26;;;;;8950:77;;-1:-1:-1;9037:23:23;9063:52;;9037:23;9085:29;;9063:52;9037:78;;9126:23;9164:39;9188:14;9164:23;:39::i;:::-;9153:50;;:7;:50;9126:78;;9214:24;9253:40;9277:15;9253:23;:40::i;:::-;9242:51;;:7;:51;9214:80;;9304:24;9331:18;:41;;;;9353:19;9331:41;9304:68;-1:-1:-1;9389:67:23;9422:3;8693:1:27;9389:32:23;:67::i;:::-;9466:25;9495:49;;;:35;;;:49;;;;;;;;;9576:21;;;:35;;;;;;9383:73;;-1:-1:-1;9495:49:23;9576:35;9677:19;:84;;;;;9744:17;9700:41;9714:5;9721:10;985:2;9700:13;:41::i;:::-;:61;9677:84;9673:1322;;;9805:18;:41;;;;;9827:19;9805:41;9801:279;;;9881:37;9895:1;9898:10;1028:2;9881:13;:37::i;:::-;9922:1;9881:42;:77;;9943:15;9881:77;;;9926:14;9881:77;9866:92;;9801:279;;;10012:18;:53;;10050:15;10012:53;;;10033:14;10012:53;9997:68;;9801:279;10099:73;10126:3;10131:40;10158:12;10131:26;:40::i;:::-;10099:26;:73::i;:::-;10093:79;;10192:83;10224:3;10229:45;10261:12;10229:31;:45::i;:::-;10192:31;:83::i;:::-;10186:89;;10295:79;10325:3;10330:43;10360:12;10330:29;:43::i;:::-;10295:29;:79::i;:::-;10289:85;;10394:83;10426:3;10431:45;10463:12;10431:31;:45::i;:::-;10394:31;:83::i;:::-;10388:89;;9673:1322;;;10540:125;10567:3;10572:2;:30;;:92;10603:60;10619:2;10623:7;720:1;10643:10;1071:2;10603:15;:60::i;:::-;10572:92;;;;;;;;;;;;10540:26;:125::i;:::-;10534:131;;10685:87;10717:3;10722:49;10738:2;10742:7;10751:10;1114:2;10722:15;:49::i;10685:87::-;10679:93;;10792:85;10822:3;10827:49;10843:2;10847:7;10856:10;1157:2;10827:15;:49::i;10792:85::-;10786:91;;10897:87;10929:3;10934:49;10950:2;10954:7;10963:10;1200:2;10934:15;:49::i;10897:87::-;10891:93;;9673:1322;11026:19;:84;;;;;11093:17;11049:41;11063:5;11070:10;1244:2;11049:13;:41::i;:::-;:61;11026:84;11022:1322;;;11154:18;:41;;;;;11176:19;11154:41;11150:279;;;11230:37;11244:1;11247:10;1287:2;11230:13;:37::i;:::-;11271:1;11230:42;:77;;11292:15;11230:77;;;11275:14;11230:77;11215:92;;11150:279;;;11361:18;:53;;11399:15;11361:53;;;11382:14;11361:53;11346:68;;11150:279;11448:73;11475:3;11480:40;11507:12;11480:26;:40::i;:::-;11448:26;:73::i;:::-;11442:79;;11541:83;11573:3;11578:45;11610:12;11578:31;:45::i;:::-;11541:31;:83::i;:::-;11535:89;;11644:79;11674:3;11679:43;11709:12;11679:29;:43::i;:::-;11644:29;:79::i;:::-;11638:85;;11743:83;11775:3;11780:45;11812:12;11780:31;:45::i;:::-;11743:31;:83::i;:::-;11737:89;;11022:1322;;;11889:125;11916:3;11921:2;:30;;:92;11952:60;11968:2;11972:7;764:1;11992:10;1330:2;11952:15;:60::i;:::-;11921:92;;;;;;;;;;;;11889:26;:125::i;:::-;11883:131;;12034:87;12066:3;12071:49;12087:2;12091:7;12100:10;1373:2;12071:15;:49::i;12034:87::-;12028:93;;12141:85;12171:3;12176:49;12192:2;12196:7;12205:10;1416:2;12176:15;:49::i;12141:85::-;12135:91;;12246:87;12278:3;12283:49;12299:2;12303:7;12312:10;1459:2;12283:15;:49::i;12246:87::-;12240:93;;11022:1322;12375:19;:84;;;;;12442:17;12398:41;12412:5;12419:10;1503:2;12398:13;:41::i;:::-;:61;12375:84;12371:1322;;;12503:18;:41;;;;;12525:19;12503:41;12499:279;;;12579:37;12593:1;12596:10;1546:2;12579:13;:37::i;:::-;12620:1;12579:42;:77;;12641:15;12579:77;;;12624:14;12579:77;12564:92;;12499:279;;;12710:18;:53;;12748:15;12710:53;;;12731:14;12710:53;12695:68;;12499:279;12797:73;12824:3;12829:40;12856:12;12829:26;:40::i;:::-;12797:26;:73::i;:::-;12791:79;;12890:83;12922:3;12927:45;12959:12;12927:31;:45::i;:::-;12890:31;:83::i;:::-;12884:89;;12993:79;13023:3;13028:43;13058:12;13028:29;:43::i;:::-;12993:29;:79::i;:::-;12987:85;;13092:83;13124:3;13129:45;13161:12;13129:31;:45::i;:::-;13092:31;:83::i;:::-;13086:89;;12371:1322;;;13238:125;13265:3;13270:2;:30;;:92;13301:60;13317:2;13321:7;808:1;13341:10;1589:2;13301:15;:60::i;:::-;13270:92;;;;;;;;;;;;13238:26;:125::i;:::-;13232:131;;13383:87;13415:3;13420:49;13436:2;13440:7;13449:10;1632:2;13420:15;:49::i;13383:87::-;13377:93;;13490:85;13520:3;13525:49;13541:2;13545:7;13554:10;1675:2;13525:15;:49::i;13490:85::-;13484:91;;13595:87;13627:3;13632:49;13648:2;13652:7;13661:10;1718:2;13632:15;:49::i;13595:87::-;13589:93;;12371:1322;13726:19;:84;;;;;13793:17;13749:41;13763:5;13770:10;1762:2;13749:13;:41::i;:::-;:61;13726:84;13722:1348;;;13854:18;:41;;;;;13876:19;13854:41;13850:279;;;13930:37;13944:1;13947:10;1805:2;13930:13;:37::i;:::-;13971:1;13930:42;:77;;13992:15;13930:77;;;13975:14;13930:77;13915:92;;13850:279;;;14061:18;:53;;14099:15;14061:53;;;14082:14;14061:53;14046:68;;13850:279;14148:77;14177:3;14182:42;14211:12;14182:28;:42::i;:::-;14148:28;:77::i;:::-;14142:83;;14245:87;14279:3;14284:47;14318:12;14284:33;:47::i;:::-;14245:33;:87::i;:::-;14239:93;;14352:83;14384:3;14389:45;14421:12;14389:31;:45::i;:::-;14352:31;:83::i;:::-;14346:89;;14455:87;14489:3;14494:47;14528:12;14494:33;:47::i;:::-;14455:33;:87::i;:::-;14449:93;;13722:1348;;;14605:129;14634:3;14639:2;:30;;:94;14670:62;14686:2;14690:7;854:1;14712:10;1848:2;14670:15;:62::i;:::-;14639:94;;;;;;;;;;;;14605:28;:129::i;:::-;14599:135;;14754:89;14788:3;14793:49;14809:2;14813:7;14822:10;1891:2;14793:15;:49::i;14754:89::-;14748:95;;14863:87;14895:3;14900:49;14916:2;14920:7;14929:10;1934:2;14900:15;:49::i;14863:87::-;14857:93;;14970:89;15004:3;15009:49;15025:2;15029:7;15038:10;1977:2;15009:15;:49::i;14970:89::-;14964:95;;13722:1348;15101:19;:84;;;;;15168:17;15124:41;15138:5;15145:10;2021:2;15124:13;:41::i;:::-;:61;15101:84;15097:1322;;;15229:18;:41;;;;;15251:19;15229:41;15225:279;;;15305:37;15319:1;15322:10;2064:2;15305:13;:37::i;:::-;15346:1;15305:42;:77;;15367:15;15305:77;;;15350:14;15305:77;15290:92;;15225:279;;;15436:18;:53;;15474:15;15436:53;;;15457:14;15436:53;15421:68;;15225:279;15523:73;15550:3;15555:40;15582:12;15555:26;:40::i;:::-;15523:26;:73::i;:::-;15517:79;;15616:83;15648:3;15653:45;15685:12;15653:31;:45::i;:::-;15616:31;:83::i;:::-;15610:89;;15719:79;15749:3;15754:43;15784:12;15754:29;:43::i;:::-;15719:29;:79::i;:::-;15713:85;;15818:83;15850:3;15855:45;15887:12;15855:31;:45::i;:::-;15818:31;:83::i;:::-;15812:89;;15097:1322;;;15964:125;15991:3;15996:2;:30;;:92;16027:60;16043:2;16047:7;898:1;16067:10;2107:2;16027:15;:60::i;:::-;15996:92;;;;;;;;;;;;15964:26;:125::i;:::-;15958:131;;16109:87;16141:3;16146:49;16162:2;16166:7;16175:10;2150:2;16146:15;:49::i;16109:87::-;16103:93;;16216:85;16246:3;16251:49;16267:2;16271:7;16280:10;2193:2;16251:15;:49::i;16216:85::-;16210:91;;16321:87;16353:3;16358:49;16374:2;16378:7;16387:10;2236:2;16358:15;:49::i;16321:87::-;16315:93;;15097:1322;16450:19;:84;;;;;16517:17;16473:41;16487:5;16494:10;2280:2;16473:13;:41::i;:::-;:61;16450:84;16446:1322;;;16578:18;:41;;;;;16600:19;16578:41;16574:279;;;16654:37;16668:1;16671:10;2323:2;16654:13;:37::i;:::-;16695:1;16654:42;:77;;16716:15;16654:77;;;16699:14;16654:77;16639:92;;16574:279;;;16785:18;:53;;16823:15;16785:53;;;16806:14;16785:53;16770:68;;16574:279;16872:73;16899:3;16904:40;16931:12;16904:26;:40::i;:::-;16872:26;:73::i;:::-;16866:79;;16965:83;16997:3;17002:45;17034:12;17002:31;:45::i;:::-;16965:31;:83::i;:::-;16959:89;;17068:79;17098:3;17103:43;17133:12;17103:29;:43::i;:::-;17068:29;:79::i;:::-;17062:85;;17167:83;17199:3;17204:45;17236:12;17204:31;:45::i;:::-;17167:31;:83::i;:::-;17161:89;;16446:1322;;;17313:125;17340:3;17345:2;:30;;:92;17376:60;17392:2;17396:7;942:1;17416:10;2366:2;17376:15;:60::i;:::-;17345:92;;;;;;;;;;;;17313:26;:125::i;:::-;17307:131;;17458:87;17490:3;17495:49;17511:2;17515:7;17524:10;2409:2;17495:15;:49::i;17458:87::-;17452:93;;17565:85;17595:3;17600:49;17616:2;17620:7;17629:10;2452:2;17600:15;:49::i;17565:85::-;17559:91;;17670:87;17702:3;17707:49;17723:2;17727:7;17736:10;2495:2;17707:15;:49::i;17670:87::-;17664:93;;16446:1322;-1:-1:-1;17784:3:23;;7944:9850;-1:-1:-1;;;;;;;;;;;;;7944:9850:23:o;14849:1018:18:-;14999:4;-1:-1:-1;;;;;15019:13:18;;1034:20:6;1080:8;15015:846:18;;15070:170;;-1:-1:-1;;;15070:170:18;;-1:-1:-1;;;;;15070:36:18;;;;;:170;;666:10:7;;15162:4:18;;15188:7;;15217:5;;15070:170;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15070:170:18;;;;;;;;-1:-1:-1;;15070:170:18;;;;;;;;;;;;:::i;:::-;;;15050:759;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15419:13:18;;15415:380;;15461:106;;-1:-1:-1;;;15461:106:18;;;;;;;:::i;15415:380::-;15747:6;15741:13;15732:6;15728:2;15724:15;15717:38;15050:759;-1:-1:-1;;;;;;15302:51:18;-1:-1:-1;;;15302:51:18;;-1:-1:-1;15295:58:18;;15015:846;-1:-1:-1;15846:4:18;14849:1018;;;;;;:::o;9700:129:27:-;9752:7;9778:27;:25;:27::i;:::-;:44;;;9771:51;;9700:129;:::o;9835:180::-;9933:7;9963:45;9977:4;9983:6;964:4;9963:13;:45::i;:::-;9956:52;9835:180;-1:-1:-1;;;9835:180:27:o;10360:171::-;10452:7;10482:42;10496:4;10502;1059:5;10482:13;:42::i;10671:175::-;10767:7;10797:42;10811:4;10817;1156:5;10797:13;:42::i;10990:187::-;11090:7;11120:50;11134:4;11140;1271:5;11120:13;:50::i;11333:190::-;11436:7;11466:50;11480:4;11486;1392:6;11466:13;:50::i;11678:190::-;11781:7;11811:50;11825:4;11831;1518:7;11811:13;:50::i;12023:179::-;12115:7;12145:50;12159:4;12173;12165:13;;1631:8;12145:13;:50::i;9237:344::-;9320:7;9358:1;9351:4;:8;9343:52;;;;-1:-1:-1;;;9343:52:27;;16464:2:30;9343:52:27;;;16446:21:30;16503:2;16483:18;;;16476:30;16542:33;16522:18;;;16515:61;16593:18;;9343:52:27;16262:355:30;9343:52:27;9405:36;9444:27;:25;:27::i;:::-;9481:24;;;;:14;;;:24;;;;;;;;;:31;;;9527:26;;16796:25:30;;;16837:18;;;16830:34;;;9481:14:27;;-1:-1:-1;9527:26:27;;16769:18:30;9527:26:27;;;;;;;-1:-1:-1;9570:4:27;;9237:344;-1:-1:-1;;9237:344:27:o;10852:132::-;10913:4;1156:5;2285:17:21;;2284:24;;10936:41:27;2155:160:21;20769:265:18;20845:36;20884:27;:25;:27::i;:::-;20958:19;;;:26;;20922:33;;;;:24;;;;:33;;;;;;;:62;;;20994:33;;;;;;;;;;;;;;;-1:-1:-1;20769:265:18:o;19469:1105::-;19572:36;19611:27;:25;:27::i;:::-;19572:66;;19819:22;19862:1;19844:15;19854:4;19844:9;:15::i;:::-;:19;;;;:::i;:::-;19873:18;19894:35;;;:26;;;:35;;;;;;19819:44;;-1:-1:-1;20033:28:18;;;20029:350;;-1:-1:-1;;;;;20099:27:18;;20077:19;20099:27;;;:21;;;:27;;;;;;;;:43;;;;;;;;;20157:39;;;;;;:53;;;20282:39;;:26;;;:39;;;;;:52;;;20029:350;-1:-1:-1;20472:35:18;;;;:26;;;:35;;;;;;;;20465:42;;;-1:-1:-1;;;;;20524:27:18;;;;;:21;;;;:27;;;;;:43;;;;;;;;20517:50;19469:1105::o;21322:1201::-;21403:36;21442:27;:25;:27::i;:::-;21673:19;;;:26;21403:66;;-1:-1:-1;21648:22:18;;21673:30;;21702:1;;21673:30;:::i;:::-;21713:18;21734:33;;;:24;;;:33;;;;;;22111:19;;;:35;;21648:55;;-1:-1:-1;21734:33:18;;21648:55;;22111:35;;;;;;:::i;:::-;;;;;;;;;22089:57;;22191:11;22157:2;:19;;22177:10;22157:31;;;;;;;;:::i;:::-;;;;;;;;;;;;:45;;;;22270:37;;;:24;;;:37;;;;;;;:50;;;22448:33;;;;;22441:40;22491:19;;;:25;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;21393:1130;;;;21322:1201;:::o;18548:304::-;18632:36;18671:27;:25;:27::i;:::-;18632:66;;18708:14;18725:13;18735:2;18725:9;:13::i;:::-;-1:-1:-1;;;;;18748:25:18;;;;;;;:21;;;:25;;;;;;;;:33;;;;;;;;:43;;;18801:35;;;:26;;;;:35;;;-1:-1:-1;18801:35:18;:44;18548:304::o;4613:234:24:-;4695:4;4711:13;4727:30;4748:8;4727:20;:30::i;:::-;4711:46;-1:-1:-1;1249:4:24;2285:17:21;;2284:24;;4774:66:24;2155:160:21;4019:209:24;4089:4;4105:13;4121:30;4142:8;4121:20;:30::i;:::-;4105:46;-1:-1:-1;1111:4:24;2285:17:21;;2284:24;;4168:53:24;2155:160:21;9082:149:27;9149:7;9175:27;:25;:27::i;11529:143::-;11594:7;11620:45;11635:4;1392:6;11620:14;:45::i;12208:130::-;12264:5;12294:36;12309:4;1631:8;12294:14;:36::i;3124:175:25:-;3211:7;3284:8;3266:5;3273;3255:24;;;;;;;;16796:25:30;;;16852:2;16837:18;;16830:34;16784:2;16769:18;;16622:248;3255:24:25;;;;;;;;;;;;;3245:35;;;;;;3237:44;;:55;;;;:::i;12527:130:27:-;12586:7;12612:38;12627:4;1757:10;12612:14;:38::i;12344:177::-;12441:7;12471:43;12485:4;12491;1757:10;12471:13;:43::i;12857:141::-;12921:7;12947:44;12962:4;1905:12;12947:14;:44::i;12663:188::-;12765:7;12795:49;12809:4;12815;1905:12;12795:13;:49::i;13194:137::-;13256:7;13282:42;13297:4;2059:14;13282;:42::i;13004:184::-;13104:7;13134:47;13148:4;13154;2059:14;13134:13;:47::i;13531:141::-;13595:7;13621:44;13636:4;2227:16;13621:14;:44::i;13337:188::-;13439:7;13469:49;13483:4;13489;2227:16;13469:13;:49::i;18031:981:23:-;18231:7;18273:28;;;:18;;;:28;;;;;;;;:37;;;;;;;;:44;18231:7;;18360:139;18381:12;18377:1;:16;18360:139;;;18429:59;18447:28;;;:18;;;:28;;;;;;;;:37;;;;;;;;:40;;18429:17;;;;:59;18447:37;18485:1;;18447:40;;;;;;:::i;:::-;;;;;;;;;18429:59;;;;;;;;;;;;18414:74;;;;;:::i;:::-;;-1:-1:-1;18395:3:23;;;;:::i;:::-;;;;18360:139;;;;18508:14;18525:43;18539:11;18552:8;18562:5;18525:13;:43::i;:::-;:47;;18571:1;18525:47;:::i;:::-;18508:64;;18582:24;18625:6;18620:323;18641:12;18637:1;:16;18620:323;;;18674:16;18693:28;;;:18;;;:28;;;;;;;;:37;;;;;;;;:40;;18731:1;;18693:40;;;;;;:::i;:::-;;;;;;;;;;;;;18768:27;;;:17;;;:27;;;;;;;;18693:40;;-1:-1:-1;18809:30:23;18768:27;18809:30;;:::i;:::-;;;18867:16;18857:6;:26;18853:80;;-1:-1:-1;18910:8:23;-1:-1:-1;18903:15:23;;-1:-1:-1;;;;;18903:15:23;18853:80;18660:283;;18655:3;;;;:::i;:::-;;;18620:323;;;-1:-1:-1;18952:53:23;;-1:-1:-1;;;18952:53:23;;17423:2:30;18952:53:23;;;17405:21:30;17462:2;17442:18;;;17435:30;17501:34;17481:18;;;17474:62;-1:-1:-1;;;17552:18:30;;;17545:41;17603:19;;18952:53:23;17221:407:30;18031:981:23;;;;;;;;:::o;19018:706::-;19192:7;19230:24;;;:14;;;:24;;;;;;;;:31;19302:23;;;:33;;;;;;19192:7;;19288:65;;19337:8;19347:5;19288:13;:65::i;:::-;:69;;19356:1;19288:69;:::i;:::-;19271:86;;19367:24;19410:6;19405:255;19426:8;19422:1;:12;19405:255;;;19455:14;19472:24;;;:14;;;:24;;;;;:27;;19497:1;;19472:27;;;;;;:::i;:::-;;;;;;;;;19455:44;;19533:2;:17;;:25;19551:6;19533:25;;;;;;;;;;;;19513:45;;;;;:::i;:::-;;;19586:16;19576:6;:26;19572:78;;19629:6;-1:-1:-1;19622:13:23;;-1:-1:-1;;;;19622:13:23;19572:78;-1:-1:-1;19436:3:23;;;:::i;:::-;;;19405:255;;;-1:-1:-1;19669:48:23;;-1:-1:-1;;;19669:48:23;;17835:2:30;19669:48:23;;;17817:21:30;17874:2;17854:18;;;17847:30;17913:34;17893:18;;;17886:62;-1:-1:-1;;;17964:18:30;;;17957:36;18010:19;;19669:48:23;17633:402:30;13861:130:27;13920:7;13946:38;13961:4;-1:-1:-1;;;13946:14:27;:38::i;13678:177::-;13775:7;13805:43;13819:4;13825;-1:-1:-1;;;13805:13:27;:43::i;14191:141::-;14255:7;14281:44;14296:4;-1:-1:-1;;;14281:14:27;:44::i;13997:188::-;14099:7;14129:49;14143:4;14149;-1:-1:-1;;;14129:13:27;:49::i;14528:137::-;14590:7;14616:42;14631:4;-1:-1:-1;;;14616:14:27;:42::i;14338:184::-;14438:7;14468:47;14482:4;14488;-1:-1:-1;;;14468:13:27;:47::i;14865:141::-;14929:7;14955:44;14970:4;-1:-1:-1;;;14955:14:27;:44::i;14671:188::-;14773:7;14803:49;14817:4;14823;-1:-1:-1;;;14803:13:27;:49::i;16561:130::-;16620:7;16646:38;16661:4;-1:-1:-1;;;16646:14:27;:38::i;16378:177::-;16475:7;16505:43;16519:4;16525;-1:-1:-1;;;16505:13:27;:43::i;16891:141::-;16955:7;16981:44;16996:4;-1:-1:-1;;;16981:14:27;:44::i;16697:188::-;16799:7;16829:49;16843:4;16849;-1:-1:-1;;;16829:13:27;:49::i;17228:137::-;17290:7;17316:42;17331:4;-1:-1:-1;;;17316:14:27;:42::i;17038:184::-;17138:7;17168:47;17182:4;17188;-1:-1:-1;;;17168:13:27;:47::i;17565:141::-;17629:7;17655:44;17670:4;-1:-1:-1;;;17655:14:27;:44::i;17371:188::-;17473:7;17503:49;17517:4;17523;-1:-1:-1;;;17503:13:27;:49::i;15199:134::-;15260:7;15286:40;15301:4;-1:-1:-1;;;15286:14:27;:40::i;15012:181::-;15111:7;15141:45;15155:4;15161;-1:-1:-1;;;15141:13:27;:45::i;15537:145::-;15603:7;15629:46;15644:4;-1:-1:-1;;;15629:14:27;:46::i;15339:192::-;15443:7;15473:51;15487:4;15493;-1:-1:-1;;;15473:13:27;:51::i;15882:141::-;15946:7;15972:44;15987:4;-1:-1:-1;;;15972:14:27;:44::i;15688:188::-;15790:7;15820:49;15834:4;15840;-1:-1:-1;;;15820:13:27;:49::i;16227:145::-;16293:7;16319:46;16334:4;-1:-1:-1;;;16319:14:27;:46::i;16029:192::-;16133:7;16163:51;16177:4;16183;-1:-1:-1;;;16163:13:27;:51::i;17895:130::-;17954:7;17980:38;17995:4;-1:-1:-1;;;17980:14:27;:38::i;17712:177::-;17809:7;17839:43;17853:4;17859;-1:-1:-1;;;17839:13:27;:43::i;18225:141::-;18289:7;18315:44;18330:4;-1:-1:-1;;;18315:14:27;:44::i;18031:188::-;18133:7;18163:49;18177:4;18183;-1:-1:-1;;;18163:13:27;:49::i;18562:137::-;18624:7;18650:42;18665:4;-1:-1:-1;;;18650:14:27;:42::i;18372:184::-;18472:7;18502:47;18516:4;18522;-1:-1:-1;;;18502:13:27;:47::i;18899:141::-;18963:7;18989:44;19004:4;-1:-1:-1;;;18989:14:27;:44::i;18705:188::-;18807:7;18837:49;18851:4;18857;-1:-1:-1;;;18837:13:27;:49::i;19229:130::-;19288:7;19314:38;19329:4;-1:-1:-1;;;19314:14:27;:38::i;19046:177::-;19143:7;19173:43;19187:4;19193;-1:-1:-1;;;19173:13:27;:43::i;19559:141::-;19623:7;19649:44;19664:4;-1:-1:-1;;;19649:14:27;:44::i;19365:188::-;19467:7;19497:49;19511:4;19517;-1:-1:-1;;;19497:13:27;:49::i;19896:137::-;19958:7;19984:42;19999:4;-1:-1:-1;;;19984:14:27;:42::i;19706:184::-;19806:7;19836:47;19850:4;19856;-1:-1:-1;;;19836:13:27;:47::i;20233:141::-;20297:7;20323:44;20338:4;-1:-1:-1;;;20323:14:27;:44::i;20039:188::-;20141:7;20171:49;20185:4;20191;-1:-1:-1;;;955:396:21;1078:7;1097:14;1114:22;1130:5;1114:15;:22::i;:::-;-1:-1:-1;;1172:11:21;;1281:27;;1314:20;;;;1313:30;;1280:64;;-1:-1:-1;;955:396:21;;;;;:::o;1416:197::-;1536:7;1562:44;1569:9;1580:10;:18;;1597:1;1580:18;;;1593:1;1580:18;1562:44;;1600:5;1562:6;:44::i;2171:210:24:-;2242:7;2261:36;2300:27;:25;:27::i;:::-;2344:30;;;;:20;;:30;;-1:-1:-1;;2344:30:24;;;;;2171:210::o;1877:213:21:-;1975:7;1998:14;2015:22;2031:5;2015:15;:22::i;:::-;2055:17;;;;2054:29;;;;1877:213;-1:-1:-1;;1877:213:21:o;415:219::-;478:7;;524:82;539:3;531:11;;524:82;;573:1;563:11;;;;;588:7;;;:::i;:::-;;;524:82;;14:131:30;-1:-1:-1;;;;;;88:32:30;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:472::-;634:3;672:5;666:12;699:6;694:3;687:19;724:1;734:162;748:6;745:1;742:13;734:162;;;810:4;866:13;;;862:22;;856:29;838:11;;;834:20;;827:59;763:12;734:162;;;914:6;911:1;908:13;905:87;;;980:1;973:4;964:6;959:3;955:16;951:27;944:38;905:87;-1:-1:-1;1046:2:30;1025:15;-1:-1:-1;;1021:29:30;1012:39;;;;1053:4;1008:50;;592:472;-1:-1:-1;;592:472:30:o;1069:220::-;1218:2;1207:9;1200:21;1181:4;1238:45;1279:2;1268:9;1264:18;1256:6;1238:45;:::i;1294:180::-;1353:6;1406:2;1394:9;1385:7;1381:23;1377:32;1374:52;;;1422:1;1419;1412:12;1374:52;-1:-1:-1;1445:23:30;;1294:180;-1:-1:-1;1294:180:30:o;1687:173::-;1755:20;;-1:-1:-1;;;;;1804:31:30;;1794:42;;1784:70;;1850:1;1847;1840:12;1784:70;1687:173;;;:::o;1865:254::-;1933:6;1941;1994:2;1982:9;1973:7;1969:23;1965:32;1962:52;;;2010:1;2007;2000:12;1962:52;2033:29;2052:9;2033:29;:::i;:::-;2023:39;2109:2;2094:18;;;;2081:32;;-1:-1:-1;;;1865:254:30:o;2306:328::-;2383:6;2391;2399;2452:2;2440:9;2431:7;2427:23;2423:32;2420:52;;;2468:1;2465;2458:12;2420:52;2491:29;2510:9;2491:29;:::i;:::-;2481:39;;2539:38;2573:2;2562:9;2558:18;2539:38;:::i;:::-;2529:48;;2624:2;2613:9;2609:18;2596:32;2586:42;;2306:328;;;;;:::o;2639:186::-;2698:6;2751:2;2739:9;2730:7;2726:23;2722:32;2719:52;;;2767:1;2764;2757:12;2719:52;2790:29;2809:9;2790:29;:::i;2830:347::-;2895:6;2903;2956:2;2944:9;2935:7;2931:23;2927:32;2924:52;;;2972:1;2969;2962:12;2924:52;2995:29;3014:9;2995:29;:::i;:::-;2985:39;;3074:2;3063:9;3059:18;3046:32;3121:5;3114:13;3107:21;3100:5;3097:32;3087:60;;3143:1;3140;3133:12;3087:60;3166:5;3156:15;;;2830:347;;;;;:::o;3182:127::-;3243:10;3238:3;3234:20;3231:1;3224:31;3274:4;3271:1;3264:15;3298:4;3295:1;3288:15;3314:1138;3409:6;3417;3425;3433;3486:3;3474:9;3465:7;3461:23;3457:33;3454:53;;;3503:1;3500;3493:12;3454:53;3526:29;3545:9;3526:29;:::i;:::-;3516:39;;3574:38;3608:2;3597:9;3593:18;3574:38;:::i;:::-;3564:48;;3659:2;3648:9;3644:18;3631:32;3621:42;;3714:2;3703:9;3699:18;3686:32;3737:18;3778:2;3770:6;3767:14;3764:34;;;3794:1;3791;3784:12;3764:34;3832:6;3821:9;3817:22;3807:32;;3877:7;3870:4;3866:2;3862:13;3858:27;3848:55;;3899:1;3896;3889:12;3848:55;3935:2;3922:16;3957:2;3953;3950:10;3947:36;;;3963:18;;:::i;:::-;4038:2;4032:9;4006:2;4092:13;;-1:-1:-1;;4088:22:30;;;4112:2;4084:31;4080:40;4068:53;;;4136:18;;;4156:22;;;4133:46;4130:72;;;4182:18;;:::i;:::-;4222:10;4218:2;4211:22;4257:2;4249:6;4242:18;4297:7;4292:2;4287;4283;4279:11;4275:20;4272:33;4269:53;;;4318:1;4315;4308:12;4269:53;4374:2;4369;4365;4361:11;4356:2;4348:6;4344:15;4331:46;4419:1;4414:2;4409;4401:6;4397:15;4393:24;4386:35;4440:6;4430:16;;;;;;;3314:1138;;;;;;;:::o;4457:260::-;4525:6;4533;4586:2;4574:9;4565:7;4561:23;4557:32;4554:52;;;4602:1;4599;4592:12;4554:52;4625:29;4644:9;4625:29;:::i;:::-;4615:39;;4673:38;4707:2;4696:9;4692:18;4673:38;:::i;:::-;4663:48;;4457:260;;;;;:::o;4722:778::-;4815:6;4823;4831;4884:2;4872:9;4863:7;4859:23;4855:32;4852:52;;;4900:1;4897;4890:12;4852:52;4940:9;4927:23;4969:18;5010:2;5002:6;4999:14;4996:34;;;5026:1;5023;5016:12;4996:34;5064:6;5053:9;5049:22;5039:32;;5109:7;5102:4;5098:2;5094:13;5090:27;5080:55;;5131:1;5128;5121:12;5080:55;5171:2;5158:16;5197:2;5189:6;5186:14;5183:34;;;5213:1;5210;5203:12;5183:34;5268:7;5261:4;5251:6;5248:1;5244:14;5240:2;5236:23;5232:34;5229:47;5226:67;;;5289:1;5286;5279:12;5226:67;5320:4;5312:13;;;;-1:-1:-1;5344:6:30;-1:-1:-1;;5385:20:30;;5372:34;5446:4;5435:16;;5425:27;;5415:55;;5466:1;5463;5456:12;5415:55;5489:5;5479:15;;;4722:778;;;;;:::o;5505:380::-;5584:1;5580:12;;;;5627;;;5648:61;;5702:4;5694:6;5690:17;5680:27;;5648:61;5755:2;5747:6;5744:14;5724:18;5721:38;5718:161;;;5801:10;5796:3;5792:20;5789:1;5782:31;5836:4;5833:1;5826:15;5864:4;5861:1;5854:15;5718:161;;5505:380;;;:::o;7130:413::-;7332:2;7314:21;;;7371:2;7351:18;;;7344:30;7410:34;7405:2;7390:18;;7383:62;-1:-1:-1;;;7476:2:30;7461:18;;7454:47;7533:3;7518:19;;7130:413::o;8373:127::-;8434:10;8429:3;8425:20;8422:1;8415:31;8465:4;8462:1;8455:15;8489:4;8486:1;8479:15;9742:127;9803:10;9798:3;9794:20;9791:1;9784:31;9834:4;9831:1;9824:15;9858:4;9855:1;9848:15;9874:135;9913:3;-1:-1:-1;;9934:17:30;;9931:43;;;9954:18;;:::i;:::-;-1:-1:-1;10001:1:30;9990:13;;9874:135::o;11745:125::-;11785:4;11813:1;11810;11807:8;11804:34;;;11818:18;;:::i;:::-;-1:-1:-1;11855:9:30;;11745:125::o;11875:128::-;11915:3;11946:1;11942:6;11939:1;11936:13;11933:39;;;11952:18;;:::i;:::-;-1:-1:-1;11988:9:30;;11875:128::o;12362:414::-;12564:2;12546:21;;;12603:2;12583:18;;;12576:30;12642:34;12637:2;12622:18;;12615:62;-1:-1:-1;;;12708:2:30;12693:18;;12686:48;12766:3;12751:19;;12362:414::o;15514:489::-;-1:-1:-1;;;;;15783:15:30;;;15765:34;;15835:15;;15830:2;15815:18;;15808:43;15882:2;15867:18;;15860:34;;;15930:3;15925:2;15910:18;;15903:31;;;15708:4;;15951:46;;15977:19;;15969:6;15951:46;:::i;:::-;15943:54;15514:489;-1:-1:-1;;;;;;15514:489:30:o;16008:249::-;16077:6;16130:2;16118:9;16109:7;16105:23;16101:32;16098:52;;;16146:1;16143;16136:12;16098:52;16178:9;16172:16;16197:30;16221:5;16197:30;:::i;16875:127::-;16936:10;16931:3;16927:20;16924:1;16917:31;16967:4;16964:1;16957:15;16991:4;16988:1;16981:15;17007:209;17039:1;17065;17055:132;;17109:10;17104:3;17100:20;17097:1;17090:31;17144:4;17141:1;17134:15;17172:4;17169:1;17162:15;17055:132;-1:-1:-1;17201:9:30;;17007:209::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "contractURI()": {
        "details": "See {IERC721Metadata-symbol}.See https://docs.opensea.io/docs/contract-level-metadata"
      },
      "genesisEggsMax()": {
        "details": "Maximum genesis eggs that can be minted. (note: ids starts at 1)"
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getDNA(uint256)": {
        "notice": "Unicorn DNA methods"
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "license()": {
        "details": "Reference URI for the NFT license file hosted on Arweave permaweb."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "presaleHatchingUnlockTime()": {
        "details": "Timestamp (in seconds) when the genesis eggs can be hatched."
      },
      "presaleUnlockTime()": {
        "details": "Timestamp (in seconds) when the genesis egg presale activates."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    774,
    23811
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5BB209A5 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xFAD5CDD6 EQ PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5BB209A5 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x6B87D24C EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x6C4B9134 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x234A4B9B GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x234A4B9B EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x2964502D EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x28DC JUMP JUMPDEST PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x2946 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x2959 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x298E JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x29B8 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x606 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x298E JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x29B8 JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x2959 JUMP JUMPDEST PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0x2959 JUMP JUMPDEST PUSH2 0x779 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x2959 JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x80C JUMP JUMPDEST PUSH2 0x2710 PUSH2 0x1D7 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x29F4 JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x8B9 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A0F JUMP JUMPDEST PUSH2 0x8D1 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A61 JUMP JUMPDEST PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2959 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST PUSH2 0x182 PUSH2 0xA34 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B3D JUMP JUMPDEST PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B70 JUMP JUMPDEST PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x32A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x345 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x360 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x370 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0xE ADD DUP1 SLOAD PUSH2 0x37E SWAP1 PUSH2 0x2BFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AA SWAP1 PUSH2 0x2BFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40C DUP3 PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x472 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x47A PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0xC ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A2 DUP3 PUSH2 0x784 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x510 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x469 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x52C JUMPI POP PUSH2 0x52C DUP2 CALLER PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x469 JUMP JUMPDEST PUSH2 0x5A8 DUP4 DUP4 PUSH2 0xB23 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5B8 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0xA ADD SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CC PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x12 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5DF CALLER DUP3 PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x469 SWAP1 PUSH2 0x2C37 JUMP JUMPDEST PUSH2 0x5A8 DUP4 DUP4 DUP4 PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x610 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x13 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x624 PUSH2 0xAD1 JUMP JUMPDEST SWAP1 POP PUSH2 0x62F DUP5 PUSH2 0x824 JUMP JUMPDEST DUP4 LT PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x469 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP4 DUP6 MSTORE SWAP3 SWAP1 MSTORE POP SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x5A8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6E4 PUSH2 0xAD1 JUMP JUMPDEST SWAP1 POP PUSH2 0x6EE PUSH2 0x5AD JUMP JUMPDEST DUP4 LT PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH1 0xA ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x766 JUMPI PUSH2 0x766 PUSH2 0x2C88 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x78F PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH2 0x360 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x469 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x816 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x11 ADD DUP1 SLOAD PUSH2 0x37E SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x88F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x469 JUMP JUMPDEST PUSH2 0x897 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8C3 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0xF ADD DUP1 SLOAD PUSH2 0x37E SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH2 0x8DC CALLER DUP4 DUP4 PUSH2 0xF02 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8EA CALLER DUP4 PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x906 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x469 SWAP1 PUSH2 0x2C37 JUMP JUMPDEST PUSH2 0x912 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFE5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x923 DUP3 PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x987 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x469 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x991 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x14 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x9AE SWAP1 PUSH2 0x2BFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9DA SWAP1 PUSH2 0x2BFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA27 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA27 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA0A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP SWAP4 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA3E PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x10 ADD DUP1 SLOAD PUSH2 0x37E SWAP1 PUSH2 0x2BFC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA56 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE POP KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xA91 PUSH2 0x1018 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x912 JUMPI PUSH2 0xABE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xAB1 JUMPI PUSH2 0xAB1 PUSH2 0x2C88 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP4 PUSH2 0x1088 JUMP JUMPDEST POP DUP1 PUSH2 0xAC9 DUP2 PUSH2 0x2CB4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA94 JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB00 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 SWAP2 EQ ISZERO SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2D PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xC DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 SWAP2 POP DUP3 SWAP1 PUSH2 0xB67 DUP3 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAC DUP3 PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0xC0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x469 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC18 DUP4 PUSH2 0x784 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xC53 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC48 DUP5 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xC63 JUMPI POP PUSH2 0xC63 DUP2 DUP6 PUSH2 0xA4C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC7E DUP3 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x469 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x469 JUMP JUMPDEST PUSH2 0xD51 DUP2 PUSH2 0x116E JUMP JUMPDEST PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231576974684469616D6F6E6453746F726167653A2043616E6E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207472616E73666572206120556E69636F726E206C6F636B656420696E206761 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6D65206F7220636F6F6C696E6720646F776E2066726F6D20756E6C6F636B0000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x469 JUMP JUMPDEST PUSH2 0xDF4 DUP4 DUP4 DUP4 PUSH2 0x11C6 JUMP JUMPDEST PUSH2 0xDFF PUSH1 0x0 DUP3 PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE09 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xE39 SWAP1 DUP5 SWAP1 PUSH2 0x2CCF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xE69 SWAP1 DUP5 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP9 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED8 DUP3 PUSH2 0x123F JUMP JUMPDEST ISZERO PUSH2 0xEE6 JUMPI PUSH2 0x360 DUP3 PUSH2 0x1343 JUMP JUMPDEST PUSH2 0xEEE PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x18 ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x469 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF6E PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP10 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP9 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xFF0 DUP5 DUP5 DUP5 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0xFFC DUP5 DUP5 DUP5 DUP5 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x912 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x469 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0x1020 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1086 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A204D75737420626520636F6E7472616374206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x469 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 DUP4 GT ISZERO PUSH2 0x1102 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231576974684469616D6F6E6453746F726167653A2043616E206F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C792073657420444E4120666F722067656E6573697320746F6B656E73000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x469 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1115 DUP2 PUSH2 0x1110 PUSH2 0x1E66 JUMP JUMPDEST PUSH2 0x1E79 JUMP JUMPDEST SWAP1 POP PUSH2 0x1122 DUP2 PUSH1 0x1 PUSH2 0x1E8E JUMP JUMPDEST SWAP1 POP PUSH2 0x112F DUP2 PUSH1 0x0 PUSH2 0x1E9D JUMP JUMPDEST SWAP1 POP PUSH2 0x113C DUP2 PUSH1 0x0 PUSH2 0x1EAC JUMP JUMPDEST SWAP1 POP PUSH2 0x1149 DUP2 PUSH1 0x0 PUSH2 0x1EBB JUMP JUMPDEST SWAP1 POP PUSH2 0x1156 DUP2 PUSH1 0x0 PUSH2 0x1ECA JUMP JUMPDEST SWAP1 POP PUSH2 0x1162 DUP2 DUP5 PUSH2 0x1EDA JUMP JUMPDEST SWAP1 POP PUSH2 0xC63 DUP5 DUP3 PUSH2 0x1EED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1181 PUSH2 0x117C DUP4 PUSH2 0xECD JUMP JUMPDEST PUSH2 0x1FA0 JUMP JUMPDEST ISZERO PUSH2 0x118E JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1198 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x39 DUP2 ADD SLOAD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x38 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 TIMESTAMP SWAP2 PUSH2 0x11BD SWAP2 PUSH2 0x2CE6 JUMP JUMPDEST LT SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11E2 JUMPI PUSH2 0x11DD DUP2 PUSH2 0x1FAE JUMP JUMPDEST PUSH2 0x1205 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1205 JUMPI PUSH2 0x1205 DUP4 DUP3 PUSH2 0x1FE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x121C JUMPI PUSH2 0x5A8 DUP2 PUSH2 0x209C JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5A8 JUMPI PUSH2 0x5A8 DUP3 DUP3 PUSH2 0x2165 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x124A DUP3 PUSH2 0x21B5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x125C JUMPI POP PUSH2 0x125A DUP3 PUSH2 0x21CE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x133B JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH32 0xFDCCEBC9C7798F16C9158AF32C6BB14BB2526BCD260561CAB5771CFF2FA8AD96 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH32 0xFDCCEBC9C7798F16C9158AF32C6BB14BB2526BCD260561CAB5771CFF2FA8AD90 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP1 DUP6 MSTORE PUSH32 0xFDCCEBC9C7798F16C9158AF32C6BB14BB2526BCD260561CAB5771CFF2FA8AD94 SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SLOAD PUSH32 0xFDCCEBC9C7798F16C9158AF32C6BB14BB2526BCD260561CAB5771CFF2FA8AD8E SWAP3 SWAP2 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1327 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD NUMBER GT JUMPDEST ISZERO PUSH2 0x1337 JUMPI POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134E DUP3 PUSH2 0x21CE JUMP JUMPDEST ISZERO PUSH2 0x139B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624861746368696E673A20524E47206E6F74207265616479000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x469 JUMP JUMPDEST PUSH2 0x13A4 DUP3 PUSH2 0x21B5 JUMP JUMPDEST PUSH2 0x13F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624861746368696E673A2057616974696E6720666F72205652462054544C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x469 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH32 0xFDCCEBC9C7798F16C9158AF32C6BB14BB2526BCD260561CAB5771CFF2FA8AD96 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH32 0xFDCCEBC9C7798F16C9158AF32C6BB14BB2526BCD260561CAB5771CFF2FA8AD90 DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH32 0xFDCCEBC9C7798F16C9158AF32C6BB14BB2526BCD260561CAB5771CFF2FA8AD94 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH32 0xFDCCEBC9C7798F16C9158AF32C6BB14BB2526BCD260561CAB5771CFF2FA8AD8E SWAP2 SWAP1 PUSH2 0x14E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624861746368696E673A204E6F20524E4720736574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x469 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD NUMBER GT PUSH2 0x155F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624861746368696E673A2050726564696374696F6E206D61736B65642064 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x7572696E6720524E472073657420626C6F636B PUSH1 0x68 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x469 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156A DUP6 PUSH2 0x21E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1577 DUP3 PUSH2 0x21F1 JUMP JUMPDEST EQ PUSH2 0x15D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624861746368696E673A20444E412068617320616C726561647920626565 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1B881C195C9CDA5CDD1959 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x469 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E3 DUP3 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x15F2 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x3A DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 PUSH2 0x1613 SWAP1 DUP3 JUMPDEST ADD SLOAD PUSH2 0xECD JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x3A DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 PUSH2 0x1631 SWAP1 DUP3 PUSH2 0x160C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x163E DUP4 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0xFF AND DUP6 EQ SWAP1 POP PUSH1 0x0 PUSH2 0x1650 DUP4 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0xFF AND DUP7 EQ SWAP1 POP PUSH1 0x0 DUP3 DUP1 PUSH2 0x1662 JUMPI POP DUP2 JUMPDEST SWAP1 POP PUSH2 0x166F DUP9 PUSH1 0x1 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x4 DUP13 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 DUP16 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP3 SWAP11 POP SWAP2 SWAP1 DUP4 DUP1 ISZERO PUSH2 0x16AB JUMPI POP DUP3 PUSH2 0x16A9 PUSH2 0x2710 DUP5 PUSH1 0xB PUSH2 0x220E JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x1747 JUMPI DUP6 DUP1 ISZERO PUSH2 0x16BA JUMPI POP DUP5 JUMPDEST ISZERO PUSH2 0x16E2 JUMPI PUSH2 0x16CC PUSH1 0x2 DUP4 PUSH1 0xC PUSH2 0x220E JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x16D9 JUMPI DUP7 PUSH2 0x16DB JUMP JUMPDEST DUP8 JUMPDEST SWAP1 POP PUSH2 0x16F2 JUMP JUMPDEST DUP6 PUSH2 0x16ED JUMPI DUP7 PUSH2 0x16EF JUMP JUMPDEST DUP8 JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1704 DUP12 PUSH2 0x16FF DUP4 PUSH2 0x2250 JUMP JUMPDEST PUSH2 0x2260 JUMP JUMPDEST SWAP11 POP PUSH2 0x1718 DUP12 PUSH2 0x1713 DUP4 PUSH2 0x2271 JUMP JUMPDEST PUSH2 0x2282 JUMP JUMPDEST SWAP11 POP PUSH2 0x172C DUP12 PUSH2 0x1727 DUP4 PUSH2 0x2294 JUMP JUMPDEST PUSH2 0x22A6 JUMP JUMPDEST SWAP11 POP PUSH2 0x1740 DUP12 PUSH2 0x173B DUP4 PUSH2 0x22B9 JUMP JUMPDEST PUSH2 0x22CC JUMP JUMPDEST SWAP11 POP PUSH2 0x17B0 JUMP JUMPDEST PUSH2 0x1774 DUP12 DUP11 PUSH1 0x26 ADD PUSH1 0x0 PUSH2 0x1760 DUP14 DUP16 PUSH1 0x1 DUP10 PUSH1 0xD PUSH2 0x22E0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2260 JUMP JUMPDEST SWAP11 POP PUSH2 0x1787 DUP12 PUSH2 0x1713 DUP12 DUP14 DUP7 PUSH1 0xE PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP PUSH2 0x179A DUP12 PUSH2 0x1727 DUP12 DUP14 DUP7 PUSH1 0xF PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP PUSH2 0x17AD DUP12 PUSH2 0x173B DUP12 DUP14 DUP7 PUSH1 0x10 PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP JUMPDEST DUP4 DUP1 ISZERO PUSH2 0x17C9 JUMPI POP DUP3 PUSH2 0x17C7 PUSH2 0x2710 DUP5 PUSH1 0x15 PUSH2 0x220E JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x1865 JUMPI DUP6 DUP1 ISZERO PUSH2 0x17D8 JUMPI POP DUP5 JUMPDEST ISZERO PUSH2 0x1800 JUMPI PUSH2 0x17EA PUSH1 0x2 DUP4 PUSH1 0x16 PUSH2 0x220E JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x17F7 JUMPI DUP7 PUSH2 0x17F9 JUMP JUMPDEST DUP8 JUMPDEST SWAP1 POP PUSH2 0x1810 JUMP JUMPDEST DUP6 PUSH2 0x180B JUMPI DUP7 PUSH2 0x180D JUMP JUMPDEST DUP8 JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1822 DUP12 PUSH2 0x181D DUP4 PUSH2 0x2595 JUMP JUMPDEST PUSH2 0x25A5 JUMP JUMPDEST SWAP11 POP PUSH2 0x1836 DUP12 PUSH2 0x1831 DUP4 PUSH2 0x25B6 JUMP JUMPDEST PUSH2 0x25C6 JUMP JUMPDEST SWAP11 POP PUSH2 0x184A DUP12 PUSH2 0x1845 DUP4 PUSH2 0x25D7 JUMP JUMPDEST PUSH2 0x25E7 JUMP JUMPDEST SWAP11 POP PUSH2 0x185E DUP12 PUSH2 0x1859 DUP4 PUSH2 0x25F8 JUMP JUMPDEST PUSH2 0x2608 JUMP JUMPDEST SWAP11 POP PUSH2 0x18CE JUMP JUMPDEST PUSH2 0x1892 DUP12 DUP11 PUSH1 0x26 ADD PUSH1 0x0 PUSH2 0x187E DUP14 DUP16 PUSH1 0x2 DUP10 PUSH1 0x17 PUSH2 0x22E0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x25A5 JUMP JUMPDEST SWAP11 POP PUSH2 0x18A5 DUP12 PUSH2 0x1831 DUP12 DUP14 DUP7 PUSH1 0x18 PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP PUSH2 0x18B8 DUP12 PUSH2 0x1845 DUP12 DUP14 DUP7 PUSH1 0x19 PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP PUSH2 0x18CB DUP12 PUSH2 0x1859 DUP12 DUP14 DUP7 PUSH1 0x1A PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP JUMPDEST DUP4 DUP1 ISZERO PUSH2 0x18E7 JUMPI POP DUP3 PUSH2 0x18E5 PUSH2 0x2710 DUP5 PUSH1 0x1F PUSH2 0x220E JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x1983 JUMPI DUP6 DUP1 ISZERO PUSH2 0x18F6 JUMPI POP DUP5 JUMPDEST ISZERO PUSH2 0x191E JUMPI PUSH2 0x1908 PUSH1 0x2 DUP4 PUSH1 0x20 PUSH2 0x220E JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x1915 JUMPI DUP7 PUSH2 0x1917 JUMP JUMPDEST DUP8 JUMPDEST SWAP1 POP PUSH2 0x192E JUMP JUMPDEST DUP6 PUSH2 0x1929 JUMPI DUP7 PUSH2 0x192B JUMP JUMPDEST DUP8 JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1940 DUP12 PUSH2 0x193B DUP4 PUSH2 0x2619 JUMP JUMPDEST PUSH2 0x2629 JUMP JUMPDEST SWAP11 POP PUSH2 0x1954 DUP12 PUSH2 0x194F DUP4 PUSH2 0x263A JUMP JUMPDEST PUSH2 0x264A JUMP JUMPDEST SWAP11 POP PUSH2 0x1968 DUP12 PUSH2 0x1963 DUP4 PUSH2 0x265B JUMP JUMPDEST PUSH2 0x266B JUMP JUMPDEST SWAP11 POP PUSH2 0x197C DUP12 PUSH2 0x1977 DUP4 PUSH2 0x267C JUMP JUMPDEST PUSH2 0x268C JUMP JUMPDEST SWAP11 POP PUSH2 0x19EC JUMP JUMPDEST PUSH2 0x19B0 DUP12 DUP11 PUSH1 0x26 ADD PUSH1 0x0 PUSH2 0x199C DUP14 DUP16 PUSH1 0x3 DUP10 PUSH1 0x21 PUSH2 0x22E0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2629 JUMP JUMPDEST SWAP11 POP PUSH2 0x19C3 DUP12 PUSH2 0x194F DUP12 DUP14 DUP7 PUSH1 0x22 PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP PUSH2 0x19D6 DUP12 PUSH2 0x1963 DUP12 DUP14 DUP7 PUSH1 0x23 PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP PUSH2 0x19E9 DUP12 PUSH2 0x1977 DUP12 DUP14 DUP7 PUSH1 0x24 PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP JUMPDEST DUP4 DUP1 ISZERO PUSH2 0x1A05 JUMPI POP DUP3 PUSH2 0x1A03 PUSH2 0x2710 DUP5 PUSH1 0x29 PUSH2 0x220E JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x1AA1 JUMPI DUP6 DUP1 ISZERO PUSH2 0x1A14 JUMPI POP DUP5 JUMPDEST ISZERO PUSH2 0x1A3C JUMPI PUSH2 0x1A26 PUSH1 0x2 DUP4 PUSH1 0x2A PUSH2 0x220E JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x1A33 JUMPI DUP7 PUSH2 0x1A35 JUMP JUMPDEST DUP8 JUMPDEST SWAP1 POP PUSH2 0x1A4C JUMP JUMPDEST DUP6 PUSH2 0x1A47 JUMPI DUP7 PUSH2 0x1A49 JUMP JUMPDEST DUP8 JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1A5E DUP12 PUSH2 0x1A59 DUP4 PUSH2 0x269D JUMP JUMPDEST PUSH2 0x26AD JUMP JUMPDEST SWAP11 POP PUSH2 0x1A72 DUP12 PUSH2 0x1A6D DUP4 PUSH2 0x26BE JUMP JUMPDEST PUSH2 0x26CE JUMP JUMPDEST SWAP11 POP PUSH2 0x1A86 DUP12 PUSH2 0x1A81 DUP4 PUSH2 0x26DF JUMP JUMPDEST PUSH2 0x26EF JUMP JUMPDEST SWAP11 POP PUSH2 0x1A9A DUP12 PUSH2 0x1A95 DUP4 PUSH2 0x2700 JUMP JUMPDEST PUSH2 0x2710 JUMP JUMPDEST SWAP11 POP PUSH2 0x1B0A JUMP JUMPDEST PUSH2 0x1ACE DUP12 DUP11 PUSH1 0x26 ADD PUSH1 0x0 PUSH2 0x1ABA DUP14 DUP16 PUSH1 0x4 DUP10 PUSH1 0x2B PUSH2 0x22E0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x26AD JUMP JUMPDEST SWAP11 POP PUSH2 0x1AE1 DUP12 PUSH2 0x1A6D DUP12 DUP14 DUP7 PUSH1 0x2C PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP PUSH2 0x1AF4 DUP12 PUSH2 0x1A81 DUP12 DUP14 DUP7 PUSH1 0x2D PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP PUSH2 0x1B07 DUP12 PUSH2 0x1A95 DUP12 DUP14 DUP7 PUSH1 0x2E PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP JUMPDEST DUP4 DUP1 ISZERO PUSH2 0x1B23 JUMPI POP DUP3 PUSH2 0x1B21 PUSH2 0x2710 DUP5 PUSH1 0x33 PUSH2 0x220E JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x1BBF JUMPI DUP6 DUP1 ISZERO PUSH2 0x1B32 JUMPI POP DUP5 JUMPDEST ISZERO PUSH2 0x1B5A JUMPI PUSH2 0x1B44 PUSH1 0x2 DUP4 PUSH1 0x34 PUSH2 0x220E JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x1B51 JUMPI DUP7 PUSH2 0x1B53 JUMP JUMPDEST DUP8 JUMPDEST SWAP1 POP PUSH2 0x1B6A JUMP JUMPDEST DUP6 PUSH2 0x1B65 JUMPI DUP7 PUSH2 0x1B67 JUMP JUMPDEST DUP8 JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1B7C DUP12 PUSH2 0x1B77 DUP4 PUSH2 0x2721 JUMP JUMPDEST PUSH2 0x2731 JUMP JUMPDEST SWAP11 POP PUSH2 0x1B90 DUP12 PUSH2 0x1B8B DUP4 PUSH2 0x2742 JUMP JUMPDEST PUSH2 0x2752 JUMP JUMPDEST SWAP11 POP PUSH2 0x1BA4 DUP12 PUSH2 0x1B9F DUP4 PUSH2 0x2763 JUMP JUMPDEST PUSH2 0x2773 JUMP JUMPDEST SWAP11 POP PUSH2 0x1BB8 DUP12 PUSH2 0x1BB3 DUP4 PUSH2 0x2784 JUMP JUMPDEST PUSH2 0x2794 JUMP JUMPDEST SWAP11 POP PUSH2 0x1C28 JUMP JUMPDEST PUSH2 0x1BEC DUP12 DUP11 PUSH1 0x26 ADD PUSH1 0x0 PUSH2 0x1BD8 DUP14 DUP16 PUSH1 0x5 DUP10 PUSH1 0x35 PUSH2 0x22E0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2731 JUMP JUMPDEST SWAP11 POP PUSH2 0x1BFF DUP12 PUSH2 0x1B8B DUP12 DUP14 DUP7 PUSH1 0x36 PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP PUSH2 0x1C12 DUP12 PUSH2 0x1B9F DUP12 DUP14 DUP7 PUSH1 0x37 PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP PUSH2 0x1C25 DUP12 PUSH2 0x1BB3 DUP12 DUP14 DUP7 PUSH1 0x38 PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP JUMPDEST DUP4 DUP1 ISZERO PUSH2 0x1C41 JUMPI POP DUP3 PUSH2 0x1C3F PUSH2 0x2710 DUP5 PUSH1 0x3D PUSH2 0x220E JUMP JUMPDEST LT JUMPDEST ISZERO PUSH2 0x1CDD JUMPI DUP6 DUP1 ISZERO PUSH2 0x1C50 JUMPI POP DUP5 JUMPDEST ISZERO PUSH2 0x1C78 JUMPI PUSH2 0x1C62 PUSH1 0x2 DUP4 PUSH1 0x3E PUSH2 0x220E JUMP JUMPDEST PUSH1 0x1 EQ PUSH2 0x1C6F JUMPI DUP7 PUSH2 0x1C71 JUMP JUMPDEST DUP8 JUMPDEST SWAP1 POP PUSH2 0x1C88 JUMP JUMPDEST DUP6 PUSH2 0x1C83 JUMPI DUP7 PUSH2 0x1C85 JUMP JUMPDEST DUP8 JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1C9A DUP12 PUSH2 0x1C95 DUP4 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x27B5 JUMP JUMPDEST SWAP11 POP PUSH2 0x1CAE DUP12 PUSH2 0x1CA9 DUP4 PUSH2 0x27C6 JUMP JUMPDEST PUSH2 0x27D6 JUMP JUMPDEST SWAP11 POP PUSH2 0x1CC2 DUP12 PUSH2 0x1CBD DUP4 PUSH2 0x27E7 JUMP JUMPDEST PUSH2 0x27F7 JUMP JUMPDEST SWAP11 POP PUSH2 0x1CD6 DUP12 PUSH2 0x1CD1 DUP4 PUSH2 0x2808 JUMP JUMPDEST PUSH2 0x2818 JUMP JUMPDEST SWAP11 POP PUSH2 0x1D46 JUMP JUMPDEST PUSH2 0x1D0A DUP12 DUP11 PUSH1 0x26 ADD PUSH1 0x0 PUSH2 0x1CF6 DUP14 DUP16 PUSH1 0x6 DUP10 PUSH1 0x3F PUSH2 0x22E0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x27B5 JUMP JUMPDEST SWAP11 POP PUSH2 0x1D1D DUP12 PUSH2 0x1CA9 DUP12 DUP14 DUP7 PUSH1 0x40 PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP PUSH2 0x1D30 DUP12 PUSH2 0x1CBD DUP12 DUP14 DUP7 PUSH1 0x41 PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP PUSH2 0x1D43 DUP12 PUSH2 0x1CD1 DUP12 DUP14 DUP7 PUSH1 0x42 PUSH2 0x2483 JUMP JUMPDEST SWAP11 POP JUMPDEST POP SWAP9 SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1E5B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1D9D SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D50 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1DE7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1DE4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1E41 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1E15 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E1A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1E39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x469 SWAP1 PUSH2 0x2CFE JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xC63 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E70 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x41 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH2 0x2825 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH2 0x100 PUSH2 0x2849 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH2 0x200 PUSH2 0x2849 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH2 0x400 PUSH2 0x2849 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH2 0x1800 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH3 0x1E000 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF AND PUSH3 0x1E0000 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1F3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6962556E69636F726E444E413A2063616E6E6F7420736574203020444E4100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x469 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F48 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x18 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD DUP8 DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH32 0x9224D149FACB2EC112BF239305994586C3A09A1776770EDCAF18F1EC3A4596B1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP3 AND ISZERO ISZERO PUSH2 0x360 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB8 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0xA DUP2 ADD DUP1 SLOAD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB SWAP1 SWAP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 ADD SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF1 PUSH2 0xAD1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH2 0x2000 DUP6 PUSH2 0x824 JUMP JUMPDEST PUSH2 0x200A SWAP2 SWAP1 PUSH2 0x2CCF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x2063 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x9 DUP7 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x9 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP5 MSTORE PUSH1 0x8 SWAP1 SWAP3 ADD DUP3 MSTORE DUP4 DUP4 KECCAK256 SWAP1 DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A6 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0xA DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x20BD SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2CCF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xA DUP6 ADD DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x20E9 JUMPI PUSH2 0x20E9 PUSH2 0x2C88 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP5 PUSH1 0xA ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x210C JUMPI PUSH2 0x210C PUSH2 0x2C88 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0xB DUP7 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP7 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0xA DUP5 ADD DUP1 SLOAD DUP1 PUSH2 0x2148 JUMPI PUSH2 0x2148 PUSH2 0x2DAA JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x216F PUSH2 0xAD1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x217C DUP5 PUSH2 0x824 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 SWAP1 SSTORE SWAP5 DUP3 MSTORE PUSH1 0x9 SWAP1 SWAP4 ADD SWAP1 SWAP3 MSTORE POP KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x21C1 DUP4 PUSH2 0x2867 JUMP JUMPDEST SWAP1 POP PUSH1 0x80 DUP2 AND ISZERO ISZERO PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x21DA DUP4 PUSH2 0x2867 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP2 AND ISZERO ISZERO PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH2 0x1800 PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH3 0x1E0000 PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x222D SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xC63 SWAP2 SWAP1 PUSH2 0x2DC0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH4 0x1FE00000 PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH4 0x1FE00000 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH5 0x1FE0000000 PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH5 0x1FE0000000 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH6 0x1FE000000000 PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH6 0x1FE000000000 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH7 0x1FE00000000000 PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH7 0x1FE00000000000 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x29 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP2 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2374 JUMPI PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x29 DUP11 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x2B DUP13 ADD SWAP3 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x233B JUMPI PUSH2 0x233B PUSH2 0x2C88 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH2 0x2360 SWAP2 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x236C DUP2 PUSH2 0x2CB4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x22FF JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2382 DUP3 DUP8 DUP8 PUSH2 0x220E JUMP JUMPDEST PUSH2 0x238D SWAP1 PUSH1 0x1 PUSH2 0x2CE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x241D JUMPI PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x29 DUP13 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x23C8 JUMPI PUSH2 0x23C8 PUSH2 0x2C88 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x2B DUP16 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x23F3 DUP2 DUP6 PUSH2 0x2CE6 JUMP JUMPDEST SWAP4 POP DUP4 DUP6 GT PUSH2 0x240A JUMPI POP SWAP6 POP PUSH2 0x247A SWAP5 POP POP POP POP POP JUMP JUMPDEST POP POP DUP1 PUSH2 0x2416 SWAP1 PUSH2 0x2CB4 JUMP JUMPDEST SWAP1 POP PUSH2 0x2393 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4861746368696E6746616365743A204661696C65642067657474696E6720524E PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x4720626F64797061727473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x469 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x21 DUP6 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x22 DUP9 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD DUP3 SWAP1 PUSH2 0x24AE SWAP1 DUP7 DUP7 PUSH2 0x220E JUMP JUMPDEST PUSH2 0x24B9 SWAP1 PUSH1 0x1 PUSH2 0x2CE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x253D JUMPI PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x21 DUP11 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x24E9 JUMPI PUSH2 0x24E9 PUSH2 0x2C88 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP10 PUSH1 0x23 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x2517 SWAP2 SWAP1 PUSH2 0x2CE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP5 GT PUSH2 0x252C JUMPI SWAP5 POP PUSH2 0xC63 SWAP4 POP POP POP POP JUMP JUMPDEST POP PUSH2 0x2536 DUP2 PUSH2 0x2CB4 JUMP JUMPDEST SWAP1 POP PUSH2 0x24BF JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4861746368696E6746616365743A204661696C65642067657474696E6720524E PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x472067656E65 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x469 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0x35 SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0x35 SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0x3D SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0x3D SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0x45 SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0x45 SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0x4D SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0x4D SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0x55 SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0x55 SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0x5D SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0x5D SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0x65 SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0x65 SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0x6D SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0x6D SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0x75 SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0x75 SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0x7D SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0x7D SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0x85 SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0x85 SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0x8D SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0x8D SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0x95 SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0x95 SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0x9D SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0x9D SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0xA5 SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0xA5 SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0xAD SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0xAD SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0xB5 SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0xB5 SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0xBD SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0xBD SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0xC5 SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0xC5 SHL PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360 DUP3 PUSH1 0xFF PUSH1 0xCD SHL PUSH2 0x2887 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E87 DUP4 DUP4 PUSH1 0xFF PUSH1 0xCD SHL JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2831 DUP4 PUSH2 0x28A0 JUMP JUMPDEST PUSH1 0x0 NOT DUP5 XOR DUP7 AND SWAP1 DUP6 SWAP1 SHL DUP5 AND OR SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC63 DUP5 DUP5 PUSH2 0x285B JUMPI PUSH1 0x0 PUSH2 0x285E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND DUP5 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2872 PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x19 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2893 DUP4 PUSH2 0x28A0 JUMP JUMPDEST SWAP3 SWAP1 SWAP4 AND SWAP1 SWAP2 SHR SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 DUP4 AND PUSH2 0x360 JUMPI PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHR SWAP2 PUSH2 0x28BC DUP2 PUSH2 0x2CB4 JUMP JUMPDEST SWAP1 POP PUSH2 0x28A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x28D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E87 DUP2 PUSH2 0x28C3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x291F JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2903 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2931 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E87 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x28F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x296B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2989 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29AA DUP4 PUSH2 0x2972 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x29CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29D6 DUP5 PUSH2 0x2972 JUMP JUMPDEST SWAP3 POP PUSH2 0x29E4 PUSH1 0x20 DUP6 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E87 DUP3 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A2B DUP4 PUSH2 0x2972 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2A40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A80 DUP6 PUSH2 0x2972 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A8E PUSH1 0x20 DUP7 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2AB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2AC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2AD8 JUMPI PUSH2 0x2AD8 PUSH2 0x2A4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2B00 JUMPI PUSH2 0x2B00 PUSH2 0x2A4B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2B19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B59 DUP4 PUSH2 0x2972 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B67 PUSH1 0x20 DUP5 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2B9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2BB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2BC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2BD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP POP DUP5 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2C10 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2C31 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2CC8 JUMPI PUSH2 0x2CC8 PUSH2 0x2C9E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2CE1 JUMPI PUSH2 0x2CE1 PUSH2 0x2C9E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2CF9 JUMPI PUSH2 0x2CF9 PUSH2 0x2C9E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2D83 SWAP1 DUP4 ADD DUP5 PUSH2 0x28F9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1E87 DUP2 PUSH2 0x28C3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2DDD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xC9 SWAP10 0xC6 SWAP11 0xA5 EXTCODESIZE EXP REVERT 0xF6 0xB7 SHL 0xB6 DUP2 INVALID STOP CALLCODE 0xCD 0xD1 PUSH5 0x17E9C4EC8D PUSH22 0x7EEB740AF96864736F6C634300080900330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        774,
        23811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "6": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "REVERT",
      "path": "18"
    },
    "16": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "POP",
      "path": "18"
    },
    "18": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "21": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "LT",
      "path": "18"
    },
    "22": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x14D"
    },
    "25": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "26": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "29": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "SHR",
      "path": "18"
    },
    "32": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "33": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5BB209A5"
    },
    "38": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "GT",
      "path": "18"
    },
    "39": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "43": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "44": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "GT",
      "path": "18"
    },
    "50": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "54": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "55": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "61": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x292"
    },
    "64": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "65": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "66": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "72": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2A5"
    },
    "75": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "76": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "77": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "83": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2B8"
    },
    "86": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "87": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "88": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE8A3D485"
    },
    "93": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "94": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2CB"
    },
    "97": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "98": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "99": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xE985E9C5"
    },
    "104": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "105": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D3"
    },
    "108": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "109": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "110": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xFAD5CDD6"
    },
    "115": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "116": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E6"
    },
    "119": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "120": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "123": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "REVERT",
      "path": "18"
    },
    "124": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "125": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "126": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x5BB209A5"
    },
    "131": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "132": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x241"
    },
    "135": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "136": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "137": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6352211E"
    },
    "142": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "143": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x254"
    },
    "146": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "147": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "148": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6B87D24C"
    },
    "153": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "154": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x267"
    },
    "157": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "158": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "159": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6C4B9134"
    },
    "164": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "165": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x26F"
    },
    "168": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "169": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "170": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x70A08231"
    },
    "175": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "176": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x277"
    },
    "179": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "180": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "181": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95D89B41"
    },
    "186": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "187": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x28A"
    },
    "190": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "191": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "193": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "194": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "REVERT",
      "path": "18"
    },
    "195": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "196": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "197": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x234A4B9B"
    },
    "202": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "GT",
      "path": "18"
    },
    "203": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "207": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "208": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x234A4B9B"
    },
    "213": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "214": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E5"
    },
    "217": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "218": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "219": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x23B872DD"
    },
    "224": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "225": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1ED"
    },
    "228": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "229": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "230": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2964502D"
    },
    "235": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "236": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x200"
    },
    "239": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "240": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "241": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x2F745C59"
    },
    "246": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "247": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x208"
    },
    "250": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "251": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "252": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x42842E0E"
    },
    "257": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "258": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x21B"
    },
    "261": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "262": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "263": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x4F6CCCE7"
    },
    "268": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "269": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x22E"
    },
    "272": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "273": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "275": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "276": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "REVERT",
      "path": "18"
    },
    "277": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "278": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "279": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x1FFC9A7"
    },
    "284": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "285": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x152"
    },
    "288": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "289": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "290": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6FDDE03"
    },
    "295": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "296": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x17A"
    },
    "299": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "300": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "301": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x81812FC"
    },
    "306": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "307": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x18F"
    },
    "310": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "311": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "312": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x95EA7B3"
    },
    "317": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "318": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1BA"
    },
    "321": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "322": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "323": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x18160DDD"
    },
    "328": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "EQ",
      "path": "18"
    },
    "329": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CF"
    },
    "332": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "333": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "334": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "336": {
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "DUP1",
      "path": "18"
    },
    "337": {
      "first_revert": true,
      "fn": null,
      "offset": [
        774,
        23811
      ],
      "op": "REVERT",
      "path": "18"
    },
    "338": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "339": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x165"
    },
    "342": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x160"
    },
    "345": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "346": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "348": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x28DC"
    },
    "351": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "jump": "i",
      "offset": [
        1022,
        1432
      ],
      "op": "JUMP",
      "path": "18"
    },
    "352": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "353": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F9"
    },
    "356": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "jump": "i",
      "offset": [
        1022,
        1432
      ],
      "op": "JUMP",
      "path": "18"
    },
    "357": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "358": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "360": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "361": {
      "op": "SWAP1"
    },
    "362": {
      "op": "ISZERO"
    },
    "363": {
      "op": "ISZERO"
    },
    "364": {
      "op": "DUP2"
    },
    "365": {
      "op": "MSTORE"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "368": {
      "op": "ADD"
    },
    "369": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "370": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "372": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "373": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "DUP1",
      "path": "18"
    },
    "374": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "375": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "SUB",
      "path": "18"
    },
    "376": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "377": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "RETURN",
      "path": "18"
    },
    "378": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2274,
        2406
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "379": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2274,
        2406
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x182"
    },
    "382": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2274,
        2406
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x366"
    },
    "385": {
      "fn": "ERC721WithDiamondStorage.name",
      "jump": "i",
      "offset": [
        2274,
        2406
      ],
      "op": "JUMP",
      "path": "18"
    },
    "386": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2274,
        2406
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "387": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2274,
        2406
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "389": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2274,
        2406
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "390": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2274,
        2406
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x171"
    },
    "393": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2274,
        2406
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "394": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2274,
        2406
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "395": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2274,
        2406
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2946"
    },
    "398": {
      "fn": "ERC721WithDiamondStorage.name",
      "jump": "i",
      "offset": [
        2274,
        2406
      ],
      "op": "JUMP",
      "path": "18"
    },
    "399": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5154,
        5483
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "400": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5154,
        5483
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A2"
    },
    "403": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5154,
        5483
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x19D"
    },
    "406": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5154,
        5483
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "407": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5154,
        5483
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "409": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5154,
        5483
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2959"
    },
    "412": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "jump": "i",
      "offset": [
        5154,
        5483
      ],
      "op": "JUMP",
      "path": "18"
    },
    "413": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5154,
        5483
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "414": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5154,
        5483
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x401"
    },
    "417": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "jump": "i",
      "offset": [
        5154,
        5483
      ],
      "op": "JUMP",
      "path": "18"
    },
    "418": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5154,
        5483
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "419": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5154,
        5483
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "421": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5154,
        5483
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "428": {
      "op": "SHL"
    },
    "429": {
      "op": "SUB"
    },
    "430": {
      "op": "SWAP1"
    },
    "431": {
      "op": "SWAP2"
    },
    "432": {
      "op": "AND"
    },
    "433": {
      "op": "DUP2"
    },
    "434": {
      "op": "MSTORE"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "437": {
      "op": "ADD"
    },
    "438": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5154,
        5483
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x171"
    },
    "441": {
      "op": "JUMP"
    },
    "442": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4674,
        5093
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "443": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4674,
        5093
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CD"
    },
    "446": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4674,
        5093
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1C8"
    },
    "449": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4674,
        5093
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "450": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4674,
        5093
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "452": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4674,
        5093
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x298E"
    },
    "455": {
      "fn": "ERC721WithDiamondStorage.approve",
      "jump": "i",
      "offset": [
        4674,
        5093
      ],
      "op": "JUMP",
      "path": "18"
    },
    "456": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4674,
        5093
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "457": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4674,
        5093
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x497"
    },
    "460": {
      "fn": "ERC721WithDiamondStorage.approve",
      "jump": "i",
      "offset": [
        4674,
        5093
      ],
      "op": "JUMP",
      "path": "18"
    },
    "461": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4674,
        5093
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "462": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4674,
        5093
      ],
      "op": "STOP",
      "path": "18"
    },
    "463": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16019,
        16215
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "464": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16019,
        16215
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D7"
    },
    "467": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16019,
        16215
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5AD"
    },
    "470": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "jump": "i",
      "offset": [
        16019,
        16215
      ],
      "op": "JUMP",
      "path": "18"
    },
    "471": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16019,
        16215
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "472": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16019,
        16215
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "474": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16019,
        16215
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "475": {
      "op": "SWAP1"
    },
    "476": {
      "op": "DUP2"
    },
    "477": {
      "op": "MSTORE"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "480": {
      "op": "ADD"
    },
    "481": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16019,
        16215
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x171"
    },
    "484": {
      "op": "JUMP"
    },
    "485": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "offset": [
        3190,
        3335
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "486": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "offset": [
        3190,
        3335
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D7"
    },
    "489": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "offset": [
        3190,
        3335
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5C2"
    },
    "492": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "jump": "i",
      "offset": [
        3190,
        3335
      ],
      "op": "JUMP",
      "path": "18"
    },
    "493": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6141,
        6453
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "494": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6141,
        6453
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CD"
    },
    "497": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6141,
        6453
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1FB"
    },
    "500": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6141,
        6453
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "501": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6141,
        6453
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "503": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6141,
        6453
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x29B8"
    },
    "506": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "jump": "i",
      "offset": [
        6141,
        6453
      ],
      "op": "JUMP",
      "path": "18"
    },
    "507": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6141,
        6453
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "508": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6141,
        6453
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5D5"
    },
    "511": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "jump": "i",
      "offset": [
        6141,
        6453
      ],
      "op": "JUMP",
      "path": "18"
    },
    "512": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "offset": [
        3430,
        3581
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "513": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "offset": [
        3430,
        3581
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D7"
    },
    "516": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "offset": [
        3430,
        3581
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x606"
    },
    "519": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "jump": "i",
      "offset": [
        3430,
        3581
      ],
      "op": "JUMP",
      "path": "18"
    },
    "520": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16294,
        16703
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "521": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16294,
        16703
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D7"
    },
    "524": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16294,
        16703
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x216"
    },
    "527": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16294,
        16703
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "528": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16294,
        16703
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "530": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16294,
        16703
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x298E"
    },
    "533": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        16294,
        16703
      ],
      "op": "JUMP",
      "path": "18"
    },
    "534": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16294,
        16703
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "535": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16294,
        16703
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x619"
    },
    "538": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        16294,
        16703
      ],
      "op": "JUMP",
      "path": "18"
    },
    "539": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6519,
        6698
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "540": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6519,
        6698
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CD"
    },
    "543": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6519,
        6698
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x229"
    },
    "546": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6519,
        6698
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "547": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6519,
        6698
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "549": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6519,
        6698
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x29B8"
    },
    "552": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "jump": "i",
      "offset": [
        6519,
        6698
      ],
      "op": "JUMP",
      "path": "18"
    },
    "553": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6519,
        6698
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "554": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6519,
        6698
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6BE"
    },
    "557": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "jump": "i",
      "offset": [
        6519,
        6698
      ],
      "op": "JUMP",
      "path": "18"
    },
    "558": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16775,
        17151
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "559": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16775,
        17151
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D7"
    },
    "562": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16775,
        17151
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x23C"
    },
    "565": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16775,
        17151
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "566": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16775,
        17151
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "568": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16775,
        17151
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2959"
    },
    "571": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "jump": "i",
      "offset": [
        16775,
        17151
      ],
      "op": "JUMP",
      "path": "18"
    },
    "572": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16775,
        17151
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "573": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16775,
        17151
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6D9"
    },
    "576": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "jump": "i",
      "offset": [
        16775,
        17151
      ],
      "op": "JUMP",
      "path": "18"
    },
    "577": {
      "fn": "ERC721WithDiamondStorage.getDNA",
      "offset": [
        22572,
        22693
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "578": {
      "fn": "ERC721WithDiamondStorage.getDNA",
      "offset": [
        22572,
        22693
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D7"
    },
    "581": {
      "fn": "ERC721WithDiamondStorage.getDNA",
      "offset": [
        22572,
        22693
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x24F"
    },
    "584": {
      "fn": "ERC721WithDiamondStorage.getDNA",
      "offset": [
        22572,
        22693
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "585": {
      "fn": "ERC721WithDiamondStorage.getDNA",
      "offset": [
        22572,
        22693
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "587": {
      "fn": "ERC721WithDiamondStorage.getDNA",
      "offset": [
        22572,
        22693
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2959"
    },
    "590": {
      "fn": "ERC721WithDiamondStorage.getDNA",
      "jump": "i",
      "offset": [
        22572,
        22693
      ],
      "op": "JUMP",
      "path": "18"
    },
    "591": {
      "fn": "ERC721WithDiamondStorage.getDNA",
      "offset": [
        22572,
        22693
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "592": {
      "fn": "ERC721WithDiamondStorage.getDNA",
      "offset": [
        22572,
        22693
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x779"
    },
    "595": {
      "fn": "ERC721WithDiamondStorage.getDNA",
      "jump": "i",
      "offset": [
        22572,
        22693
      ],
      "op": "JUMP",
      "path": "18"
    },
    "596": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        1865,
        2212
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "597": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        1865,
        2212
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1A2"
    },
    "600": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        1865,
        2212
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x262"
    },
    "603": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        1865,
        2212
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "604": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        1865,
        2212
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "606": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        1865,
        2212
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2959"
    },
    "609": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "jump": "i",
      "offset": [
        1865,
        2212
      ],
      "op": "JUMP",
      "path": "18"
    },
    "610": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        1865,
        2212
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "611": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        1865,
        2212
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x784"
    },
    "614": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "jump": "i",
      "offset": [
        1865,
        2212
      ],
      "op": "JUMP",
      "path": "18"
    },
    "615": {
      "fn": "ERC721WithDiamondStorage.license",
      "offset": [
        2969,
        3093
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "616": {
      "fn": "ERC721WithDiamondStorage.license",
      "offset": [
        2969,
        3093
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x182"
    },
    "619": {
      "fn": "ERC721WithDiamondStorage.license",
      "offset": [
        2969,
        3093
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x80C"
    },
    "622": {
      "fn": "ERC721WithDiamondStorage.license",
      "jump": "i",
      "offset": [
        2969,
        3093
      ],
      "op": "JUMP",
      "path": "18"
    },
    "623": {
      "fn": "ERC721WithDiamondStorage.genesisEggsMax",
      "offset": [
        3680,
        3792
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "624": {
      "offset": [
        722,
        727
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2710"
    },
    "627": {
      "fn": "ERC721WithDiamondStorage.genesisEggsMax",
      "offset": [
        3680,
        3792
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D7"
    },
    "630": {
      "fn": "ERC721WithDiamondStorage.genesisEggsMax",
      "offset": [
        3680,
        3792
      ],
      "op": "JUMP",
      "path": "18"
    },
    "631": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1491,
        1808
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "632": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1491,
        1808
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D7"
    },
    "635": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1491,
        1808
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x285"
    },
    "638": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1491,
        1808
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "639": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1491,
        1808
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "641": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1491,
        1808
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x29F4"
    },
    "644": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "jump": "i",
      "offset": [
        1491,
        1808
      ],
      "op": "JUMP",
      "path": "18"
    },
    "645": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1491,
        1808
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "646": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1491,
        1808
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x824"
    },
    "649": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "jump": "i",
      "offset": [
        1491,
        1808
      ],
      "op": "JUMP",
      "path": "18"
    },
    "650": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "offset": [
        2470,
        2606
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "651": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "offset": [
        2470,
        2606
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x182"
    },
    "654": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "offset": [
        2470,
        2606
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8B9"
    },
    "657": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "jump": "i",
      "offset": [
        2470,
        2606
      ],
      "op": "JUMP",
      "path": "18"
    },
    "658": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "offset": [
        5550,
        5731
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "659": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "offset": [
        5550,
        5731
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CD"
    },
    "662": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "offset": [
        5550,
        5731
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2A0"
    },
    "665": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "offset": [
        5550,
        5731
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "666": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "offset": [
        5550,
        5731
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "668": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "offset": [
        5550,
        5731
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2A0F"
    },
    "671": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "jump": "i",
      "offset": [
        5550,
        5731
      ],
      "op": "JUMP",
      "path": "18"
    },
    "672": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "offset": [
        5550,
        5731
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "673": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "offset": [
        5550,
        5731
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8D1"
    },
    "676": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "jump": "i",
      "offset": [
        5550,
        5731
      ],
      "op": "JUMP",
      "path": "18"
    },
    "677": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6764,
        7118
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "678": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6764,
        7118
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CD"
    },
    "681": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6764,
        7118
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2B3"
    },
    "684": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6764,
        7118
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "685": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6764,
        7118
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "687": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6764,
        7118
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2A61"
    },
    "690": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "jump": "i",
      "offset": [
        6764,
        7118
      ],
      "op": "JUMP",
      "path": "18"
    },
    "691": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6764,
        7118
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "692": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6764,
        7118
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8E0"
    },
    "695": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "jump": "i",
      "offset": [
        6764,
        7118
      ],
      "op": "JUMP",
      "path": "18"
    },
    "696": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        3858,
        4254
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "697": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        3858,
        4254
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x182"
    },
    "700": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        3858,
        4254
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C6"
    },
    "703": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        3858,
        4254
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "704": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        3858,
        4254
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "706": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        3858,
        4254
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2959"
    },
    "709": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "jump": "i",
      "offset": [
        3858,
        4254
      ],
      "op": "JUMP",
      "path": "18"
    },
    "710": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        3858,
        4254
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "711": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        3858,
        4254
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x918"
    },
    "714": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "jump": "i",
      "offset": [
        3858,
        4254
      ],
      "op": "JUMP",
      "path": "18"
    },
    "715": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "offset": [
        2739,
        2868
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "716": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "offset": [
        2739,
        2868
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x182"
    },
    "719": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "offset": [
        2739,
        2868
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA34"
    },
    "722": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "jump": "i",
      "offset": [
        2739,
        2868
      ],
      "op": "JUMP",
      "path": "18"
    },
    "723": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5797,
        6079
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "724": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5797,
        6079
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x165"
    },
    "727": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5797,
        6079
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2E1"
    },
    "730": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5797,
        6079
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "731": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5797,
        6079
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "733": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5797,
        6079
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2B3D"
    },
    "736": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "jump": "i",
      "offset": [
        5797,
        6079
      ],
      "op": "JUMP",
      "path": "18"
    },
    "737": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5797,
        6079
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "738": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5797,
        6079
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA4C"
    },
    "741": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "jump": "i",
      "offset": [
        5797,
        6079
      ],
      "op": "JUMP",
      "path": "18"
    },
    "742": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23535,
        23809
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "743": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23535,
        23809
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CD"
    },
    "746": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23535,
        23809
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2F4"
    },
    "749": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23535,
        23809
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "750": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23535,
        23809
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "752": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23535,
        23809
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2B70"
    },
    "755": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "jump": "i",
      "offset": [
        23535,
        23809
      ],
      "op": "JUMP",
      "path": "18"
    },
    "756": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23535,
        23809
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "757": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23535,
        23809
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA89"
    },
    "760": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "jump": "i",
      "offset": [
        23535,
        23809
      ],
      "op": "JUMP",
      "path": "18"
    },
    "761": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "762": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1164,
        1168
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "op": "SUB"
    },
    "772": {
      "op": "NOT"
    },
    "773": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1203,
        1243
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 0
    },
    "774": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1203,
        1243
      ],
      "op": "AND",
      "path": "18"
    },
    "775": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "780": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "782": {
      "op": "SHL"
    },
    "783": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1203,
        1243
      ],
      "op": "EQ",
      "path": "18"
    },
    "784": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1203,
        1243
      ],
      "op": "DUP1",
      "path": "18"
    },
    "785": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1203,
        1307
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x32A"
    },
    "788": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1203,
        1307
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "789": {
      "op": "POP"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "794": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "796": {
      "op": "SHL"
    },
    "797": {
      "op": "SUB"
    },
    "798": {
      "op": "NOT"
    },
    "799": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1259,
        1307
      ],
      "op": "DUP3",
      "path": "18"
    },
    "800": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1259,
        1307
      ],
      "op": "AND",
      "path": "18"
    },
    "801": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "806": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "808": {
      "op": "SHL"
    },
    "809": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1259,
        1307
      ],
      "op": "EQ",
      "path": "18"
    },
    "810": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1203,
        1307
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "811": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1203,
        1373
      ],
      "op": "DUP1",
      "path": "18"
    },
    "812": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1203,
        1373
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x345"
    },
    "815": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1203,
        1373
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "816": {
      "op": "POP"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "821": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "823": {
      "op": "SHL"
    },
    "824": {
      "op": "SUB"
    },
    "825": {
      "op": "NOT"
    },
    "826": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1323,
        1373
      ],
      "op": "DUP3",
      "path": "18"
    },
    "827": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1323,
        1373
      ],
      "op": "AND",
      "path": "18"
    },
    "828": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "833": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "835": {
      "op": "SHL"
    },
    "836": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1323,
        1373
      ],
      "op": "EQ",
      "path": "18"
    },
    "837": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1203,
        1373
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "838": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1203,
        1425
      ],
      "op": "DUP1",
      "path": "18"
    },
    "839": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1203,
        1425
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x360"
    },
    "842": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1203,
        1425
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "843": {
      "op": "POP"
    },
    "844": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "849": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "851": {
      "op": "SHL"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "856": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "858": {
      "op": "SHL"
    },
    "859": {
      "op": "SUB"
    },
    "860": {
      "op": "NOT"
    },
    "861": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 1
    },
    "862": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "11"
    },
    "863": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "11"
    },
    "864": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1389,
        1425
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "865": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1184,
        1425
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "866": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "offset": [
        1022,
        1432
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "867": {
      "op": "POP"
    },
    "868": {
      "op": "POP"
    },
    "869": {
      "fn": "ERC721WithDiamondStorage.supportsInterface",
      "jump": "o",
      "offset": [
        1022,
        1432
      ],
      "op": "JUMP",
      "path": "18"
    },
    "870": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2274,
        2406
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "871": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2328,
        2341
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "873": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2360,
        2387
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 2,
      "value": "0x370"
    },
    "876": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2360,
        2385
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "879": {
      "fn": "ERC721WithDiamondStorage.name",
      "jump": "i",
      "offset": [
        2360,
        2387
      ],
      "op": "JUMP",
      "path": "18"
    },
    "880": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2360,
        2387
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "881": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2360,
        2399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE"
    },
    "883": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2360,
        2399
      ],
      "op": "ADD",
      "path": "18"
    },
    "884": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP1",
      "path": "18"
    },
    "885": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "886": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x37E"
    },
    "889": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "890": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BFC"
    },
    "893": {
      "fn": "ERC721WithDiamondStorage.name",
      "jump": "i",
      "offset": [
        2353,
        2399
      ],
      "op": "JUMP",
      "path": "18"
    },
    "894": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "895": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP1",
      "path": "18"
    },
    "896": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "898": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "ADD",
      "path": "18"
    },
    "899": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "901": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP1",
      "path": "18"
    },
    "902": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "903": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DIV",
      "path": "18"
    },
    "904": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "MUL",
      "path": "18"
    },
    "905": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "907": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "ADD",
      "path": "18"
    },
    "908": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "910": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "911": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "912": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP2",
      "path": "18"
    },
    "913": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "ADD",
      "path": "18"
    },
    "914": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "916": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "917": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP1",
      "path": "18"
    },
    "918": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "919": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "920": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "921": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP2",
      "path": "18"
    },
    "922": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP2",
      "path": "18"
    },
    "923": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "924": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "926": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "ADD",
      "path": "18"
    },
    "927": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP3",
      "path": "18"
    },
    "928": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP1",
      "path": "18"
    },
    "929": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "930": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3AA"
    },
    "933": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "934": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BFC"
    },
    "937": {
      "fn": "ERC721WithDiamondStorage.name",
      "jump": "i",
      "offset": [
        2353,
        2399
      ],
      "op": "JUMP",
      "path": "18"
    },
    "938": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "939": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP1",
      "path": "18"
    },
    "940": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "941": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3F7"
    },
    "944": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "945": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP1",
      "path": "18"
    },
    "946": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "948": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "LT",
      "path": "18"
    },
    "949": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3CC"
    },
    "952": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "953": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "956": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP1",
      "path": "18"
    },
    "957": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP4",
      "path": "18"
    },
    "958": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "959": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DIV",
      "path": "18"
    },
    "960": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "MUL",
      "path": "18"
    },
    "961": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP4",
      "path": "18"
    },
    "962": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "963": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "964": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "966": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "ADD",
      "path": "18"
    },
    "967": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "968": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3F7"
    },
    "971": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "JUMP",
      "path": "18"
    },
    "972": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "973": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP3",
      "path": "18"
    },
    "974": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "ADD",
      "path": "18"
    },
    "975": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "976": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "977": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "979": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "980": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "982": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "984": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "985": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "986": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "987": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP2",
      "path": "18"
    },
    "988": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "989": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP2",
      "path": "18"
    },
    "990": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "991": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "992": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "994": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "ADD",
      "path": "18"
    },
    "995": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "996": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "998": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "ADD",
      "path": "18"
    },
    "999": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1000": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1001": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "GT",
      "path": "18"
    },
    "1002": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3DA"
    },
    "1005": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1006": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1007": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1008": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SUB",
      "path": "18"
    },
    "1009": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "1011": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "AND",
      "path": "18"
    },
    "1012": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1013": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "ADD",
      "path": "18"
    },
    "1014": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1015": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1016": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "POP",
      "path": "18"
    },
    "1017": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "POP",
      "path": "18"
    },
    "1018": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "POP",
      "path": "18"
    },
    "1019": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "POP",
      "path": "18"
    },
    "1020": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "POP",
      "path": "18"
    },
    "1021": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1022": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2353,
        2399
      ],
      "op": "POP",
      "path": "18"
    },
    "1023": {
      "fn": "ERC721WithDiamondStorage.name",
      "offset": [
        2274,
        2406
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1024": {
      "fn": "ERC721WithDiamondStorage.name",
      "jump": "o",
      "offset": [
        2274,
        2406
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1025": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5154,
        5483
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1026": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5270,
        5277
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1028": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5314,
        5330
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 3,
      "value": "0x40C"
    },
    "1031": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5322,
        5329
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1032": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5314,
        5321
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAF5"
    },
    "1035": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "jump": "i",
      "offset": [
        5314,
        5330
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1036": {
      "branch": 239,
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5314,
        5330
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1037": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x472"
    },
    "1040": {
      "branch": 239,
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1041": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1043": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1044": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1050": {
      "op": "SHL"
    },
    "1051": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1052": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1055": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1057": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1058": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "ADD",
      "path": "18"
    },
    "1059": {
      "op": "MSTORE"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1064": {
      "op": "DUP3"
    },
    "1065": {
      "op": "ADD"
    },
    "1066": {
      "op": "MSTORE"
    },
    "1067": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1102": {
      "op": "DUP3"
    },
    "1103": {
      "op": "ADD"
    },
    "1104": {
      "op": "MSTORE"
    },
    "1105": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "1120": {
      "op": "SHL"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1123": {
      "op": "DUP3"
    },
    "1124": {
      "op": "ADD"
    },
    "1125": {
      "op": "MSTORE"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1128": {
      "op": "ADD"
    },
    "1129": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1130": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1132": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1133": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1134": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1135": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "SUB",
      "path": "18"
    },
    "1136": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1137": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "18"
    },
    "1138": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5293,
        5400
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1139": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5445
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 4,
      "value": "0x47A"
    },
    "1142": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5443
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "1145": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "jump": "i",
      "offset": [
        5418,
        5445
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1146": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5445
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1147": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1149": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5476
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1150": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5476
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1151": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5476
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1152": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5467
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "1154": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5467
      ],
      "op": "ADD",
      "path": "18"
    },
    "1155": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1157": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5476
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1158": {
      "op": "POP"
    },
    "1159": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5476
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1161": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5476
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1162": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5476
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1163": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5476
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1170": {
      "op": "SHL"
    },
    "1171": {
      "op": "SUB"
    },
    "1172": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5476
      ],
      "op": "AND",
      "path": "18"
    },
    "1173": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "offset": [
        5418,
        5476
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1174": {
      "fn": "ERC721WithDiamondStorage.getApproved",
      "jump": "o",
      "offset": [
        5154,
        5483
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1175": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4674,
        5093
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1176": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4754,
        4767
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1178": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4770,
        4811
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x4A2"
    },
    "1181": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4803,
        4810
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1182": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4770,
        4802
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x784"
    },
    "1185": {
      "fn": "ERC721WithDiamondStorage.approve",
      "jump": "i",
      "offset": [
        4770,
        4811
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1186": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4770,
        4811
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1187": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4754,
        4811
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1188": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4754,
        4811
      ],
      "op": "POP",
      "path": "18"
    },
    "1189": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4835,
        4840
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 5
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1196": {
      "op": "SHL"
    },
    "1197": {
      "op": "SUB"
    },
    "1198": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4829,
        4840
      ],
      "op": "AND",
      "path": "18"
    },
    "1199": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4829,
        4831
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1206": {
      "op": "SHL"
    },
    "1207": {
      "op": "SUB"
    },
    "1208": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4829,
        4840
      ],
      "op": "AND",
      "path": "18"
    },
    "1209": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4829,
        4840
      ],
      "op": "EQ",
      "path": "18"
    },
    "1210": {
      "branch": 240,
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4829,
        4840
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "1211": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4821,
        4878
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x510"
    },
    "1214": {
      "branch": 240,
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4821,
        4878
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1215": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4821,
        4878
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1217": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4821,
        4878
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1218": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1224": {
      "op": "SHL"
    },
    "1225": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4821,
        4878
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1226": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4821,
        4878
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1229": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4821,
        4878
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1231": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4821,
        4878
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1232": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4821,
        4878
      ],
      "op": "ADD",
      "path": "18"
    },
    "1233": {
      "op": "MSTORE"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1238": {
      "op": "DUP3"
    },
    "1239": {
      "op": "ADD"
    },
    "1240": {
      "op": "MSTORE"
    },
    "1241": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1276": {
      "op": "DUP3"
    },
    "1277": {
      "op": "ADD"
    },
    "1278": {
      "op": "MSTORE"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1283": {
      "op": "SHL"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1286": {
      "op": "DUP3"
    },
    "1287": {
      "op": "ADD"
    },
    "1288": {
      "op": "MSTORE"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1291": {
      "op": "ADD"
    },
    "1292": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4821,
        4878
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "1295": {
      "op": "JUMP"
    },
    "1296": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4821,
        4878
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1297": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 6
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1304": {
      "op": "SHL"
    },
    "1305": {
      "op": "SUB"
    },
    "1306": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4910,
        4931
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 7
    },
    "1307": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4910,
        4931
      ],
      "op": "AND",
      "path": "18"
    },
    "1308": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4910,
        4931
      ],
      "op": "EQ",
      "path": "18"
    },
    "1309": {
      "branch": 241,
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4910,
        4931
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1310": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4910,
        4972
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x52C"
    },
    "1313": {
      "branch": 241,
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4910,
        4972
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1314": {
      "op": "POP"
    },
    "1315": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4935,
        4972
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x52C"
    },
    "1318": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4952,
        4957
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1319": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1320": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5797,
        6079
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA4C"
    },
    "1323": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "jump": "i",
      "offset": [
        5797,
        6079
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1324": {
      "branch": 242,
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4935,
        4972
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1325": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4889,
        5054
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x59E"
    },
    "1328": {
      "branch": 242,
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4889,
        5054
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1329": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4889,
        5054
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1331": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4889,
        5054
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1332": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1338": {
      "op": "SHL"
    },
    "1339": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4889,
        5054
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1340": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4889,
        5054
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1343": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4889,
        5054
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1345": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4889,
        5054
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1346": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4889,
        5054
      ],
      "op": "ADD",
      "path": "18"
    },
    "1347": {
      "op": "MSTORE"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1352": {
      "op": "DUP3"
    },
    "1353": {
      "op": "ADD"
    },
    "1354": {
      "op": "MSTORE"
    },
    "1355": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1390": {
      "op": "DUP3"
    },
    "1391": {
      "op": "ADD"
    },
    "1392": {
      "op": "MSTORE"
    },
    "1393": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1428": {
      "op": "DUP3"
    },
    "1429": {
      "op": "ADD"
    },
    "1430": {
      "op": "MSTORE"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1433": {
      "op": "ADD"
    },
    "1434": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4889,
        5054
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "1437": {
      "op": "JUMP"
    },
    "1438": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4889,
        5054
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1439": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        5065,
        5086
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 8,
      "value": "0x5A8"
    },
    "1442": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        5074,
        5076
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1443": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        5078,
        5085
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1444": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        5065,
        5073
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB23"
    },
    "1447": {
      "fn": "ERC721WithDiamondStorage.approve",
      "jump": "i",
      "offset": [
        5065,
        5086
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1448": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        5065,
        5086
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1449": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4744,
        5093
      ],
      "op": "POP",
      "path": "18"
    },
    "1450": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4674,
        5093
      ],
      "op": "POP",
      "path": "18"
    },
    "1451": {
      "fn": "ERC721WithDiamondStorage.approve",
      "offset": [
        4674,
        5093
      ],
      "op": "POP",
      "path": "18"
    },
    "1452": {
      "fn": "ERC721WithDiamondStorage.approve",
      "jump": "o",
      "offset": [
        4674,
        5093
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1453": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16019,
        16215
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1454": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16080,
        16087
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1456": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16099,
        16135
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1457": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16138,
        16165
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5B8"
    },
    "1460": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16138,
        16163
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "1463": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "jump": "i",
      "offset": [
        16138,
        16165
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1464": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16138,
        16165
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1465": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16182,
        16201
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 9,
      "value": "0xA"
    },
    "1467": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16182,
        16201
      ],
      "op": "ADD",
      "path": "18"
    },
    "1468": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16182,
        16208
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1469": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16182,
        16208
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1470": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "offset": [
        16019,
        16215
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1471": {
      "op": "POP"
    },
    "1472": {
      "op": "POP"
    },
    "1473": {
      "fn": "ERC721WithDiamondStorage.totalSupply",
      "jump": "o",
      "offset": [
        16019,
        16215
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1474": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "offset": [
        3190,
        3335
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1475": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "offset": [
        3240,
        3247
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1477": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "offset": [
        3266,
        3293
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 10,
      "value": "0x5CC"
    },
    "1480": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "offset": [
        3266,
        3291
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "1483": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "jump": "i",
      "offset": [
        3266,
        3293
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1484": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "offset": [
        3266,
        3293
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1485": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "offset": [
        3266,
        3328
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x12"
    },
    "1487": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "offset": [
        3266,
        3328
      ],
      "op": "ADD",
      "path": "18"
    },
    "1488": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "offset": [
        3266,
        3328
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1489": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "offset": [
        3259,
        3328
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1490": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "offset": [
        3259,
        3328
      ],
      "op": "POP",
      "path": "18"
    },
    "1491": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "offset": [
        3190,
        3335
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1492": {
      "fn": "ERC721WithDiamondStorage.presaleUnlockTime",
      "jump": "o",
      "offset": [
        3190,
        3335
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1493": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6141,
        6453
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1494": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6291,
        6332
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 11,
      "value": "0x5DF"
    },
    "1497": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1498": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6324,
        6331
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1499": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6291,
        6309
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBA1"
    },
    "1502": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "jump": "i",
      "offset": [
        6291,
        6332
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1503": {
      "branch": 243,
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6291,
        6332
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1504": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6270,
        6407
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5FB"
    },
    "1507": {
      "branch": 243,
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6270,
        6407
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1508": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6270,
        6407
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1510": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6270,
        6407
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1511": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1517": {
      "op": "SHL"
    },
    "1518": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6270,
        6407
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1519": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6270,
        6407
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1520": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6270,
        6407
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1522": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6270,
        6407
      ],
      "op": "ADD",
      "path": "18"
    },
    "1523": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6270,
        6407
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "1526": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6270,
        6407
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1527": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6270,
        6407
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C37"
    },
    "1530": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "jump": "i",
      "offset": [
        6270,
        6407
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1531": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6270,
        6407
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1532": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6418,
        6446
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 12,
      "value": "0x5A8"
    },
    "1535": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6428,
        6432
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1536": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6434,
        6436
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1537": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6438,
        6445
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1538": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "offset": [
        6418,
        6427
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC6B"
    },
    "1541": {
      "fn": "ERC721WithDiamondStorage.transferFrom",
      "jump": "i",
      "offset": [
        6418,
        6446
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1542": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "offset": [
        3430,
        3581
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1543": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "offset": [
        3488,
        3495
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1545": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "offset": [
        3514,
        3541
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 13,
      "value": "0x610"
    },
    "1548": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "offset": [
        3514,
        3539
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "1551": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "jump": "i",
      "offset": [
        3514,
        3541
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1552": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "offset": [
        3514,
        3541
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1553": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "offset": [
        3514,
        3574
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x13"
    },
    "1555": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "offset": [
        3514,
        3574
      ],
      "op": "ADD",
      "path": "18"
    },
    "1556": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "offset": [
        3514,
        3574
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1557": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "offset": [
        3507,
        3574
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1558": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "offset": [
        3507,
        3574
      ],
      "op": "POP",
      "path": "18"
    },
    "1559": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "offset": [
        3430,
        3581
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1560": {
      "fn": "ERC721WithDiamondStorage.presaleHatchingUnlockTime",
      "jump": "o",
      "offset": [
        3430,
        3581
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1561": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16294,
        16703
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1562": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16431,
        16438
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1564": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16454,
        16490
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1565": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16493,
        16520
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x624"
    },
    "1568": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16493,
        16518
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "1571": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        16493,
        16520
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1572": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16493,
        16520
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1573": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16454,
        16520
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1574": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16454,
        16520
      ],
      "op": "POP",
      "path": "18"
    },
    "1575": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16559,
        16575
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 14,
      "value": "0x62F"
    },
    "1578": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16569,
        16574
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1579": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16559,
        16568
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x824"
    },
    "1582": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        16559,
        16575
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1583": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16559,
        16575
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1584": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16551,
        16556
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1585": {
      "branch": 244,
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16551,
        16575
      ],
      "op": "LT",
      "path": "18"
    },
    "1586": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16530,
        16644
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x691"
    },
    "1589": {
      "branch": 244,
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16530,
        16644
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1590": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16530,
        16644
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1592": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16530,
        16644
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1593": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1599": {
      "op": "SHL"
    },
    "1600": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16530,
        16644
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1601": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16530,
        16644
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1604": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16530,
        16644
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1606": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16530,
        16644
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1607": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16530,
        16644
      ],
      "op": "ADD",
      "path": "18"
    },
    "1608": {
      "op": "MSTORE"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1613": {
      "op": "DUP3"
    },
    "1614": {
      "op": "ADD"
    },
    "1615": {
      "op": "MSTORE"
    },
    "1616": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1651": {
      "op": "DUP3"
    },
    "1652": {
      "op": "ADD"
    },
    "1653": {
      "op": "MSTORE"
    },
    "1654": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1668": {
      "op": "SHL"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1671": {
      "op": "DUP3"
    },
    "1672": {
      "op": "ADD"
    },
    "1673": {
      "op": "MSTORE"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1676": {
      "op": "ADD"
    },
    "1677": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16530,
        16644
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "1680": {
      "op": "JUMP"
    },
    "1681": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16530,
        16644
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1688": {
      "op": "SHL"
    },
    "1689": {
      "op": "SUB"
    },
    "1690": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16689
      ],
      "op": "SWAP4",
      "path": "18",
      "statement": 15
    },
    "1691": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16689
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1692": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16689
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1693": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16689
      ],
      "op": "AND",
      "path": "18"
    },
    "1694": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16689
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1696": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16689
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1697": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16689
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1698": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16689
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1699": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16682
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "1701": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16682
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1702": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16682
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1703": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16682
      ],
      "op": "ADD",
      "path": "18"
    },
    "1704": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16689
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1706": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16689
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1707": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16689
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1708": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16689
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1709": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16689
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1711": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16689
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1712": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16689
      ],
      "op": "DUP6",
      "path": "18"
    },
    "1713": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16689
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1714": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16696
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1715": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16696
      ],
      "op": "DUP6",
      "path": "18"
    },
    "1716": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16696
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1717": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16696
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1718": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16696
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1719": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16696
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1720": {
      "op": "POP"
    },
    "1721": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16696
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1722": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16696
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1723": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16696
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1724": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "offset": [
        16661,
        16696
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1725": {
      "fn": "ERC721WithDiamondStorage.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        16294,
        16703
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1726": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6519,
        6698
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1727": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6652,
        6691
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 16,
      "value": "0x5A8"
    },
    "1730": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6669,
        6673
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1731": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6675,
        6677
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1732": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6679,
        6686
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1733": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6652,
        6691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1735": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6652,
        6691
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1736": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6652,
        6691
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1737": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6652,
        6691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1739": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6652,
        6691
      ],
      "op": "ADD",
      "path": "18"
    },
    "1740": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6652,
        6691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1742": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6652,
        6691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1743": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6652,
        6691
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1744": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6652,
        6691
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1746": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6652,
        6691
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1747": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6652,
        6691
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1748": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6652,
        6691
      ],
      "op": "POP",
      "path": "18"
    },
    "1749": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6652,
        6668
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8E0"
    },
    "1752": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "jump": "i",
      "offset": [
        6652,
        6691
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1753": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16775,
        17151
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1754": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16890,
        16897
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1756": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16913,
        16949
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1757": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16952,
        16979
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6E4"
    },
    "1760": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16952,
        16977
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "1763": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "jump": "i",
      "offset": [
        16952,
        16979
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1764": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16952,
        16979
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1765": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16913,
        16979
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1766": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16913,
        16979
      ],
      "op": "POP",
      "path": "18"
    },
    "1767": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17018,
        17031
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 17,
      "value": "0x6EE"
    },
    "1770": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17018,
        17029
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5AD"
    },
    "1773": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "jump": "i",
      "offset": [
        17018,
        17031
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1774": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17018,
        17031
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1775": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17010,
        17015
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1776": {
      "branch": 245,
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17010,
        17031
      ],
      "op": "LT",
      "path": "18"
    },
    "1777": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16989,
        17101
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x751"
    },
    "1780": {
      "branch": 245,
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16989,
        17101
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1781": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16989,
        17101
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1783": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16989,
        17101
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1784": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1790": {
      "op": "SHL"
    },
    "1791": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16989,
        17101
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1792": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16989,
        17101
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1795": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16989,
        17101
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1797": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16989,
        17101
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1798": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16989,
        17101
      ],
      "op": "ADD",
      "path": "18"
    },
    "1799": {
      "op": "MSTORE"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1804": {
      "op": "DUP3"
    },
    "1805": {
      "op": "ADD"
    },
    "1806": {
      "op": "MSTORE"
    },
    "1807": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1842": {
      "op": "DUP3"
    },
    "1843": {
      "op": "ADD"
    },
    "1844": {
      "op": "MSTORE"
    },
    "1845": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1860": {
      "op": "SHL"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1863": {
      "op": "DUP3"
    },
    "1864": {
      "op": "ADD"
    },
    "1865": {
      "op": "MSTORE"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1868": {
      "op": "ADD"
    },
    "1869": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16989,
        17101
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "1872": {
      "op": "JUMP"
    },
    "1873": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16989,
        17101
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1874": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17120
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 18
    },
    "1875": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17137
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "1877": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17137
      ],
      "op": "ADD",
      "path": "18"
    },
    "1878": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17138,
        17143
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1879": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1880": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1881": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1882": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "LT",
      "path": "18"
    },
    "1883": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x766"
    },
    "1886": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1887": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x766"
    },
    "1890": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C88"
    },
    "1893": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "jump": "i",
      "offset": [
        17118,
        17144
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1894": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1895": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1896": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1898": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1899": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1901": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1903": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1904": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "ADD",
      "path": "18"
    },
    "1905": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17118,
        17144
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1906": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17111,
        17144
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1907": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17111,
        17144
      ],
      "op": "POP",
      "path": "18"
    },
    "1908": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        17111,
        17144
      ],
      "op": "POP",
      "path": "18"
    },
    "1909": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16775,
        17151
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1910": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16775,
        17151
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1911": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "offset": [
        16775,
        17151
      ],
      "op": "POP",
      "path": "18"
    },
    "1912": {
      "fn": "ERC721WithDiamondStorage.tokenByIndex",
      "jump": "o",
      "offset": [
        16775,
        17151
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1913": {
      "fn": "ERC721WithDiamondStorage.getDNA",
      "offset": [
        22572,
        22693
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1914": {
      "fn": "ERC721WithDiamondStorage.getDNA",
      "offset": [
        22629,
        22636
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1916": {
      "fn": "ERC721WithDiamondStorage.getDNA",
      "offset": [
        22655,
        22686
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 19,
      "value": "0x360"
    },
    "1919": {
      "fn": "ERC721WithDiamondStorage.getDNA",
      "offset": [
        22677,
        22685
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1920": {
      "fn": "ERC721WithDiamondStorage.getDNA",
      "offset": [
        22655,
        22676
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xECD"
    },
    "1923": {
      "fn": "ERC721WithDiamondStorage.getDNA",
      "jump": "i",
      "offset": [
        22655,
        22686
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1924": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        1865,
        2212
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1925": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        1977,
        1984
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1927": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2000,
        2013
      ],
      "op": "DUP1",
      "path": "18"
    },
    "1928": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2043
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x78F"
    },
    "1931": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2041
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "1934": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "jump": "i",
      "offset": [
        2016,
        2043
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1935": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2043
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1936": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2066
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1938": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2066
      ],
      "op": "DUP5",
      "path": "18"
    },
    "1939": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2066
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1940": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2066
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1941": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2057
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x6"
    },
    "1943": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2057
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1944": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2057
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1945": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2057
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "1946": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2057
      ],
      "op": "ADD",
      "path": "18"
    },
    "1947": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2066
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "1949": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2066
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1950": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2066
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1952": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2066
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1953": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2066
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "1954": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2066
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1961": {
      "op": "SHL"
    },
    "1962": {
      "op": "SUB"
    },
    "1963": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2066
      ],
      "op": "AND",
      "path": "18"
    },
    "1964": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2016,
        2066
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "1965": {
      "op": "POP"
    },
    "1966": {
      "branch": 246,
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2097,
        2116
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 20
    },
    "1967": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2076,
        2183
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x360"
    },
    "1970": {
      "branch": 246,
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2076,
        2183
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1971": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2076,
        2183
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "1973": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2076,
        2183
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "1974": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1980": {
      "op": "SHL"
    },
    "1981": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2076,
        2183
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1982": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2076,
        2183
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1985": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2076,
        2183
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "1987": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2076,
        2183
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1988": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2076,
        2183
      ],
      "op": "ADD",
      "path": "18"
    },
    "1989": {
      "op": "MSTORE"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1994": {
      "op": "DUP3"
    },
    "1995": {
      "op": "ADD"
    },
    "1996": {
      "op": "MSTORE"
    },
    "1997": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2032": {
      "op": "DUP3"
    },
    "2033": {
      "op": "ADD"
    },
    "2034": {
      "op": "MSTORE"
    },
    "2035": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2047": {
      "op": "SHL"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2050": {
      "op": "DUP3"
    },
    "2051": {
      "op": "ADD"
    },
    "2052": {
      "op": "MSTORE"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2055": {
      "op": "ADD"
    },
    "2056": {
      "fn": "ERC721WithDiamondStorage.ownerOf",
      "offset": [
        2076,
        2183
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "2059": {
      "op": "JUMP"
    },
    "2060": {
      "fn": "ERC721WithDiamondStorage.license",
      "offset": [
        2969,
        3093
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2061": {
      "fn": "ERC721WithDiamondStorage.license",
      "offset": [
        3009,
        3022
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2063": {
      "fn": "ERC721WithDiamondStorage.license",
      "offset": [
        3041,
        3068
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 21,
      "value": "0x816"
    },
    "2066": {
      "fn": "ERC721WithDiamondStorage.license",
      "offset": [
        3041,
        3066
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "2069": {
      "fn": "ERC721WithDiamondStorage.license",
      "jump": "i",
      "offset": [
        3041,
        3068
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2070": {
      "fn": "ERC721WithDiamondStorage.license",
      "offset": [
        3041,
        3068
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2071": {
      "fn": "ERC721WithDiamondStorage.license",
      "offset": [
        3041,
        3086
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x11"
    },
    "2073": {
      "fn": "ERC721WithDiamondStorage.license",
      "offset": [
        3041,
        3086
      ],
      "op": "ADD",
      "path": "18"
    },
    "2074": {
      "fn": "ERC721WithDiamondStorage.license",
      "offset": [
        3034,
        3086
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2075": {
      "fn": "ERC721WithDiamondStorage.license",
      "offset": [
        3034,
        3086
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2076": {
      "fn": "ERC721WithDiamondStorage.license",
      "offset": [
        3034,
        3086
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x37E"
    },
    "2079": {
      "fn": "ERC721WithDiamondStorage.license",
      "offset": [
        3034,
        3086
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2080": {
      "fn": "ERC721WithDiamondStorage.license",
      "offset": [
        3034,
        3086
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BFC"
    },
    "2083": {
      "fn": "ERC721WithDiamondStorage.license",
      "jump": "i",
      "offset": [
        3034,
        3086
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2084": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1491,
        1808
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2085": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1603,
        1610
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2093": {
      "op": "SHL"
    },
    "2094": {
      "op": "SUB"
    },
    "2095": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1647,
        1666
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 22
    },
    "2096": {
      "branch": 247,
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1647,
        1666
      ],
      "op": "AND",
      "path": "18"
    },
    "2097": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1626,
        1734
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x88F"
    },
    "2100": {
      "branch": 247,
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1626,
        1734
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2101": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1626,
        1734
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2103": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1626,
        1734
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2104": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2110": {
      "op": "SHL"
    },
    "2111": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1626,
        1734
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2112": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1626,
        1734
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2115": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1626,
        1734
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2117": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1626,
        1734
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2118": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1626,
        1734
      ],
      "op": "ADD",
      "path": "18"
    },
    "2119": {
      "op": "MSTORE"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2124": {
      "op": "DUP3"
    },
    "2125": {
      "op": "ADD"
    },
    "2126": {
      "op": "MSTORE"
    },
    "2127": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2162": {
      "op": "DUP3"
    },
    "2163": {
      "op": "ADD"
    },
    "2164": {
      "op": "MSTORE"
    },
    "2165": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2178": {
      "op": "SHL"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2181": {
      "op": "DUP3"
    },
    "2182": {
      "op": "ADD"
    },
    "2183": {
      "op": "MSTORE"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2186": {
      "op": "ADD"
    },
    "2187": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1626,
        1734
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "2190": {
      "op": "JUMP"
    },
    "2191": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1626,
        1734
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2192": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1778
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 23,
      "value": "0x897"
    },
    "2195": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1776
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "2198": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "jump": "i",
      "offset": [
        1751,
        1778
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2199": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1778
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2206": {
      "op": "SHL"
    },
    "2207": {
      "op": "SUB"
    },
    "2208": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1801
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2209": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1801
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2210": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1801
      ],
      "op": "AND",
      "path": "18"
    },
    "2211": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1801
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2213": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1801
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2214": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1801
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2215": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1801
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2216": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1794
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "2218": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1794
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2219": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1794
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2220": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1794
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2221": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1794
      ],
      "op": "ADD",
      "path": "18"
    },
    "2222": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1801
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2224": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1801
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2225": {
      "op": "POP"
    },
    "2226": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1801
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2228": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1801
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2229": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1801
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2230": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1801
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2231": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "offset": [
        1751,
        1801
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2232": {
      "fn": "ERC721WithDiamondStorage.balanceOf",
      "jump": "o",
      "offset": [
        1491,
        1808
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2233": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "offset": [
        2470,
        2606
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2234": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "offset": [
        2526,
        2539
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2236": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "offset": [
        2558,
        2585
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 24,
      "value": "0x8C3"
    },
    "2239": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "offset": [
        2558,
        2583
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "2242": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "jump": "i",
      "offset": [
        2558,
        2585
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2243": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "offset": [
        2558,
        2585
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2244": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "offset": [
        2558,
        2599
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF"
    },
    "2246": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "offset": [
        2558,
        2599
      ],
      "op": "ADD",
      "path": "18"
    },
    "2247": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "offset": [
        2551,
        2599
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2248": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "offset": [
        2551,
        2599
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2249": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "offset": [
        2551,
        2599
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x37E"
    },
    "2252": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "offset": [
        2551,
        2599
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2253": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "offset": [
        2551,
        2599
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BFC"
    },
    "2256": {
      "fn": "ERC721WithDiamondStorage.symbol",
      "jump": "i",
      "offset": [
        2551,
        2599
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2257": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "offset": [
        5550,
        5731
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2258": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "offset": [
        5672,
        5724
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 25,
      "value": "0x8DC"
    },
    "2261": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2262": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "offset": [
        5705,
        5713
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2263": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "offset": [
        5715,
        5723
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2264": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "offset": [
        5672,
        5690
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF02"
    },
    "2267": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "jump": "i",
      "offset": [
        5672,
        5724
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2268": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "offset": [
        5672,
        5724
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2269": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "offset": [
        5550,
        5731
      ],
      "op": "POP",
      "path": "18"
    },
    "2270": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "offset": [
        5550,
        5731
      ],
      "op": "POP",
      "path": "18"
    },
    "2271": {
      "fn": "ERC721WithDiamondStorage.setApprovalForAll",
      "jump": "o",
      "offset": [
        5550,
        5731
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2272": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6764,
        7118
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2273": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6946,
        6987
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 26,
      "value": "0x8EA"
    },
    "2276": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2277": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6979,
        6986
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2278": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6946,
        6964
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xBA1"
    },
    "2281": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "jump": "i",
      "offset": [
        6946,
        6987
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2282": {
      "branch": 248,
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6946,
        6987
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2283": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6925,
        7062
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x906"
    },
    "2286": {
      "branch": 248,
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6925,
        7062
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2287": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6925,
        7062
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2289": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6925,
        7062
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2290": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2296": {
      "op": "SHL"
    },
    "2297": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6925,
        7062
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2298": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6925,
        7062
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2299": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6925,
        7062
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2301": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6925,
        7062
      ],
      "op": "ADD",
      "path": "18"
    },
    "2302": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6925,
        7062
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "2305": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6925,
        7062
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2306": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6925,
        7062
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C37"
    },
    "2309": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "jump": "i",
      "offset": [
        6925,
        7062
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2310": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6925,
        7062
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2311": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        7072,
        7111
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 27,
      "value": "0x912"
    },
    "2314": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        7086,
        7090
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2315": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        7092,
        7094
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2316": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        7096,
        7103
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2317": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        7105,
        7110
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2318": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        7072,
        7085
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xFE5"
    },
    "2321": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "jump": "i",
      "offset": [
        7072,
        7111
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2322": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        7072,
        7111
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2323": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6764,
        7118
      ],
      "op": "POP",
      "path": "18"
    },
    "2324": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6764,
        7118
      ],
      "op": "POP",
      "path": "18"
    },
    "2325": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6764,
        7118
      ],
      "op": "POP",
      "path": "18"
    },
    "2326": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "offset": [
        6764,
        7118
      ],
      "op": "POP",
      "path": "18"
    },
    "2327": {
      "fn": "ERC721WithDiamondStorage.safeTransferFrom",
      "jump": "o",
      "offset": [
        6764,
        7118
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2328": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        3858,
        4254
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2329": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        3971,
        3984
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2331": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4021,
        4037
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 28,
      "value": "0x923"
    },
    "2334": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4029,
        4036
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2335": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4021,
        4028
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAF5"
    },
    "2338": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "jump": "i",
      "offset": [
        4021,
        4037
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2339": {
      "branch": 249,
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4021,
        4037
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2340": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4000,
        4110
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x987"
    },
    "2343": {
      "branch": 249,
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4000,
        4110
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2344": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4000,
        4110
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2346": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4000,
        4110
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2347": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2353": {
      "op": "SHL"
    },
    "2354": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4000,
        4110
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2355": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4000,
        4110
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2358": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4000,
        4110
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2360": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4000,
        4110
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2361": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4000,
        4110
      ],
      "op": "ADD",
      "path": "18"
    },
    "2362": {
      "op": "MSTORE"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2367": {
      "op": "DUP3"
    },
    "2368": {
      "op": "ADD"
    },
    "2369": {
      "op": "MSTORE"
    },
    "2370": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2405": {
      "op": "DUP3"
    },
    "2406": {
      "op": "ADD"
    },
    "2407": {
      "op": "MSTORE"
    },
    "2408": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "2426": {
      "op": "SHL"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2429": {
      "op": "DUP3"
    },
    "2430": {
      "op": "ADD"
    },
    "2431": {
      "op": "MSTORE"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2434": {
      "op": "ADD"
    },
    "2435": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4000,
        4110
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "2438": {
      "op": "JUMP"
    },
    "2439": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4000,
        4110
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2440": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4143
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2442": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4173
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x991"
    },
    "2445": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4171
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "2448": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "jump": "i",
      "offset": [
        4146,
        4173
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2449": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4173
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2450": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2452": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4221
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2453": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4221
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2454": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4221
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2455": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4190
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x14"
    },
    "2457": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4190
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2458": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4190
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2459": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4190
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2460": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4190
      ],
      "op": "ADD",
      "path": "18"
    },
    "2461": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2463": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4221
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2464": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2466": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4221
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2467": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4146,
        4221
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2468": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2469": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2470": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9AE"
    },
    "2473": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2474": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BFC"
    },
    "2477": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "jump": "i",
      "offset": [
        4120,
        4221
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2478": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2479": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2480": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2482": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "ADD",
      "path": "18"
    },
    "2483": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2485": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2486": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2487": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DIV",
      "path": "18"
    },
    "2488": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "MUL",
      "path": "18"
    },
    "2489": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2491": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "ADD",
      "path": "18"
    },
    "2492": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2494": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2495": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2496": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2497": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "ADD",
      "path": "18"
    },
    "2498": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2500": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2501": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2502": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2503": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2504": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2505": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2506": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2507": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2508": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2510": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "ADD",
      "path": "18"
    },
    "2511": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2512": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2513": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2514": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9DA"
    },
    "2517": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2518": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BFC"
    },
    "2521": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "jump": "i",
      "offset": [
        4120,
        4221
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2522": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2523": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2524": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2525": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA27"
    },
    "2528": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2529": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2530": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2532": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "LT",
      "path": "18"
    },
    "2533": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9FC"
    },
    "2536": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2537": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x100"
    },
    "2540": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2541": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2542": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2543": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DIV",
      "path": "18"
    },
    "2544": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "MUL",
      "path": "18"
    },
    "2545": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2546": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2547": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2548": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2550": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "ADD",
      "path": "18"
    },
    "2551": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2552": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA27"
    },
    "2555": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2556": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2557": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2558": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "ADD",
      "path": "18"
    },
    "2559": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2560": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2561": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2563": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2564": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2566": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2568": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2569": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2570": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2571": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2572": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2573": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2574": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2575": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2576": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2578": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "ADD",
      "path": "18"
    },
    "2579": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2580": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2582": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "ADD",
      "path": "18"
    },
    "2583": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2584": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2585": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "GT",
      "path": "18"
    },
    "2586": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA0A"
    },
    "2589": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2590": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2591": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2592": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SUB",
      "path": "18"
    },
    "2593": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2595": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "AND",
      "path": "18"
    },
    "2596": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2597": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "ADD",
      "path": "18"
    },
    "2598": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2599": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2600": {
      "op": "POP"
    },
    "2601": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2602": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        4120,
        4221
      ],
      "op": "SWAP8",
      "path": "18"
    },
    "2603": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "offset": [
        3858,
        4254
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "2604": {
      "op": "POP"
    },
    "2605": {
      "op": "POP"
    },
    "2606": {
      "op": "POP"
    },
    "2607": {
      "op": "POP"
    },
    "2608": {
      "op": "POP"
    },
    "2609": {
      "op": "POP"
    },
    "2610": {
      "op": "POP"
    },
    "2611": {
      "fn": "ERC721WithDiamondStorage.tokenURI",
      "jump": "o",
      "offset": [
        3858,
        4254
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2612": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "offset": [
        2739,
        2868
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2613": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "offset": [
        2783,
        2796
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2615": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "offset": [
        2815,
        2842
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 29,
      "value": "0xA3E"
    },
    "2618": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "offset": [
        2815,
        2840
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "2621": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "jump": "i",
      "offset": [
        2815,
        2842
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2622": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "offset": [
        2815,
        2842
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2623": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "offset": [
        2815,
        2861
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x10"
    },
    "2625": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "offset": [
        2815,
        2861
      ],
      "op": "ADD",
      "path": "18"
    },
    "2626": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "offset": [
        2808,
        2861
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2627": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "offset": [
        2808,
        2861
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2628": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "offset": [
        2808,
        2861
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x37E"
    },
    "2631": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "offset": [
        2808,
        2861
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2632": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "offset": [
        2808,
        2861
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2BFC"
    },
    "2635": {
      "fn": "ERC721WithDiamondStorage.contractURI",
      "jump": "i",
      "offset": [
        2808,
        2861
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2636": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5797,
        6079
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2637": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5934,
        5938
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2639": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6000
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 30,
      "value": "0xA56"
    },
    "2642": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        5998
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "2645": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "jump": "i",
      "offset": [
        5973,
        6000
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2646": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6000
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2653": {
      "op": "SHL"
    },
    "2654": {
      "op": "SUB"
    },
    "2655": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6032
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2656": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6032
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2657": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6032
      ],
      "op": "AND",
      "path": "18"
    },
    "2658": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6032
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2660": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6032
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2661": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6032
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2662": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6032
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2663": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6025
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xD"
    },
    "2665": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6025
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2666": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6025
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2667": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6025
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2668": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6025
      ],
      "op": "ADD",
      "path": "18"
    },
    "2669": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6032
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2671": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6032
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2672": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6032
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2673": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6032
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2674": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6032
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2676": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6032
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2677": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6032
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2678": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6032
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2679": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6072
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "2680": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6072
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2681": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6072
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "2682": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6072
      ],
      "op": "AND",
      "path": "18"
    },
    "2683": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6072
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2684": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6072
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2685": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6072
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2686": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6072
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2687": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6072
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2688": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6072
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2689": {
      "op": "POP"
    },
    "2690": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6072
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2691": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6072
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2692": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6072
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xFF"
    },
    "2694": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6072
      ],
      "op": "AND",
      "path": "18"
    },
    "2695": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "offset": [
        5973,
        6072
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2696": {
      "fn": "ERC721WithDiamondStorage.isApprovedForAll",
      "jump": "o",
      "offset": [
        5797,
        6079
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2697": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23535,
        23809
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2698": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23642,
        23677
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 31,
      "value": "0xA91"
    },
    "2701": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23642,
        23675
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1018"
    },
    "2704": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "jump": "i",
      "offset": [
        23642,
        23677
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2705": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23642,
        23677
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2706": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23692,
        23701
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2708": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23687,
        23803
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2709": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23707,
        23727
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2710": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23707,
        23727
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2711": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23707,
        23727
      ],
      "op": "LT",
      "path": "18"
    },
    "2712": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23687,
        23803
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2713": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23687,
        23803
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x912"
    },
    "2716": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23687,
        23803
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2717": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23748,
        23792
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 32,
      "value": "0xABE"
    },
    "2720": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23771,
        23780
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2721": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23771,
        23780
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2722": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23781,
        23782
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2723": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23771,
        23783
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2724": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23771,
        23783
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2725": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23771,
        23783
      ],
      "op": "LT",
      "path": "18"
    },
    "2726": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23771,
        23783
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAB1"
    },
    "2729": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23771,
        23783
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2730": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23771,
        23783
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAB1"
    },
    "2733": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23771,
        23783
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C88"
    },
    "2736": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "jump": "i",
      "offset": [
        23771,
        23783
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2737": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23771,
        23783
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2738": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23771,
        23783
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2739": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23771,
        23783
      ],
      "op": "POP",
      "path": "18"
    },
    "2740": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23771,
        23783
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2742": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23771,
        23783
      ],
      "op": "MUL",
      "path": "18"
    },
    "2743": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23771,
        23783
      ],
      "op": "ADD",
      "path": "18"
    },
    "2744": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23771,
        23783
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "2745": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23785,
        23791
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2746": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23748,
        23770
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1088"
    },
    "2749": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "jump": "i",
      "offset": [
        23748,
        23792
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2750": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23748,
        23792
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2751": {
      "op": "POP"
    },
    "2752": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23729,
        23732
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 33
    },
    "2753": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23729,
        23732
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAC9"
    },
    "2756": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23729,
        23732
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2757": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23729,
        23732
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2CB4"
    },
    "2760": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "jump": "i",
      "offset": [
        23729,
        23732
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2761": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23729,
        23732
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2762": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23729,
        23732
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2763": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23729,
        23732
      ],
      "op": "POP",
      "path": "18"
    },
    "2764": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23729,
        23732
      ],
      "op": "POP",
      "path": "18"
    },
    "2765": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23687,
        23803
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA94"
    },
    "2768": {
      "fn": "ERC721WithDiamondStorage.setDNAForGenesisTokens",
      "offset": [
        23687,
        23803
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2769": {
      "fn": "LibDiamond.diamondStorage",
      "offset": [
        9129,
        9410
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2770": {
      "offset": [
        572,
        617
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C"
    },
    "2803": {
      "fn": "LibDiamond.diamondStorage",
      "offset": [
        572,
        617
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2804": {
      "fn": "LibDiamond.diamondStorage",
      "jump": "o",
      "offset": [
        9129,
        9410
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2805": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8624,
        8783
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2806": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8689,
        8693
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2808": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8689,
        8693
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2809": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8739
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 34,
      "value": "0xB00"
    },
    "2812": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8737
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "2815": {
      "fn": "ERC721WithDiamondStorage._exists",
      "jump": "i",
      "offset": [
        8712,
        8739
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2816": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8739
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2817": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8762
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2819": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8762
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "2820": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8762
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2821": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8762
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2822": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8753
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x6"
    },
    "2824": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8753
      ],
      "op": "ADD",
      "path": "18"
    },
    "2825": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8762
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2827": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8762
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2828": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8762
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2830": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8762
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2831": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8762
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "2832": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8762
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2833": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8762
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2840": {
      "op": "SHL"
    },
    "2841": {
      "op": "SUB"
    },
    "2842": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8762
      ],
      "op": "AND",
      "path": "18"
    },
    "2843": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2844": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8776
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2845": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8776
      ],
      "op": "EQ",
      "path": "18"
    },
    "2846": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8776
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2847": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8776
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2848": {
      "fn": "ERC721WithDiamondStorage._exists",
      "offset": [
        8712,
        8776
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2849": {
      "op": "POP"
    },
    "2850": {
      "fn": "ERC721WithDiamondStorage._exists",
      "jump": "o",
      "offset": [
        8624,
        8783
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2851": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13495,
        13769
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2852": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13569,
        13605
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2854": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13608,
        13635
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB2D"
    },
    "2857": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13608,
        13633
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "2860": {
      "fn": "ERC721WithDiamondStorage._approve",
      "jump": "i",
      "offset": [
        13608,
        13635
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2861": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13608,
        13635
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2862": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13678
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 35,
      "value": "0x0"
    },
    "2864": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13678
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2865": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13678
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2866": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13678
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2867": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13669
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xC"
    },
    "2869": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13669
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2870": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13669
      ],
      "op": "ADD",
      "path": "18"
    },
    "2871": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13678
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2873": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13678
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2874": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13678
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2876": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13678
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2877": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13678
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "2878": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13683
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2879": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13683
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2886": {
      "op": "SHL"
    },
    "2887": {
      "op": "SUB"
    },
    "2888": {
      "op": "NOT"
    },
    "2889": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13683
      ],
      "op": "AND",
      "path": "18"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2896": {
      "op": "SHL"
    },
    "2897": {
      "op": "SUB"
    },
    "2898": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13683
      ],
      "op": "DUP7",
      "path": "18"
    },
    "2899": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13683
      ],
      "op": "AND",
      "path": "18"
    },
    "2900": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13683
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2901": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13683
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2902": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13683
      ],
      "op": "OR",
      "path": "18"
    },
    "2903": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13683
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2904": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13683
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2905": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13683
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "2906": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13669
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2907": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13669
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2908": {
      "op": "POP"
    },
    "2909": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13678
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2910": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13678
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2911": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13707,
        13748
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 36,
      "value": "0xB67"
    },
    "2914": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13645,
        13678
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2915": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13707,
        13739
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x784"
    },
    "2918": {
      "fn": "ERC721WithDiamondStorage._approve",
      "jump": "i",
      "offset": [
        13707,
        13748
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2919": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13707,
        13748
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2926": {
      "op": "SHL"
    },
    "2927": {
      "op": "SUB"
    },
    "2928": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13698,
        13762
      ],
      "op": "AND",
      "path": "18"
    },
    "2929": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13698,
        13762
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2962": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13698,
        13762
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2964": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13698,
        13762
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2965": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13698,
        13762
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2967": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13698,
        13762
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2968": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13698,
        13762
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2969": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13698,
        13762
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2970": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13698,
        13762
      ],
      "op": "SUB",
      "path": "18"
    },
    "2971": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13698,
        13762
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2972": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13698,
        13762
      ],
      "op": "LOG4",
      "path": "18"
    },
    "2973": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13559,
        13769
      ],
      "op": "POP",
      "path": "18"
    },
    "2974": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13495,
        13769
      ],
      "op": "POP",
      "path": "18"
    },
    "2975": {
      "fn": "ERC721WithDiamondStorage._approve",
      "offset": [
        13495,
        13769
      ],
      "op": "POP",
      "path": "18"
    },
    "2976": {
      "fn": "ERC721WithDiamondStorage._approve",
      "jump": "o",
      "offset": [
        13495,
        13769
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2977": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        8941,
        9397
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2978": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9066,
        9070
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2980": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9107,
        9123
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 37,
      "value": "0xBAC"
    },
    "2983": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9115,
        9122
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2984": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9107,
        9114
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAF5"
    },
    "2987": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        9107,
        9123
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2988": {
      "branch": 250,
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9107,
        9123
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2989": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9086,
        9193
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC0D"
    },
    "2992": {
      "branch": 250,
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9086,
        9193
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2993": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9086,
        9193
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2995": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9086,
        9193
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2996": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3002": {
      "op": "SHL"
    },
    "3003": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9086,
        9193
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3004": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9086,
        9193
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3007": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9086,
        9193
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3009": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9086,
        9193
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3010": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9086,
        9193
      ],
      "op": "ADD",
      "path": "18"
    },
    "3011": {
      "op": "MSTORE"
    },
    "3012": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3016": {
      "op": "DUP3"
    },
    "3017": {
      "op": "ADD"
    },
    "3018": {
      "op": "MSTORE"
    },
    "3019": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3054": {
      "op": "DUP3"
    },
    "3055": {
      "op": "ADD"
    },
    "3056": {
      "op": "MSTORE"
    },
    "3057": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "3072": {
      "op": "SHL"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3075": {
      "op": "DUP3"
    },
    "3076": {
      "op": "ADD"
    },
    "3077": {
      "op": "MSTORE"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3080": {
      "op": "ADD"
    },
    "3081": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9086,
        9193
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "3084": {
      "op": "JUMP"
    },
    "3085": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9086,
        9193
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3086": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9203,
        9216
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3088": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9219,
        9260
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC18"
    },
    "3091": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9252,
        9259
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3092": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9219,
        9251
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x784"
    },
    "3095": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        9219,
        9260
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3096": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9219,
        9260
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3097": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9203,
        9260
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3098": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9203,
        9260
      ],
      "op": "POP",
      "path": "18"
    },
    "3099": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9289,
        9294
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 38
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3106": {
      "op": "SHL"
    },
    "3107": {
      "op": "SUB"
    },
    "3108": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9278,
        9294
      ],
      "op": "AND",
      "path": "18"
    },
    "3109": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9278,
        9285
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3116": {
      "op": "SHL"
    },
    "3117": {
      "op": "SUB"
    },
    "3118": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9278,
        9294
      ],
      "op": "AND",
      "path": "18"
    },
    "3119": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9278,
        9294
      ],
      "op": "EQ",
      "path": "18"
    },
    "3120": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9278,
        9341
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3121": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9278,
        9341
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC53"
    },
    "3124": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9278,
        9341
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3125": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9278,
        9341
      ],
      "op": "POP",
      "path": "18"
    },
    "3126": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9334,
        9341
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3133": {
      "op": "SHL"
    },
    "3134": {
      "op": "SUB"
    },
    "3135": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9310,
        9341
      ],
      "op": "AND",
      "path": "18"
    },
    "3136": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9310,
        9330
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC48"
    },
    "3139": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9322,
        9329
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3140": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9310,
        9321
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x401"
    },
    "3143": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        9310,
        9330
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3144": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9310,
        9330
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3151": {
      "op": "SHL"
    },
    "3152": {
      "op": "SUB"
    },
    "3153": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9310,
        9341
      ],
      "op": "AND",
      "path": "18"
    },
    "3154": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9310,
        9341
      ],
      "op": "EQ",
      "path": "18"
    },
    "3155": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9278,
        9341
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3156": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9278,
        9389
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3157": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9278,
        9389
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC63"
    },
    "3160": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9278,
        9389
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3161": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9278,
        9389
      ],
      "op": "POP",
      "path": "18"
    },
    "3162": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9357,
        9389
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC63"
    },
    "3165": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9374,
        9379
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3166": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9381,
        9388
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3167": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9357,
        9373
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xA4C"
    },
    "3170": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        9357,
        9389
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3171": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9357,
        9389
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3172": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        9270,
        9390
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3173": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "offset": [
        8941,
        9397
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3174": {
      "op": "POP"
    },
    "3175": {
      "op": "POP"
    },
    "3176": {
      "op": "POP"
    },
    "3177": {
      "op": "POP"
    },
    "3178": {
      "fn": "ERC721WithDiamondStorage._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        8941,
        9397
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3179": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12473,
        13384
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3180": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12658,
        12662
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 39
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3187": {
      "op": "SHL"
    },
    "3188": {
      "op": "SUB"
    },
    "3189": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12613,
        12662
      ],
      "op": "AND",
      "path": "18"
    },
    "3190": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12613,
        12654
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC7E"
    },
    "3193": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12646,
        12653
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3194": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12613,
        12645
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x784"
    },
    "3197": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "jump": "i",
      "offset": [
        12613,
        12654
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3198": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12613,
        12654
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3205": {
      "op": "SHL"
    },
    "3206": {
      "op": "SUB"
    },
    "3207": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12613,
        12662
      ],
      "op": "AND",
      "path": "18"
    },
    "3208": {
      "branch": 251,
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12613,
        12662
      ],
      "op": "EQ",
      "path": "18"
    },
    "3209": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12592,
        12729
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xCE6"
    },
    "3212": {
      "branch": 251,
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12592,
        12729
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3213": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12592,
        12729
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3215": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12592,
        12729
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3222": {
      "op": "SHL"
    },
    "3223": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12592,
        12729
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3224": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12592,
        12729
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3227": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12592,
        12729
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3229": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12592,
        12729
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3230": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12592,
        12729
      ],
      "op": "ADD",
      "path": "18"
    },
    "3231": {
      "op": "MSTORE"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3236": {
      "op": "DUP3"
    },
    "3237": {
      "op": "ADD"
    },
    "3238": {
      "op": "MSTORE"
    },
    "3239": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3274": {
      "op": "DUP3"
    },
    "3275": {
      "op": "ADD"
    },
    "3276": {
      "op": "MSTORE"
    },
    "3277": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "3289": {
      "op": "SHL"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3292": {
      "op": "DUP3"
    },
    "3293": {
      "op": "ADD"
    },
    "3294": {
      "op": "MSTORE"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3297": {
      "op": "ADD"
    },
    "3298": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12592,
        12729
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "3301": {
      "op": "JUMP"
    },
    "3302": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12592,
        12729
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3309": {
      "op": "SHL"
    },
    "3310": {
      "op": "SUB"
    },
    "3311": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12747,
        12763
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 40
    },
    "3312": {
      "branch": 252,
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12747,
        12763
      ],
      "op": "AND",
      "path": "18"
    },
    "3313": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12739,
        12804
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD48"
    },
    "3316": {
      "branch": 252,
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12739,
        12804
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3317": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12739,
        12804
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3319": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12739,
        12804
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3320": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3326": {
      "op": "SHL"
    },
    "3327": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12739,
        12804
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3328": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12739,
        12804
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3331": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12739,
        12804
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3333": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12739,
        12804
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3334": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12739,
        12804
      ],
      "op": "ADD",
      "path": "18"
    },
    "3335": {
      "op": "MSTORE"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3338": {
      "op": "DUP1"
    },
    "3339": {
      "op": "DUP3"
    },
    "3340": {
      "op": "ADD"
    },
    "3341": {
      "op": "MSTORE"
    },
    "3342": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3377": {
      "op": "DUP3"
    },
    "3378": {
      "op": "ADD"
    },
    "3379": {
      "op": "MSTORE"
    },
    "3380": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3387": {
      "op": "SHL"
    },
    "3388": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3390": {
      "op": "DUP3"
    },
    "3391": {
      "op": "ADD"
    },
    "3392": {
      "op": "MSTORE"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3395": {
      "op": "ADD"
    },
    "3396": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12739,
        12804
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "3399": {
      "op": "JUMP"
    },
    "3400": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12739,
        12804
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3401": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12835,
        12881
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 41,
      "value": "0xD51"
    },
    "3404": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12873,
        12880
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3405": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12835,
        12872
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x116E"
    },
    "3408": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "jump": "i",
      "offset": [
        12835,
        12881
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3409": {
      "branch": 253,
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12835,
        12881
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3410": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12814,
        13001
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xDE9"
    },
    "3413": {
      "branch": 253,
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12814,
        13001
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3414": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12814,
        13001
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3416": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12814,
        13001
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3417": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3423": {
      "op": "SHL"
    },
    "3424": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12814,
        13001
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3425": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12814,
        13001
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3428": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12814,
        13001
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3430": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12814,
        13001
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3431": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12814,
        13001
      ],
      "op": "ADD",
      "path": "18"
    },
    "3432": {
      "op": "MSTORE"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x5E"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3437": {
      "op": "DUP3"
    },
    "3438": {
      "op": "ADD"
    },
    "3439": {
      "op": "MSTORE"
    },
    "3440": {
      "op": "PUSH32",
      "value": "0x455243373231576974684469616D6F6E6453746F726167653A2043616E6E6F74"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3475": {
      "op": "DUP3"
    },
    "3476": {
      "op": "ADD"
    },
    "3477": {
      "op": "MSTORE"
    },
    "3478": {
      "op": "PUSH32",
      "value": "0x207472616E73666572206120556E69636F726E206C6F636B656420696E206761"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3513": {
      "op": "DUP3"
    },
    "3514": {
      "op": "ADD"
    },
    "3515": {
      "op": "MSTORE"
    },
    "3516": {
      "op": "PUSH32",
      "value": "0x6D65206F7220636F6F6C696E6720646F776E2066726F6D20756E6C6F636B0000"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3551": {
      "op": "DUP3"
    },
    "3552": {
      "op": "ADD"
    },
    "3553": {
      "op": "MSTORE"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3556": {
      "op": "ADD"
    },
    "3557": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12814,
        13001
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "3560": {
      "op": "JUMP"
    },
    "3561": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12814,
        13001
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3562": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13012,
        13051
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 42,
      "value": "0xDF4"
    },
    "3565": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13033,
        13037
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3566": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13039,
        13041
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3567": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13043,
        13050
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3568": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13012,
        13032
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11C6"
    },
    "3571": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "jump": "i",
      "offset": [
        13012,
        13051
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3572": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13012,
        13051
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3573": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13113,
        13142
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 43,
      "value": "0xDFF"
    },
    "3576": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13130,
        13131
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3578": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13134,
        13141
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3579": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13113,
        13121
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB23"
    },
    "3582": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "jump": "i",
      "offset": [
        13113,
        13142
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3583": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13113,
        13142
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3584": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13152,
        13188
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3586": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13191,
        13218
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE09"
    },
    "3589": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13191,
        13216
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "3592": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "jump": "i",
      "offset": [
        13191,
        13218
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3593": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13191,
        13218
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3600": {
      "op": "SHL"
    },
    "3601": {
      "op": "SUB"
    },
    "3602": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13252
      ],
      "op": "DUP6",
      "path": "18",
      "statement": 44
    },
    "3603": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13252
      ],
      "op": "AND",
      "path": "18"
    },
    "3604": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13252
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3606": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13252
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3607": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13252
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3608": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13252
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3609": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13246
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "3611": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13246
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3612": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13246
      ],
      "op": "ADD",
      "path": "18"
    },
    "3613": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13252
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3615": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13252
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3616": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13252
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3618": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13252
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3619": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13252
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3620": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13257
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3621": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13257
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3622": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13152,
        13218
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3623": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13152,
        13218
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3624": {
      "op": "POP"
    },
    "3625": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13256,
        13257
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3627": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13256,
        13257
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3628": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13252
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3629": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13252
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3630": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13252
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3631": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13257
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE39"
    },
    "3634": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13257
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3635": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13256,
        13257
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3636": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13256,
        13257
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3637": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13257
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2CCF"
    },
    "3640": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "jump": "i",
      "offset": [
        13228,
        13257
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3641": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13257
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3642": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13257
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3643": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13257
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3644": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13228,
        13257
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3645": {
      "op": "POP"
    },
    "3646": {
      "op": "POP"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3653": {
      "op": "SHL"
    },
    "3654": {
      "op": "SUB"
    },
    "3655": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13289
      ],
      "op": "DUP4",
      "path": "18",
      "statement": 45
    },
    "3656": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13289
      ],
      "op": "AND",
      "path": "18"
    },
    "3657": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13289
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3659": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13289
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3660": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13289
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3661": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13289
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3662": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13285
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x7"
    },
    "3664": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13285
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3665": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13285
      ],
      "op": "ADD",
      "path": "18"
    },
    "3666": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13289
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3668": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13289
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3669": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13289
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3671": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13289
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3672": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13289
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3673": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13294
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3674": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13294
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3675": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13293,
        13294
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "3677": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13293,
        13294
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3678": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13289
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3679": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13294
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xE69"
    },
    "3682": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13294
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3683": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13293,
        13294
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3684": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13293,
        13294
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3685": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13294
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2CE6"
    },
    "3688": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "jump": "i",
      "offset": [
        13267,
        13294
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3689": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13294
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3690": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13294
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3691": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13294
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3692": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13267,
        13294
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3693": {
      "op": "POP"
    },
    "3694": {
      "op": "POP"
    },
    "3695": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13329
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 46,
      "value": "0x0"
    },
    "3697": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13329
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3698": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13329
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3699": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13329
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3700": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13320
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x6"
    },
    "3702": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13320
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3703": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13320
      ],
      "op": "ADD",
      "path": "18"
    },
    "3704": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13329
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3706": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13329
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3707": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13329
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3709": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13329
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3710": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13329
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3711": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13329
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3712": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13334
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3713": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13334
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3720": {
      "op": "SHL"
    },
    "3721": {
      "op": "SUB"
    },
    "3722": {
      "op": "NOT"
    },
    "3723": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13334
      ],
      "op": "AND",
      "path": "18"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3730": {
      "op": "SHL"
    },
    "3731": {
      "op": "SUB"
    },
    "3732": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13334
      ],
      "op": "DUP8",
      "path": "18"
    },
    "3733": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13334
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3734": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13334
      ],
      "op": "AND",
      "path": "18"
    },
    "3735": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13334
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3736": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13334
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3737": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13334
      ],
      "op": "OR",
      "path": "18"
    },
    "3738": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13334
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3739": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13334
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "3740": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13334
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "3741": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13350,
        13377
      ],
      "op": "SWAP2",
      "path": "18",
      "statement": 47
    },
    "3742": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13350,
        13377
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3743": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13329
      ],
      "op": "DUP6",
      "path": "18"
    },
    "3744": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13304,
        13329
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "3745": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13350,
        13377
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3746": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13350,
        13377
      ],
      "op": "DUP9",
      "path": "18"
    },
    "3747": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13350,
        13377
      ],
      "op": "AND",
      "path": "18"
    },
    "3748": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13350,
        13377
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3749": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13350,
        13377
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3782": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13350,
        13377
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3783": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        13350,
        13377
      ],
      "op": "LOG4",
      "path": "18"
    },
    "3784": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12582,
        13384
      ],
      "op": "POP",
      "path": "18"
    },
    "3785": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12473,
        13384
      ],
      "op": "POP",
      "path": "18"
    },
    "3786": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12473,
        13384
      ],
      "op": "POP",
      "path": "18"
    },
    "3787": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "offset": [
        12473,
        13384
      ],
      "op": "POP",
      "path": "18"
    },
    "3788": {
      "fn": "ERC721WithDiamondStorage._transfer",
      "jump": "o",
      "offset": [
        12473,
        13384
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3789": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        8808,
        9076
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3790": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        8866,
        8873
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3792": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        8889,
        8933
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xED8"
    },
    "3795": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        8924,
        8932
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3796": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        8889,
        8923
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x123F"
    },
    "3799": {
      "fn": "LibUnicornDNA._getDNA",
      "jump": "i",
      "offset": [
        8889,
        8933
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3800": {
      "branch": 308,
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        8889,
        8933
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3801": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        8885,
        9003
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "3802": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        8885,
        9003
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xEE6"
    },
    "3805": {
      "branch": 308,
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        8885,
        9003
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "3806": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        8956,
        8992
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 48,
      "value": "0x360"
    },
    "3809": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        8983,
        8991
      ],
      "op": "DUP3",
      "path": "27"
    },
    "3810": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        8956,
        8982
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1343"
    },
    "3813": {
      "fn": "LibUnicornDNA._getDNA",
      "jump": "i",
      "offset": [
        8956,
        8992
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3814": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        8885,
        9003
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3815": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        9020,
        9047
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 49,
      "value": "0xEEE"
    },
    "3818": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        9020,
        9045
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAD1"
    },
    "3821": {
      "fn": "LibUnicornDNA._getDNA",
      "jump": "i",
      "offset": [
        9020,
        9047
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3822": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        9020,
        9047
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "3823": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        9020,
        9069
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "3825": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        9020,
        9069
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "3826": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        9020,
        9069
      ],
      "op": "DUP4",
      "path": "27"
    },
    "3827": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        9020,
        9069
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3828": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        9020,
        9059
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x18"
    },
    "3830": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        9020,
        9059
      ],
      "op": "ADD",
      "path": "27"
    },
    "3831": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        9020,
        9069
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "3833": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        9020,
        9069
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "3834": {
      "op": "POP"
    },
    "3835": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        9020,
        9069
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "3837": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        9020,
        9069
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3838": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        9020,
        9069
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "3839": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        9020,
        9069
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "3840": {
      "fn": "LibUnicornDNA._getDNA",
      "offset": [
        9020,
        9069
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "3841": {
      "fn": "LibUnicornDNA._getDNA",
      "jump": "o",
      "offset": [
        8808,
        9076
      ],
      "op": "JUMP",
      "path": "27"
    },
    "3842": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        13904,
        14296
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3843": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14054,
        14062
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 50
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3850": {
      "op": "SHL"
    },
    "3851": {
      "op": "SUB"
    },
    "3852": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14045,
        14062
      ],
      "op": "AND",
      "path": "18"
    },
    "3853": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14045,
        14050
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3860": {
      "op": "SHL"
    },
    "3861": {
      "op": "SUB"
    },
    "3862": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14045,
        14062
      ],
      "op": "AND",
      "path": "18"
    },
    "3863": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14045,
        14062
      ],
      "op": "EQ",
      "path": "18"
    },
    "3864": {
      "branch": 254,
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14045,
        14062
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "3865": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14037,
        14092
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF64"
    },
    "3868": {
      "branch": 254,
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14037,
        14092
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "3869": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14037,
        14092
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3871": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14037,
        14092
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "3872": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3878": {
      "op": "SHL"
    },
    "3879": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14037,
        14092
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3880": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14037,
        14092
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3883": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14037,
        14092
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "3885": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14037,
        14092
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3886": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14037,
        14092
      ],
      "op": "ADD",
      "path": "18"
    },
    "3887": {
      "op": "MSTORE"
    },
    "3888": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3890": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3892": {
      "op": "DUP3"
    },
    "3893": {
      "op": "ADD"
    },
    "3894": {
      "op": "MSTORE"
    },
    "3895": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3930": {
      "op": "DUP3"
    },
    "3931": {
      "op": "ADD"
    },
    "3932": {
      "op": "MSTORE"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3935": {
      "op": "ADD"
    },
    "3936": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14037,
        14092
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "3939": {
      "op": "JUMP"
    },
    "3940": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14037,
        14092
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3941": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14102,
        14138
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3943": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14141,
        14168
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF6E"
    },
    "3946": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14141,
        14166
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "3949": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "jump": "i",
      "offset": [
        14141,
        14168
      ],
      "op": "JUMP",
      "path": "18"
    },
    "3950": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14141,
        14168
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3957": {
      "op": "SHL"
    },
    "3958": {
      "op": "SUB"
    },
    "3959": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "DUP6",
      "path": "18",
      "statement": 51
    },
    "3960": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3961": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "AND",
      "path": "18"
    },
    "3962": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "3964": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3965": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3966": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3967": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14205
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xD"
    },
    "3969": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14205
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3970": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14205
      ],
      "op": "ADD",
      "path": "18"
    },
    "3971": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "3973": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3974": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "DUP2",
      "path": "18"
    },
    "3975": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3976": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "3978": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3979": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "DUP4",
      "path": "18"
    },
    "3980": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3981": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14222
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3982": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14222
      ],
      "op": "DUP10",
      "path": "18"
    },
    "3983": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14222
      ],
      "op": "AND",
      "path": "18"
    },
    "3984": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14222
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3985": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14222
      ],
      "op": "DUP5",
      "path": "18"
    },
    "3986": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14222
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3987": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14222
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "3988": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14222
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3989": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14222
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "3990": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14222
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "3991": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14222
      ],
      "op": "DUP3",
      "path": "18"
    },
    "3992": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14222
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "3993": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14222
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "3994": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14233
      ],
      "op": "DUP1",
      "path": "18"
    },
    "3995": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14233
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3998": {
      "op": "NOT"
    },
    "3999": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14233
      ],
      "op": "AND",
      "path": "18"
    },
    "4000": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14233
      ],
      "op": "DUP9",
      "path": "18"
    },
    "4001": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14233
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4002": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14233
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4003": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14233
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4004": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14233
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4005": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14233
      ],
      "op": "OR",
      "path": "18"
    },
    "4006": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14233
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4007": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14233
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4008": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14233
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "4009": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14248,
        14289
      ],
      "op": "SWAP2",
      "path": "18",
      "statement": 52
    },
    "4010": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14248,
        14289
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4011": {
      "op": "SWAP2"
    },
    "4012": {
      "op": "DUP3"
    },
    "4013": {
      "op": "MSTORE"
    },
    "4014": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14205
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "4015": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14205
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "4016": {
      "op": "POP"
    },
    "4017": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14222
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4018": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14222
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "4019": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4020": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14178,
        14212
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4021": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14248,
        14289
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "4054": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14248,
        14289
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4055": {
      "op": "ADD"
    },
    "4056": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14248,
        14289
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4058": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14248,
        14289
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4059": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14248,
        14289
      ],
      "op": "DUP1",
      "path": "18"
    },
    "4060": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14248,
        14289
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "4061": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14248,
        14289
      ],
      "op": "SUB",
      "path": "18"
    },
    "4062": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14248,
        14289
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4063": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14248,
        14289
      ],
      "op": "LOG3",
      "path": "18"
    },
    "4064": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        14027,
        14296
      ],
      "op": "POP",
      "path": "18"
    },
    "4065": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        13904,
        14296
      ],
      "op": "POP",
      "path": "18"
    },
    "4066": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        13904,
        14296
      ],
      "op": "POP",
      "path": "18"
    },
    "4067": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "offset": [
        13904,
        14296
      ],
      "op": "POP",
      "path": "18"
    },
    "4068": {
      "fn": "ERC721WithDiamondStorage._setApprovalForAll",
      "jump": "o",
      "offset": [
        13904,
        14296
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4069": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        7980,
        8321
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4070": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8131,
        8159
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 53,
      "value": "0xFF0"
    },
    "4073": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8141,
        8145
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4074": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8147,
        8149
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4075": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8151,
        8158
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4076": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8131,
        8140
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC6B"
    },
    "4079": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "jump": "i",
      "offset": [
        8131,
        8159
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4080": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8131,
        8159
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4081": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8190,
        8238
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 54,
      "value": "0xFFC"
    },
    "4084": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8213,
        8217
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4085": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8219,
        8221
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4086": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8223,
        8230
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4087": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8232,
        8237
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4088": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8190,
        8212
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D59"
    },
    "4091": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "jump": "i",
      "offset": [
        8190,
        8238
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4092": {
      "branch": 255,
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8190,
        8238
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4093": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8169,
        8314
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x912"
    },
    "4096": {
      "branch": 255,
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8169,
        8314
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4097": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8169,
        8314
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4099": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8169,
        8314
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4100": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4106": {
      "op": "SHL"
    },
    "4107": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8169,
        8314
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4108": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8169,
        8314
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4109": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8169,
        8314
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4111": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8169,
        8314
      ],
      "op": "ADD",
      "path": "18"
    },
    "4112": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8169,
        8314
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "4115": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8169,
        8314
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4116": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "offset": [
        8169,
        8314
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2CFE"
    },
    "4119": {
      "fn": "ERC721WithDiamondStorage._safeTransfer",
      "jump": "i",
      "offset": [
        8169,
        8314
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4120": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12159,
        12349
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4121": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12252,
        12268
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 55,
      "value": "0x1020"
    },
    "4124": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12252,
        12266
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAD1"
    },
    "4127": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "jump": "i",
      "offset": [
        12252,
        12268
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4128": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12252,
        12268
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4129": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12252,
        12282
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4131": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12252,
        12282
      ],
      "op": "ADD",
      "path": "22"
    },
    "4132": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12252,
        12282
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4139": {
      "op": "SHL"
    },
    "4140": {
      "op": "SUB"
    },
    "4141": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12252,
        12282
      ],
      "op": "AND",
      "path": "22"
    },
    "4142": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12238,
        12248
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4143": {
      "branch": 263,
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12238,
        12282
      ],
      "op": "EQ",
      "path": "22"
    },
    "4144": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12217,
        12342
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1086"
    },
    "4147": {
      "branch": 263,
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12217,
        12342
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4148": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12217,
        12342
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4150": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12217,
        12342
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4151": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4157": {
      "op": "SHL"
    },
    "4158": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12217,
        12342
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4159": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12217,
        12342
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4162": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12217,
        12342
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4164": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12217,
        12342
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4165": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12217,
        12342
      ],
      "op": "ADD",
      "path": "22"
    },
    "4166": {
      "op": "MSTORE"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4171": {
      "op": "DUP3"
    },
    "4172": {
      "op": "ADD"
    },
    "4173": {
      "op": "MSTORE"
    },
    "4174": {
      "op": "PUSH32",
      "value": "0x4C69624469616D6F6E643A204D75737420626520636F6E7472616374206F776E"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4209": {
      "op": "DUP3"
    },
    "4210": {
      "op": "ADD"
    },
    "4211": {
      "op": "MSTORE"
    },
    "4212": {
      "op": "PUSH2",
      "value": "0x32B9"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "4217": {
      "op": "SHL"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4220": {
      "op": "DUP3"
    },
    "4221": {
      "op": "ADD"
    },
    "4222": {
      "op": "MSTORE"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4225": {
      "op": "ADD"
    },
    "4226": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12217,
        12342
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x469"
    },
    "4229": {
      "op": "JUMP"
    },
    "4230": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "offset": [
        12217,
        12342
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4231": {
      "fn": "LibDiamond.enforceIsContractOwner",
      "jump": "o",
      "offset": [
        12159,
        12349
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4232": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22699,
        23529
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4233": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22797,
        22804
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4235": {
      "offset": [
        722,
        727
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2710"
    },
    "4238": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22841,
        22849
      ],
      "op": "DUP4",
      "path": "18",
      "statement": 56
    },
    "4239": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22841,
        22885
      ],
      "op": "GT",
      "path": "18"
    },
    "4240": {
      "branch": 256,
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22841,
        22885
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "4241": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22820,
        22972
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1102"
    },
    "4244": {
      "branch": 256,
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22820,
        22972
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4245": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22820,
        22972
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4247": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22820,
        22972
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "4248": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4254": {
      "op": "SHL"
    },
    "4255": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22820,
        22972
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4256": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22820,
        22972
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4259": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22820,
        22972
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "4261": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22820,
        22972
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4262": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22820,
        22972
      ],
      "op": "ADD",
      "path": "18"
    },
    "4263": {
      "op": "MSTORE"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4268": {
      "op": "DUP3"
    },
    "4269": {
      "op": "ADD"
    },
    "4270": {
      "op": "MSTORE"
    },
    "4271": {
      "op": "PUSH32",
      "value": "0x455243373231576974684469616D6F6E6453746F726167653A2043616E206F6E"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4306": {
      "op": "DUP3"
    },
    "4307": {
      "op": "ADD"
    },
    "4308": {
      "op": "MSTORE"
    },
    "4309": {
      "op": "PUSH32",
      "value": "0x6C792073657420444E4120666F722067656E6573697320746F6B656E73000000"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4344": {
      "op": "DUP3"
    },
    "4345": {
      "op": "ADD"
    },
    "4346": {
      "op": "MSTORE"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4349": {
      "op": "ADD"
    },
    "4350": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22820,
        22972
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "4353": {
      "op": "JUMP"
    },
    "4354": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22820,
        22972
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4355": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        22982,
        22993
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4357": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23013,
        23078
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 57,
      "value": "0x1115"
    },
    "4360": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23039,
        23042
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4361": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23044,
        23077
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1110"
    },
    "4364": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23044,
        23075
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E66"
    },
    "4367": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "jump": "i",
      "offset": [
        23044,
        23077
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4368": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23044,
        23077
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4369": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23013,
        23038
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E79"
    },
    "4372": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "jump": "i",
      "offset": [
        23013,
        23078
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4373": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23013,
        23078
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4374": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23007,
        23078
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4375": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23007,
        23078
      ],
      "op": "POP",
      "path": "18"
    },
    "4376": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23094,
        23129
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 58,
      "value": "0x1122"
    },
    "4379": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23119,
        23122
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4380": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23124,
        23128
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "4382": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23094,
        23118
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E8E"
    },
    "4385": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "jump": "i",
      "offset": [
        23094,
        23129
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4386": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23094,
        23129
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4387": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23088,
        23129
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4388": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23088,
        23129
      ],
      "op": "POP",
      "path": "18"
    },
    "4389": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23145,
        23185
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 59,
      "value": "0x112F"
    },
    "4392": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23174,
        23177
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4393": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23179,
        23184
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4395": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23145,
        23173
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E9D"
    },
    "4398": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "jump": "i",
      "offset": [
        23145,
        23185
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4399": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23145,
        23185
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4400": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23139,
        23185
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4401": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23139,
        23185
      ],
      "op": "POP",
      "path": "18"
    },
    "4402": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23201,
        23245
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 60,
      "value": "0x113C"
    },
    "4405": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23234,
        23237
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4406": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23239,
        23244
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4408": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23201,
        23233
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EAC"
    },
    "4411": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "jump": "i",
      "offset": [
        23201,
        23245
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4412": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23201,
        23245
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4413": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23195,
        23245
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4414": {
      "op": "POP"
    },
    "4415": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23261,
        23361
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 61,
      "value": "0x1149"
    },
    "4418": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23195,
        23245
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4419": {
      "offset": [
        8645,
        8646
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4421": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23261,
        23293
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EBB"
    },
    "4424": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "jump": "i",
      "offset": [
        23261,
        23361
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4425": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23261,
        23361
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4426": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23255,
        23361
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4427": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23255,
        23361
      ],
      "op": "POP",
      "path": "18"
    },
    "4428": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23377,
        23417
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 62,
      "value": "0x1156"
    },
    "4431": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23410,
        23413
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4432": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23415,
        23416
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "4434": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23377,
        23409
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1ECA"
    },
    "4437": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "jump": "i",
      "offset": [
        23377,
        23417
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4438": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23377,
        23417
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4439": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23371,
        23417
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4440": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23371,
        23417
      ],
      "op": "POP",
      "path": "18"
    },
    "4441": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23433,
        23469
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 63,
      "value": "0x1162"
    },
    "4444": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23457,
        23460
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4445": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23462,
        23468
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4446": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23433,
        23456
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EDA"
    },
    "4449": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "jump": "i",
      "offset": [
        23433,
        23469
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4450": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23433,
        23469
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4451": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23427,
        23469
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "4452": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23427,
        23469
      ],
      "op": "POP",
      "path": "18"
    },
    "4453": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23486,
        23522
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 64,
      "value": "0xC63"
    },
    "4456": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23508,
        23516
      ],
      "op": "DUP5",
      "path": "18"
    },
    "4457": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23518,
        23521
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4458": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "offset": [
        23486,
        23507
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1EED"
    },
    "4461": {
      "fn": "ERC721WithDiamondStorage._setDNAForGenesisToken",
      "jump": "i",
      "offset": [
        23486,
        23522
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4462": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21030,
        21514
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4463": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21102,
        21106
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4465": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21121,
        21153
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1181"
    },
    "4468": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21136,
        21152
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x117C"
    },
    "4471": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21144,
        21151
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4472": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21136,
        21143
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xECD"
    },
    "4475": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "jump": "i",
      "offset": [
        21136,
        21152
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4476": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21136,
        21152
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4477": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21121,
        21135
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1FA0"
    },
    "4480": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "jump": "i",
      "offset": [
        21121,
        21153
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4481": {
      "branch": 309,
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21121,
        21153
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4482": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21118,
        21192
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "4483": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21118,
        21192
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x118E"
    },
    "4486": {
      "branch": 309,
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21118,
        21192
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "4487": {
      "op": "POP"
    },
    "4488": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21176,
        21181
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 65,
      "value": "0x0"
    },
    "4490": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21176,
        21181
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4491": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21030,
        21514
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "4492": {
      "op": "POP"
    },
    "4493": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "jump": "o",
      "offset": [
        21030,
        21514
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4494": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21118,
        21192
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4495": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21202,
        21238
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4497": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21241,
        21268
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1198"
    },
    "4500": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21241,
        21266
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAD1"
    },
    "4503": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "jump": "i",
      "offset": [
        21241,
        21268
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4504": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21241,
        21268
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4505": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21357,
        21393
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x39"
    },
    "4507": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21357,
        21393
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4508": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21357,
        21393
      ],
      "op": "ADD",
      "path": "27"
    },
    "4509": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21357,
        21393
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4510": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21278,
        21309
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "4512": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21313,
        21354
      ],
      "op": "DUP6",
      "path": "27"
    },
    "4513": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21313,
        21354
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4514": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21313,
        21354
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4515": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21313,
        21345
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x38"
    },
    "4517": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21313,
        21345
      ],
      "op": "DUP4",
      "path": "27"
    },
    "4518": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21313,
        21345
      ],
      "op": "ADD",
      "path": "27"
    },
    "4519": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21313,
        21354
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "4521": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21313,
        21354
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "4522": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21313,
        21354
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "4524": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21313,
        21354
      ],
      "op": "DUP2",
      "path": "27"
    },
    "4525": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21313,
        21354
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "4526": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21313,
        21354
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "4527": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21202,
        21268
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "4528": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21202,
        21268
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "4529": {
      "op": "POP"
    },
    "4530": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21278,
        21309
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4531": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21398,
        21413
      ],
      "op": "TIMESTAMP",
      "path": "27"
    },
    "4532": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21398,
        21413
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4533": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21313,
        21393
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x11BD"
    },
    "4536": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21313,
        21393
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "4537": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21313,
        21393
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2CE6"
    },
    "4540": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "jump": "i",
      "offset": [
        21313,
        21393
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4541": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21313,
        21393
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "4542": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21312,
        21413
      ],
      "op": "LT",
      "path": "27"
    },
    "4543": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21312,
        21413
      ],
      "op": "SWAP5",
      "path": "27"
    },
    "4544": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "offset": [
        21030,
        21514
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "4545": {
      "op": "POP"
    },
    "4546": {
      "op": "POP"
    },
    "4547": {
      "op": "POP"
    },
    "4548": {
      "op": "POP"
    },
    "4549": {
      "fn": "LibUnicornDNA._unicornIsTransferrable",
      "jump": "o",
      "offset": [
        21030,
        21514
      ],
      "op": "JUMP",
      "path": "27"
    },
    "4550": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17747,
        18254
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4557": {
      "op": "SHL"
    },
    "4558": {
      "op": "SUB"
    },
    "4559": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17881,
        17899
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4560": {
      "branch": 257,
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17881,
        17899
      ],
      "op": "AND",
      "path": "18"
    },
    "4561": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17877,
        18060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11E2"
    },
    "4564": {
      "branch": 257,
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17877,
        18060
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4565": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17915,
        17955
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 66,
      "value": "0x11DD"
    },
    "4568": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17947,
        17954
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4569": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17915,
        17946
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1FAE"
    },
    "4572": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        17915,
        17955
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4573": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17915,
        17955
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4574": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17877,
        18060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1205"
    },
    "4577": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17877,
        18060
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4578": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17877,
        18060
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4579": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17984,
        17986
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4586": {
      "op": "SHL"
    },
    "4587": {
      "op": "SUB"
    },
    "4588": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17976,
        17986
      ],
      "op": "AND",
      "path": "18"
    },
    "4589": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17976,
        17980
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4596": {
      "op": "SHL"
    },
    "4597": {
      "op": "SUB"
    },
    "4598": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17976,
        17986
      ],
      "op": "AND",
      "path": "18"
    },
    "4599": {
      "branch": 258,
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17976,
        17986
      ],
      "op": "EQ",
      "path": "18"
    },
    "4600": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17972,
        18060
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1205"
    },
    "4603": {
      "branch": 258,
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        17972,
        18060
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4604": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18002,
        18049
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 67,
      "value": "0x1205"
    },
    "4607": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18035,
        18039
      ],
      "op": "DUP4",
      "path": "18"
    },
    "4608": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18041,
        18048
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4609": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18002,
        18034
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1FE7"
    },
    "4612": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        18002,
        18049
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4613": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18002,
        18049
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4620": {
      "op": "SHL"
    },
    "4621": {
      "op": "SUB"
    },
    "4622": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18073,
        18089
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4623": {
      "branch": 259,
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18073,
        18089
      ],
      "op": "AND",
      "path": "18"
    },
    "4624": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18069,
        18248
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x121C"
    },
    "4627": {
      "branch": 259,
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18069,
        18248
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4628": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18105,
        18150
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 68,
      "value": "0x5A8"
    },
    "4631": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18142,
        18149
      ],
      "op": "DUP2",
      "path": "18"
    },
    "4632": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18105,
        18141
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x209C"
    },
    "4635": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        18105,
        18150
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4636": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18069,
        18248
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "4637": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18177,
        18181
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4644": {
      "op": "SHL"
    },
    "4645": {
      "op": "SUB"
    },
    "4646": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18171,
        18181
      ],
      "op": "AND",
      "path": "18"
    },
    "4647": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18171,
        18173
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4654": {
      "op": "SHL"
    },
    "4655": {
      "op": "SUB"
    },
    "4656": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18171,
        18181
      ],
      "op": "AND",
      "path": "18"
    },
    "4657": {
      "branch": 260,
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18171,
        18181
      ],
      "op": "EQ",
      "path": "18"
    },
    "4658": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18167,
        18248
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5A8"
    },
    "4661": {
      "branch": 260,
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18167,
        18248
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "4662": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18197,
        18237
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 69,
      "value": "0x5A8"
    },
    "4665": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18225,
        18227
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4666": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18229,
        18236
      ],
      "op": "DUP3",
      "path": "18"
    },
    "4667": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "offset": [
        18197,
        18224
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2165"
    },
    "4670": {
      "fn": "ERC721WithDiamondStorage._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        18197,
        18237
      ],
      "op": "JUMP",
      "path": "18"
    },
    "4671": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6086,
        6792
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4672": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6158,
        6162
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4674": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6191,
        6246
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x124A"
    },
    "4677": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6238,
        6245
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4678": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6191,
        6237
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21B5"
    },
    "4681": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "jump": "i",
      "offset": [
        6191,
        6246
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4682": {
      "branch": 264,
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6191,
        6246
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4683": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6191,
        6306
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4684": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6191,
        6306
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4685": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6191,
        6306
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x125C"
    },
    "4688": {
      "branch": 264,
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6191,
        6306
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4689": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6191,
        6306
      ],
      "op": "POP",
      "path": "23"
    },
    "4690": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6263,
        6306
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x125A"
    },
    "4693": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6298,
        6305
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4694": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6263,
        6297
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21CE"
    },
    "4697": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "jump": "i",
      "offset": [
        6263,
        6306
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4698": {
      "branch": 265,
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6263,
        6306
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4699": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6262,
        6306
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4700": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6191,
        6306
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4701": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6174,
        6764
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4702": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6174,
        6764
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x133B"
    },
    "4705": {
      "branch": 265,
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6174,
        6764
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4706": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6331,
        6361
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4708": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6417,
        6450
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4709": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6417,
        6450
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4710": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6417,
        6450
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4711": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6417,
        6441
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xFDCCEBC9C7798F16C9158AF32C6BB14BB2526BCD260561CAB5771CFF2FA8AD96"
    },
    "4744": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6417,
        6450
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4746": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6417,
        6450
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4747": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6417,
        6450
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4748": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6417,
        6450
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4749": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6417,
        6450
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4751": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6417,
        6450
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4752": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6417,
        6450
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4753": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6417,
        6450
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "4754": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6417,
        6450
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4755": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6487,
        6529
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4756": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6487,
        6529
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4757": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6487,
        6529
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4758": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6487,
        6516
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xFDCCEBC9C7798F16C9158AF32C6BB14BB2526BCD260561CAB5771CFF2FA8AD90"
    },
    "4791": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6487,
        6529
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4792": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6487,
        6529
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4793": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6487,
        6529
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4794": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6487,
        6529
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4795": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6487,
        6529
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "4796": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6487,
        6529
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4797": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6610
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4798": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6610
      ],
      "op": "DUP6",
      "path": "23"
    },
    "4799": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6610
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4800": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6596
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xFDCCEBC9C7798F16C9158AF32C6BB14BB2526BCD260561CAB5771CFF2FA8AD94"
    },
    "4833": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6610
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4834": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6610
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "4835": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6610
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4836": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6610
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4837": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6610
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "4838": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6610
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4839": {
      "offset": [
        636,
        676
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xFDCCEBC9C7798F16C9158AF32C6BB14BB2526BCD260561CAB5771CFF2FA8AD8E"
    },
    "4872": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        636,
        676
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "4873": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6417,
        6450
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4874": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6487,
        6529
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4875": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6614
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4876": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6614
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4877": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6614
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4878": {
      "branch": 266,
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6614
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4879": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6695
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1327"
    },
    "4882": {
      "branch": 266,
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6695
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4883": {
      "op": "POP"
    },
    "4884": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6634,
        6680
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4886": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6634,
        6680
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4887": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6634,
        6680
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4888": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6634,
        6680
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4889": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6634,
        6666
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "4891": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6634,
        6666
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4892": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6634,
        6666
      ],
      "op": "ADD",
      "path": "23"
    },
    "4893": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6634,
        6680
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4895": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6634,
        6680
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4896": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6634,
        6680
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4898": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6634,
        6680
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4899": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6634,
        6680
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "4900": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6634,
        6680
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4901": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6683,
        6695
      ],
      "op": "NUMBER",
      "path": "23"
    },
    "4902": {
      "op": "GT"
    },
    "4903": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6564,
        6695
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4904": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6543,
        6754
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4905": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6543,
        6754
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1337"
    },
    "4908": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6543,
        6754
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4909": {
      "op": "POP"
    },
    "4910": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6735,
        6739
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 70,
      "value": "0x1"
    },
    "4912": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6735,
        6739
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "4913": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6086,
        6792
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "4914": {
      "op": "POP"
    },
    "4915": {
      "op": "POP"
    },
    "4916": {
      "op": "POP"
    },
    "4917": {
      "op": "POP"
    },
    "4918": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "jump": "o",
      "offset": [
        6086,
        6792
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4919": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6543,
        6754
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4920": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6317,
        6764
      ],
      "op": "POP",
      "path": "23"
    },
    "4921": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6317,
        6764
      ],
      "op": "POP",
      "path": "23"
    },
    "4922": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6317,
        6764
      ],
      "op": "POP",
      "path": "23"
    },
    "4923": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6174,
        6764
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4924": {
      "op": "POP"
    },
    "4925": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6780,
        6785
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 71,
      "value": "0x0"
    },
    "4927": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6780,
        6785
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4928": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "offset": [
        6086,
        6792
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4929": {
      "op": "POP"
    },
    "4930": {
      "fn": "LibHatching.shouldUsePredictiveDNA",
      "jump": "o",
      "offset": [
        6086,
        6792
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4931": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        7944,
        17794
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4932": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8008,
        8015
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4934": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8036,
        8079
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 72,
      "value": "0x134E"
    },
    "4937": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8071,
        8078
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4938": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8036,
        8070
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21CE"
    },
    "4941": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        8036,
        8079
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4942": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8036,
        8079
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4943": {
      "branch": 267,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8035,
        8079
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4944": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8027,
        8110
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x139B"
    },
    "4947": {
      "branch": 267,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8027,
        8110
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4948": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8027,
        8110
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4950": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8027,
        8110
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4951": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4955": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4957": {
      "op": "SHL"
    },
    "4958": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8027,
        8110
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4959": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8027,
        8110
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4962": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8027,
        8110
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4964": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8027,
        8110
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4965": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8027,
        8110
      ],
      "op": "ADD",
      "path": "23"
    },
    "4966": {
      "op": "MSTORE"
    },
    "4967": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4971": {
      "op": "DUP3"
    },
    "4972": {
      "op": "ADD"
    },
    "4973": {
      "op": "MSTORE"
    },
    "4974": {
      "op": "PUSH32",
      "value": "0x4C69624861746368696E673A20524E47206E6F74207265616479000000000000"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5009": {
      "op": "DUP3"
    },
    "5010": {
      "op": "ADD"
    },
    "5011": {
      "op": "MSTORE"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5014": {
      "op": "ADD"
    },
    "5015": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8027,
        8110
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x469"
    },
    "5018": {
      "op": "JUMP"
    },
    "5019": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8027,
        8110
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5020": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8128,
        8183
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 73,
      "value": "0x13A4"
    },
    "5023": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8175,
        8182
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5024": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8128,
        8174
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21B5"
    },
    "5027": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        8128,
        8183
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5028": {
      "branch": 268,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8128,
        8183
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5029": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8120,
        8220
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x13F0"
    },
    "5032": {
      "branch": 268,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8120,
        8220
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5033": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8120,
        8220
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5035": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8120,
        8220
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5036": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5042": {
      "op": "SHL"
    },
    "5043": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8120,
        8220
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5044": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8120,
        8220
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5047": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8120,
        8220
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "5049": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8120,
        8220
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5050": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8120,
        8220
      ],
      "op": "ADD",
      "path": "23"
    },
    "5051": {
      "op": "DUP2"
    },
    "5052": {
      "op": "SWAP1"
    },
    "5053": {
      "op": "MSTORE"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5056": {
      "op": "DUP3"
    },
    "5057": {
      "op": "ADD"
    },
    "5058": {
      "op": "MSTORE"
    },
    "5059": {
      "op": "PUSH32",
      "value": "0x4C69624861746368696E673A2057616974696E6720666F72205652462054544C"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5094": {
      "op": "DUP3"
    },
    "5095": {
      "op": "ADD"
    },
    "5096": {
      "op": "MSTORE"
    },
    "5097": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5099": {
      "op": "ADD"
    },
    "5100": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8120,
        8220
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x469"
    },
    "5103": {
      "op": "JUMP"
    },
    "5104": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8120,
        8220
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5105": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8230,
        8260
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5107": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8343,
        8376
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5108": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8343,
        8376
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5109": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8343,
        8376
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5110": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8343,
        8367
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xFDCCEBC9C7798F16C9158AF32C6BB14BB2526BCD260561CAB5771CFF2FA8AD96"
    },
    "5143": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8343,
        8376
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5145": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8343,
        8376
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5146": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8343,
        8376
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5147": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8343,
        8376
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5148": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8343,
        8376
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5150": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8343,
        8376
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5151": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8343,
        8376
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5152": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8343,
        8376
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "5153": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8343,
        8376
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5154": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8313,
        8377
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5155": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8313,
        8377
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5156": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8313,
        8342
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xFDCCEBC9C7798F16C9158AF32C6BB14BB2526BCD260561CAB5771CFF2FA8AD90"
    },
    "5189": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8313,
        8377
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5190": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8313,
        8377
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5191": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8313,
        8377
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5192": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8313,
        8377
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5193": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8313,
        8377
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "5194": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8313,
        8377
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5195": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8395,
        8441
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 74
    },
    "5196": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8395,
        8441
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5197": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8395,
        8441
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5198": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8395,
        8427
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xFDCCEBC9C7798F16C9158AF32C6BB14BB2526BCD260561CAB5771CFF2FA8AD94"
    },
    "5231": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8395,
        8441
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5232": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8395,
        8441
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5233": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8395,
        8441
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5234": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8395,
        8441
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5235": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8395,
        8441
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5236": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8395,
        8441
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "5237": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8395,
        8441
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5238": {
      "offset": [
        636,
        676
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xFDCCEBC9C7798F16C9158AF32C6BB14BB2526BCD260561CAB5771CFF2FA8AD8E"
    },
    "5271": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        636,
        676
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5272": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8313,
        8377
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5273": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8387,
        8473
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14E4"
    },
    "5276": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8387,
        8473
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5277": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8387,
        8473
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5279": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8387,
        8473
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5280": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5284": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5286": {
      "op": "SHL"
    },
    "5287": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8387,
        8473
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5288": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8387,
        8473
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5291": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8387,
        8473
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "5293": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8387,
        8473
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5294": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8387,
        8473
      ],
      "op": "ADD",
      "path": "23"
    },
    "5295": {
      "op": "MSTORE"
    },
    "5296": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5298": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5300": {
      "op": "DUP3"
    },
    "5301": {
      "op": "ADD"
    },
    "5302": {
      "op": "MSTORE"
    },
    "5303": {
      "op": "PUSH32",
      "value": "0x4C69624861746368696E673A204E6F20524E4720736574000000000000000000"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5338": {
      "op": "DUP3"
    },
    "5339": {
      "op": "ADD"
    },
    "5340": {
      "op": "MSTORE"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5343": {
      "op": "ADD"
    },
    "5344": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8387,
        8473
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x469"
    },
    "5347": {
      "op": "JUMP"
    },
    "5348": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8387,
        8473
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5349": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8491,
        8537
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 75,
      "value": "0x0"
    },
    "5351": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8491,
        8537
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5352": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8491,
        8537
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5353": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8491,
        8537
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5354": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8491,
        8523
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "5356": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8491,
        8523
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5357": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8491,
        8523
      ],
      "op": "ADD",
      "path": "23"
    },
    "5358": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8491,
        8537
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5360": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8491,
        8537
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5361": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8491,
        8537
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5363": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8491,
        8537
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5364": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8491,
        8537
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "5365": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8491,
        8537
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5366": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8540,
        8552
      ],
      "op": "NUMBER",
      "path": "23"
    },
    "5367": {
      "op": "GT"
    },
    "5368": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8483,
        8608
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x155F"
    },
    "5371": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8483,
        8608
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5372": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8483,
        8608
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5374": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8483,
        8608
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5375": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5379": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5381": {
      "op": "SHL"
    },
    "5382": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8483,
        8608
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5383": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8483,
        8608
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5386": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8483,
        8608
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "5388": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8483,
        8608
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5389": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8483,
        8608
      ],
      "op": "ADD",
      "path": "23"
    },
    "5390": {
      "op": "MSTORE"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0x33"
    },
    "5393": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5395": {
      "op": "DUP3"
    },
    "5396": {
      "op": "ADD"
    },
    "5397": {
      "op": "MSTORE"
    },
    "5398": {
      "op": "PUSH32",
      "value": "0x4C69624861746368696E673A2050726564696374696F6E206D61736B65642064"
    },
    "5431": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5433": {
      "op": "DUP3"
    },
    "5434": {
      "op": "ADD"
    },
    "5435": {
      "op": "MSTORE"
    },
    "5436": {
      "op": "PUSH19",
      "value": "0x7572696E6720524E472073657420626C6F636B"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "5458": {
      "op": "SHL"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5461": {
      "op": "DUP3"
    },
    "5462": {
      "op": "ADD"
    },
    "5463": {
      "op": "MSTORE"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5466": {
      "op": "ADD"
    },
    "5467": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8483,
        8608
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x469"
    },
    "5470": {
      "op": "JUMP"
    },
    "5471": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8483,
        8608
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5472": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8619,
        8630
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5474": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8633,
        8672
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x156A"
    },
    "5477": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8664,
        8671
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5478": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8633,
        8663
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21E7"
    },
    "5481": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        8633,
        8672
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5482": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8633,
        8672
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5483": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8619,
        8672
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5484": {
      "op": "POP"
    },
    "5485": {
      "offset": [
        8645,
        8646
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "5487": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8690,
        8727
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 76,
      "value": "0x1577"
    },
    "5490": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8619,
        8672
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5491": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8690,
        8722
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21F1"
    },
    "5494": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        8690,
        8727
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5495": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8690,
        8727
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5496": {
      "branch": 269,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8690,
        8758
      ],
      "op": "EQ",
      "path": "23"
    },
    "5497": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8682,
        8806
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15D8"
    },
    "5500": {
      "branch": 269,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8682,
        8806
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5501": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8682,
        8806
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5503": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8682,
        8806
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5504": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5508": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5510": {
      "op": "SHL"
    },
    "5511": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8682,
        8806
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5512": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8682,
        8806
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5515": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8682,
        8806
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "5517": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8682,
        8806
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5518": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8682,
        8806
      ],
      "op": "ADD",
      "path": "23"
    },
    "5519": {
      "op": "MSTORE"
    },
    "5520": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "5522": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5524": {
      "op": "DUP3"
    },
    "5525": {
      "op": "ADD"
    },
    "5526": {
      "op": "MSTORE"
    },
    "5527": {
      "op": "PUSH32",
      "value": "0x4C69624861746368696E673A20444E412068617320616C726561647920626565"
    },
    "5560": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5562": {
      "op": "DUP3"
    },
    "5563": {
      "op": "ADD"
    },
    "5564": {
      "op": "MSTORE"
    },
    "5565": {
      "op": "PUSH11",
      "value": "0x1B881C195C9CDA5CDD1959"
    },
    "5577": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "5579": {
      "op": "SHL"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5582": {
      "op": "DUP3"
    },
    "5583": {
      "op": "ADD"
    },
    "5584": {
      "op": "MSTORE"
    },
    "5585": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5587": {
      "op": "ADD"
    },
    "5588": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8682,
        8806
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x469"
    },
    "5591": {
      "op": "JUMP"
    },
    "5592": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8682,
        8806
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5593": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8817,
        8832
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5595": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8835,
        8863
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15E3"
    },
    "5598": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8859,
        8862
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5599": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8835,
        8858
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21FF"
    },
    "5602": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        8835,
        8863
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5603": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8835,
        8863
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5604": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8817,
        8863
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "5606": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8817,
        8863
      ],
      "op": "AND",
      "path": "23"
    },
    "5607": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8817,
        8863
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5608": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8817,
        8863
      ],
      "op": "POP",
      "path": "23"
    },
    "5609": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8874,
        8910
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5611": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8913,
        8940
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15F2"
    },
    "5614": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8913,
        8938
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAD1"
    },
    "5617": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        8913,
        8940
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5618": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8913,
        8940
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5619": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8950,
        8972
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5621": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8997,
        9023
      ],
      "op": "DUP9",
      "path": "23"
    },
    "5622": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8997,
        9023
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5623": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8997,
        9023
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5624": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8997,
        9014
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3A"
    },
    "5626": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8997,
        9014
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5627": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8997,
        9014
      ],
      "op": "ADD",
      "path": "23"
    },
    "5628": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8997,
        9023
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5630": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8997,
        9023
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5631": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8997,
        9023
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5633": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8997,
        9023
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5634": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8997,
        9023
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "5635": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8874,
        8940
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5636": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8874,
        8940
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5637": {
      "op": "POP"
    },
    "5638": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8950,
        8972
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5639": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8975,
        9027
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1613"
    },
    "5642": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8975,
        9027
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5643": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8950,
        8972
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5644": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8997,
        9026
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5645": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8997,
        9026
      ],
      "op": "ADD",
      "path": "23"
    },
    "5646": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8997,
        9026
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5647": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8975,
        8996
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xECD"
    },
    "5650": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        8975,
        9027
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5651": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8975,
        9027
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5652": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9037,
        9060
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5654": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9085,
        9111
      ],
      "op": "DUP10",
      "path": "23"
    },
    "5655": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9085,
        9111
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5656": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9085,
        9111
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5657": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9085,
        9102
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3A"
    },
    "5659": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9085,
        9102
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5660": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9085,
        9102
      ],
      "op": "ADD",
      "path": "23"
    },
    "5661": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9085,
        9111
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5663": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9085,
        9111
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5664": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9085,
        9111
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5666": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9085,
        9111
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5667": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9085,
        9111
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "5668": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8950,
        9027
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5669": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        8950,
        9027
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5670": {
      "op": "POP"
    },
    "5671": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9037,
        9060
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5672": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9063,
        9115
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1631"
    },
    "5675": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9063,
        9115
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5676": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9037,
        9060
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5677": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9085,
        9114
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x160C"
    },
    "5680": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9085,
        9114
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5681": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9063,
        9115
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5682": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9037,
        9115
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5683": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9037,
        9115
      ],
      "op": "POP",
      "path": "23"
    },
    "5684": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9126,
        9149
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5686": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9164,
        9203
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x163E"
    },
    "5689": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9188,
        9202
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5690": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9164,
        9187
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21FF"
    },
    "5693": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        9164,
        9203
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5694": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9164,
        9203
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5695": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9153,
        9203
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "5697": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9153,
        9203
      ],
      "op": "AND",
      "path": "23"
    },
    "5698": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9153,
        9160
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5699": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9153,
        9203
      ],
      "op": "EQ",
      "path": "23"
    },
    "5700": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9126,
        9204
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5701": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9126,
        9204
      ],
      "op": "POP",
      "path": "23"
    },
    "5702": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9214,
        9238
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5704": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9253,
        9293
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1650"
    },
    "5707": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9277,
        9292
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5708": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9253,
        9276
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21FF"
    },
    "5711": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        9253,
        9293
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5712": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9253,
        9293
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5713": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9242,
        9293
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "5715": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9242,
        9293
      ],
      "op": "AND",
      "path": "23"
    },
    "5716": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9242,
        9249
      ],
      "op": "DUP7",
      "path": "23"
    },
    "5717": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9242,
        9293
      ],
      "op": "EQ",
      "path": "23"
    },
    "5718": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9214,
        9294
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5719": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9214,
        9294
      ],
      "op": "POP",
      "path": "23"
    },
    "5720": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9304,
        9328
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5722": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9331,
        9349
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5723": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9331,
        9372
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5724": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9331,
        9372
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1662"
    },
    "5727": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9331,
        9372
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5728": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9331,
        9372
      ],
      "op": "POP",
      "path": "23"
    },
    "5729": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9353,
        9372
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5730": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9331,
        9372
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5731": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9304,
        9372
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5732": {
      "op": "POP"
    },
    "5733": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9389,
        9456
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 77,
      "value": "0x166F"
    },
    "5736": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9422,
        9425
      ],
      "op": "DUP9",
      "path": "23"
    },
    "5737": {
      "offset": [
        8693,
        8694
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x1"
    },
    "5739": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9389,
        9421
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1EBB"
    },
    "5742": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        9389,
        9456
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5743": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9389,
        9456
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5744": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9466,
        9491
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5746": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9495,
        9544
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5747": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9495,
        9544
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5748": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9495,
        9544
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5749": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9495,
        9530
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "5751": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9495,
        9530
      ],
      "op": "DUP13",
      "path": "23"
    },
    "5752": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9495,
        9530
      ],
      "op": "ADD",
      "path": "23"
    },
    "5753": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9495,
        9544
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5755": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9495,
        9544
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5756": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9495,
        9544
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5757": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9495,
        9544
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5758": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9495,
        9544
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5760": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9495,
        9544
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5761": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9495,
        9544
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5762": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9495,
        9544
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "5763": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9495,
        9544
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5764": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9576,
        9597
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "5766": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9576,
        9597
      ],
      "op": "DUP16",
      "path": "23"
    },
    "5767": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9576,
        9597
      ],
      "op": "ADD",
      "path": "23"
    },
    "5768": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9576,
        9611
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5769": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9576,
        9611
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5770": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9576,
        9611
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5771": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9576,
        9611
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5772": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9576,
        9611
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "5773": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9576,
        9611
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5774": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9383,
        9456
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5775": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9383,
        9456
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "5776": {
      "op": "POP"
    },
    "5777": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9495,
        9544
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5778": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9576,
        9611
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5779": {
      "branch": 270,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9677,
        9696
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5780": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9677,
        9761
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5781": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9677,
        9761
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5782": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9677,
        9761
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16AB"
    },
    "5785": {
      "branch": 270,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9677,
        9761
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5786": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9677,
        9761
      ],
      "op": "POP",
      "path": "23"
    },
    "5787": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9744,
        9761
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5788": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9700,
        9741
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16A9"
    },
    "5791": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9714,
        9719
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2710"
    },
    "5794": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9721,
        9731
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5795": {
      "offset": [
        985,
        987
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "5797": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9700,
        9713
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x220E"
    },
    "5800": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        9700,
        9741
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5801": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9700,
        9741
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5802": {
      "branch": 271,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9700,
        9761
      ],
      "op": "LT",
      "path": "23"
    },
    "5803": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9677,
        9761
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5804": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9673,
        10995
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5805": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9673,
        10995
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1747"
    },
    "5808": {
      "branch": 271,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9673,
        10995
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5809": {
      "branch": 272,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9805,
        9823
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5810": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9805,
        9846
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5811": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9805,
        9846
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5812": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9805,
        9846
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16BA"
    },
    "5815": {
      "branch": 272,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9805,
        9846
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5816": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9805,
        9846
      ],
      "op": "POP",
      "path": "23"
    },
    "5817": {
      "branch": 273,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9827,
        9846
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5818": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9805,
        9846
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5819": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9801,
        10080
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5820": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9801,
        10080
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16E2"
    },
    "5823": {
      "branch": 273,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9801,
        10080
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5824": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9881,
        9918
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 78,
      "value": "0x16CC"
    },
    "5827": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9895,
        9896
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5829": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9898,
        9908
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5830": {
      "offset": [
        1028,
        1030
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "5832": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9881,
        9894
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x220E"
    },
    "5835": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        9881,
        9918
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5836": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9881,
        9918
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5837": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9922,
        9923
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "5839": {
      "branch": 274,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9881,
        9923
      ],
      "op": "EQ",
      "path": "23"
    },
    "5840": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9881,
        9958
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16D9"
    },
    "5843": {
      "branch": 274,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9881,
        9958
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5844": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9943,
        9958
      ],
      "op": "DUP7",
      "path": "23"
    },
    "5845": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9881,
        9958
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16DB"
    },
    "5848": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9881,
        9958
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5849": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9881,
        9958
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5850": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9926,
        9940
      ],
      "op": "DUP8",
      "path": "23"
    },
    "5851": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9881,
        9958
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5852": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9866,
        9958
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5853": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9866,
        9958
      ],
      "op": "POP",
      "path": "23"
    },
    "5854": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9801,
        10080
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16F2"
    },
    "5857": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9801,
        10080
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5858": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9801,
        10080
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5859": {
      "branch": 275,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10012,
        10030
      ],
      "op": "DUP6",
      "path": "23",
      "statement": 79
    },
    "5860": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10012,
        10065
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16ED"
    },
    "5863": {
      "branch": 275,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10012,
        10065
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5864": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10050,
        10065
      ],
      "op": "DUP7",
      "path": "23"
    },
    "5865": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10012,
        10065
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16EF"
    },
    "5868": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10012,
        10065
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5869": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10012,
        10065
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5870": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10033,
        10047
      ],
      "op": "DUP8",
      "path": "23"
    },
    "5871": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10012,
        10065
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5872": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9997,
        10065
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5873": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9997,
        10065
      ],
      "op": "POP",
      "path": "23"
    },
    "5874": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9801,
        10080
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5875": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10099,
        10172
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 80,
      "value": "0x1704"
    },
    "5878": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10126,
        10129
      ],
      "op": "DUP12",
      "path": "23"
    },
    "5879": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10131,
        10171
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16FF"
    },
    "5882": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10158,
        10170
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5883": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10131,
        10157
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2250"
    },
    "5886": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        10131,
        10171
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5887": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10131,
        10171
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5888": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10099,
        10125
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2260"
    },
    "5891": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        10099,
        10172
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5892": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10099,
        10172
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5893": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10093,
        10172
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "5894": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10093,
        10172
      ],
      "op": "POP",
      "path": "23"
    },
    "5895": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10192,
        10275
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 81,
      "value": "0x1718"
    },
    "5898": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10224,
        10227
      ],
      "op": "DUP12",
      "path": "23"
    },
    "5899": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10229,
        10274
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1713"
    },
    "5902": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10261,
        10273
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5903": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10229,
        10260
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2271"
    },
    "5906": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        10229,
        10274
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5907": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10229,
        10274
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5908": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10192,
        10223
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2282"
    },
    "5911": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        10192,
        10275
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5912": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10192,
        10275
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5913": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10186,
        10275
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "5914": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10186,
        10275
      ],
      "op": "POP",
      "path": "23"
    },
    "5915": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10295,
        10374
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 82,
      "value": "0x172C"
    },
    "5918": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10325,
        10328
      ],
      "op": "DUP12",
      "path": "23"
    },
    "5919": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10330,
        10373
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1727"
    },
    "5922": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10360,
        10372
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5923": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10330,
        10359
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2294"
    },
    "5926": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        10330,
        10373
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5927": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10330,
        10373
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5928": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10295,
        10324
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x22A6"
    },
    "5931": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        10295,
        10374
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5932": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10295,
        10374
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5933": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10289,
        10374
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "5934": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10289,
        10374
      ],
      "op": "POP",
      "path": "23"
    },
    "5935": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10394,
        10477
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 83,
      "value": "0x1740"
    },
    "5938": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10426,
        10429
      ],
      "op": "DUP12",
      "path": "23"
    },
    "5939": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10431,
        10476
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x173B"
    },
    "5942": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10463,
        10475
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5943": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10431,
        10462
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x22B9"
    },
    "5946": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        10431,
        10476
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5947": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10431,
        10476
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5948": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10394,
        10425
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x22CC"
    },
    "5951": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        10394,
        10477
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5952": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10394,
        10477
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5953": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10388,
        10477
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "5954": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10388,
        10477
      ],
      "op": "POP",
      "path": "23"
    },
    "5955": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9673,
        10995
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x17B0"
    },
    "5958": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9673,
        10995
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5959": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9673,
        10995
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5960": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10540,
        10665
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 84,
      "value": "0x1774"
    },
    "5963": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10567,
        10570
      ],
      "op": "DUP12",
      "path": "23"
    },
    "5964": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10572,
        10574
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5965": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10572,
        10602
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x26"
    },
    "5967": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10572,
        10602
      ],
      "op": "ADD",
      "path": "23"
    },
    "5968": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10572,
        10664
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5970": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10603,
        10663
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1760"
    },
    "5973": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10619,
        10621
      ],
      "op": "DUP14",
      "path": "23"
    },
    "5974": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10623,
        10630
      ],
      "op": "DUP16",
      "path": "23"
    },
    "5975": {
      "offset": [
        720,
        721
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "5977": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10643,
        10653
      ],
      "op": "DUP10",
      "path": "23"
    },
    "5978": {
      "offset": [
        1071,
        1073
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xD"
    },
    "5980": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10603,
        10618
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x22E0"
    },
    "5983": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        10603,
        10663
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5984": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10603,
        10663
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5985": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10572,
        10664
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5986": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10572,
        10664
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5987": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10572,
        10664
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5989": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10572,
        10664
      ],
      "op": "ADD",
      "path": "23"
    },
    "5990": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10572,
        10664
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5991": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10572,
        10664
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5992": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10572,
        10664
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5993": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10572,
        10664
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5995": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10572,
        10664
      ],
      "op": "ADD",
      "path": "23"
    },
    "5996": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10572,
        10664
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5998": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10572,
        10664
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "5999": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10572,
        10664
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6000": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10540,
        10566
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2260"
    },
    "6003": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        10540,
        10665
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6004": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10540,
        10665
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6005": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10534,
        10665
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6006": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10534,
        10665
      ],
      "op": "POP",
      "path": "23"
    },
    "6007": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10685,
        10772
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 85,
      "value": "0x1787"
    },
    "6010": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10717,
        10720
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6011": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10722,
        10771
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1713"
    },
    "6014": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10738,
        10740
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6015": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10742,
        10749
      ],
      "op": "DUP14",
      "path": "23"
    },
    "6016": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10751,
        10761
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6017": {
      "offset": [
        1114,
        1116
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE"
    },
    "6019": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10722,
        10737
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "6022": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        10722,
        10771
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6023": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10685,
        10772
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6024": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10679,
        10772
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6025": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10679,
        10772
      ],
      "op": "POP",
      "path": "23"
    },
    "6026": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10792,
        10877
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 86,
      "value": "0x179A"
    },
    "6029": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10822,
        10825
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6030": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10827,
        10876
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1727"
    },
    "6033": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10843,
        10845
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6034": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10847,
        10854
      ],
      "op": "DUP14",
      "path": "23"
    },
    "6035": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10856,
        10866
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6036": {
      "offset": [
        1157,
        1159
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xF"
    },
    "6038": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10827,
        10842
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "6041": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        10827,
        10876
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6042": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10792,
        10877
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6043": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10786,
        10877
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6044": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10786,
        10877
      ],
      "op": "POP",
      "path": "23"
    },
    "6045": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10897,
        10984
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 87,
      "value": "0x17AD"
    },
    "6048": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10929,
        10932
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6049": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10934,
        10983
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x173B"
    },
    "6052": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10950,
        10952
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6053": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10954,
        10961
      ],
      "op": "DUP14",
      "path": "23"
    },
    "6054": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10963,
        10973
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6055": {
      "offset": [
        1200,
        1202
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x10"
    },
    "6057": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10934,
        10949
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "6060": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        10934,
        10983
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6061": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10897,
        10984
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6062": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10891,
        10984
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6063": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        10891,
        10984
      ],
      "op": "POP",
      "path": "23"
    },
    "6064": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        9673,
        10995
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6065": {
      "branch": 276,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11026,
        11045
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6066": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11026,
        11110
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6067": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11026,
        11110
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6068": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11026,
        11110
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x17C9"
    },
    "6071": {
      "branch": 276,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11026,
        11110
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6072": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11026,
        11110
      ],
      "op": "POP",
      "path": "23"
    },
    "6073": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11093,
        11110
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6074": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11049,
        11090
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x17C7"
    },
    "6077": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11063,
        11068
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2710"
    },
    "6080": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11070,
        11080
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6081": {
      "offset": [
        1244,
        1246
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x15"
    },
    "6083": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11049,
        11062
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x220E"
    },
    "6086": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        11049,
        11090
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6087": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11049,
        11090
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6088": {
      "branch": 277,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11049,
        11110
      ],
      "op": "LT",
      "path": "23"
    },
    "6089": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11026,
        11110
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6090": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11022,
        12344
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6091": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11022,
        12344
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1865"
    },
    "6094": {
      "branch": 277,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11022,
        12344
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6095": {
      "branch": 278,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11154,
        11172
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6096": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11154,
        11195
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6097": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11154,
        11195
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6098": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11154,
        11195
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x17D8"
    },
    "6101": {
      "branch": 278,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11154,
        11195
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6102": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11154,
        11195
      ],
      "op": "POP",
      "path": "23"
    },
    "6103": {
      "branch": 279,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11176,
        11195
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6104": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11154,
        11195
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6105": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11150,
        11429
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6106": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11150,
        11429
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1800"
    },
    "6109": {
      "branch": 279,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11150,
        11429
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6110": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11230,
        11267
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 88,
      "value": "0x17EA"
    },
    "6113": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11244,
        11245
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "6115": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11247,
        11257
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6116": {
      "offset": [
        1287,
        1289
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x16"
    },
    "6118": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11230,
        11243
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x220E"
    },
    "6121": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        11230,
        11267
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6122": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11230,
        11267
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6123": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11271,
        11272
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "6125": {
      "branch": 280,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11230,
        11272
      ],
      "op": "EQ",
      "path": "23"
    },
    "6126": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11230,
        11307
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x17F7"
    },
    "6129": {
      "branch": 280,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11230,
        11307
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6130": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11292,
        11307
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6131": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11230,
        11307
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x17F9"
    },
    "6134": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11230,
        11307
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6135": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11230,
        11307
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6136": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11275,
        11289
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6137": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11230,
        11307
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6138": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11215,
        11307
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6139": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11215,
        11307
      ],
      "op": "POP",
      "path": "23"
    },
    "6140": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11150,
        11429
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1810"
    },
    "6143": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11150,
        11429
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6144": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11150,
        11429
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6145": {
      "branch": 281,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11361,
        11379
      ],
      "op": "DUP6",
      "path": "23",
      "statement": 89
    },
    "6146": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11361,
        11414
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x180B"
    },
    "6149": {
      "branch": 281,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11361,
        11414
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6150": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11399,
        11414
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6151": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11361,
        11414
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x180D"
    },
    "6154": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11361,
        11414
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6155": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11361,
        11414
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6156": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11382,
        11396
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6157": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11361,
        11414
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6158": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11346,
        11414
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6159": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11346,
        11414
      ],
      "op": "POP",
      "path": "23"
    },
    "6160": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11150,
        11429
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6161": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11448,
        11521
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 90,
      "value": "0x1822"
    },
    "6164": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11475,
        11478
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6165": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11480,
        11520
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x181D"
    },
    "6168": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11507,
        11519
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6169": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11480,
        11506
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2595"
    },
    "6172": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        11480,
        11520
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6173": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11480,
        11520
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6174": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11448,
        11474
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25A5"
    },
    "6177": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        11448,
        11521
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6178": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11448,
        11521
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6179": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11442,
        11521
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6180": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11442,
        11521
      ],
      "op": "POP",
      "path": "23"
    },
    "6181": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11541,
        11624
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 91,
      "value": "0x1836"
    },
    "6184": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11573,
        11576
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6185": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11578,
        11623
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1831"
    },
    "6188": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11610,
        11622
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6189": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11578,
        11609
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25B6"
    },
    "6192": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        11578,
        11623
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6193": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11578,
        11623
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6194": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11541,
        11572
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25C6"
    },
    "6197": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        11541,
        11624
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6198": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11541,
        11624
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6199": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11535,
        11624
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6200": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11535,
        11624
      ],
      "op": "POP",
      "path": "23"
    },
    "6201": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11644,
        11723
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 92,
      "value": "0x184A"
    },
    "6204": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11674,
        11677
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6205": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11679,
        11722
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1845"
    },
    "6208": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11709,
        11721
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6209": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11679,
        11708
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25D7"
    },
    "6212": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        11679,
        11722
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6213": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11679,
        11722
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6214": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11644,
        11673
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25E7"
    },
    "6217": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        11644,
        11723
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6218": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11644,
        11723
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6219": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11638,
        11723
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6220": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11638,
        11723
      ],
      "op": "POP",
      "path": "23"
    },
    "6221": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11743,
        11826
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 93,
      "value": "0x185E"
    },
    "6224": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11775,
        11778
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6225": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11780,
        11825
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1859"
    },
    "6228": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11812,
        11824
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6229": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11780,
        11811
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25F8"
    },
    "6232": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        11780,
        11825
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6233": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11780,
        11825
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6234": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11743,
        11774
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2608"
    },
    "6237": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        11743,
        11826
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6238": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11743,
        11826
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6239": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11737,
        11826
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6240": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11737,
        11826
      ],
      "op": "POP",
      "path": "23"
    },
    "6241": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11022,
        12344
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x18CE"
    },
    "6244": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11022,
        12344
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6245": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11022,
        12344
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6246": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11889,
        12014
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 94,
      "value": "0x1892"
    },
    "6249": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11916,
        11919
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6250": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11921,
        11923
      ],
      "op": "DUP11",
      "path": "23"
    },
    "6251": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11921,
        11951
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x26"
    },
    "6253": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11921,
        11951
      ],
      "op": "ADD",
      "path": "23"
    },
    "6254": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11921,
        12013
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6256": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11952,
        12012
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x187E"
    },
    "6259": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11968,
        11970
      ],
      "op": "DUP14",
      "path": "23"
    },
    "6260": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11972,
        11979
      ],
      "op": "DUP16",
      "path": "23"
    },
    "6261": {
      "offset": [
        764,
        765
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "6263": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11992,
        12002
      ],
      "op": "DUP10",
      "path": "23"
    },
    "6264": {
      "offset": [
        1330,
        1332
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x17"
    },
    "6266": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11952,
        11967
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x22E0"
    },
    "6269": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        11952,
        12012
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6270": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11952,
        12012
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6271": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11921,
        12013
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6272": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11921,
        12013
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6273": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11921,
        12013
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6275": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11921,
        12013
      ],
      "op": "ADD",
      "path": "23"
    },
    "6276": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11921,
        12013
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6277": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11921,
        12013
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6278": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11921,
        12013
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6279": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11921,
        12013
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6281": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11921,
        12013
      ],
      "op": "ADD",
      "path": "23"
    },
    "6282": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11921,
        12013
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6284": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11921,
        12013
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "6285": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11921,
        12013
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6286": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11889,
        11915
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25A5"
    },
    "6289": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        11889,
        12014
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6290": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11889,
        12014
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6291": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11883,
        12014
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6292": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11883,
        12014
      ],
      "op": "POP",
      "path": "23"
    },
    "6293": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12034,
        12121
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 95,
      "value": "0x18A5"
    },
    "6296": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12066,
        12069
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6297": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12071,
        12120
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1831"
    },
    "6300": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12087,
        12089
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6301": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12091,
        12098
      ],
      "op": "DUP14",
      "path": "23"
    },
    "6302": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12100,
        12110
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6303": {
      "offset": [
        1373,
        1375
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x18"
    },
    "6305": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12071,
        12086
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "6308": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        12071,
        12120
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6309": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12034,
        12121
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6310": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12028,
        12121
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6311": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12028,
        12121
      ],
      "op": "POP",
      "path": "23"
    },
    "6312": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12141,
        12226
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 96,
      "value": "0x18B8"
    },
    "6315": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12171,
        12174
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6316": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12176,
        12225
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1845"
    },
    "6319": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12192,
        12194
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6320": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12196,
        12203
      ],
      "op": "DUP14",
      "path": "23"
    },
    "6321": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12205,
        12215
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6322": {
      "offset": [
        1416,
        1418
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x19"
    },
    "6324": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12176,
        12191
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "6327": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        12176,
        12225
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6328": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12141,
        12226
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6329": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12135,
        12226
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6330": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12135,
        12226
      ],
      "op": "POP",
      "path": "23"
    },
    "6331": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12246,
        12333
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 97,
      "value": "0x18CB"
    },
    "6334": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12278,
        12281
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6335": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12283,
        12332
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1859"
    },
    "6338": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12299,
        12301
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6339": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12303,
        12310
      ],
      "op": "DUP14",
      "path": "23"
    },
    "6340": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12312,
        12322
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6341": {
      "offset": [
        1459,
        1461
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1A"
    },
    "6343": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12283,
        12298
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "6346": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        12283,
        12332
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6347": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12246,
        12333
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6348": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12240,
        12333
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6349": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12240,
        12333
      ],
      "op": "POP",
      "path": "23"
    },
    "6350": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        11022,
        12344
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6351": {
      "branch": 282,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12375,
        12394
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6352": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12375,
        12459
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6353": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12375,
        12459
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6354": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12375,
        12459
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x18E7"
    },
    "6357": {
      "branch": 282,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12375,
        12459
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6358": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12375,
        12459
      ],
      "op": "POP",
      "path": "23"
    },
    "6359": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12442,
        12459
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6360": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12398,
        12439
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x18E5"
    },
    "6363": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12412,
        12417
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2710"
    },
    "6366": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12419,
        12429
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6367": {
      "offset": [
        1503,
        1505
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1F"
    },
    "6369": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12398,
        12411
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x220E"
    },
    "6372": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        12398,
        12439
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6373": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12398,
        12439
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6374": {
      "branch": 283,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12398,
        12459
      ],
      "op": "LT",
      "path": "23"
    },
    "6375": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12375,
        12459
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6376": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12371,
        13693
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6377": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12371,
        13693
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1983"
    },
    "6380": {
      "branch": 283,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12371,
        13693
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6381": {
      "branch": 284,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12503,
        12521
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6382": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12503,
        12544
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6383": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12503,
        12544
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6384": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12503,
        12544
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x18F6"
    },
    "6387": {
      "branch": 284,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12503,
        12544
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6388": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12503,
        12544
      ],
      "op": "POP",
      "path": "23"
    },
    "6389": {
      "branch": 285,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12525,
        12544
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6390": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12503,
        12544
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6391": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12499,
        12778
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6392": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12499,
        12778
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x191E"
    },
    "6395": {
      "branch": 285,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12499,
        12778
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6396": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12579,
        12616
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 98,
      "value": "0x1908"
    },
    "6399": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12593,
        12594
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "6401": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12596,
        12606
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6402": {
      "offset": [
        1546,
        1548
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6404": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12579,
        12592
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x220E"
    },
    "6407": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        12579,
        12616
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6408": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12579,
        12616
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6409": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12620,
        12621
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "6411": {
      "branch": 286,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12579,
        12621
      ],
      "op": "EQ",
      "path": "23"
    },
    "6412": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12579,
        12656
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1915"
    },
    "6415": {
      "branch": 286,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12579,
        12656
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6416": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12641,
        12656
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6417": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12579,
        12656
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1917"
    },
    "6420": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12579,
        12656
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6421": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12579,
        12656
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6422": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12624,
        12638
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6423": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12579,
        12656
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6424": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12564,
        12656
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6425": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12564,
        12656
      ],
      "op": "POP",
      "path": "23"
    },
    "6426": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12499,
        12778
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x192E"
    },
    "6429": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12499,
        12778
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6430": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12499,
        12778
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6431": {
      "branch": 287,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12710,
        12728
      ],
      "op": "DUP6",
      "path": "23",
      "statement": 99
    },
    "6432": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12710,
        12763
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1929"
    },
    "6435": {
      "branch": 287,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12710,
        12763
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6436": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12748,
        12763
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6437": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12710,
        12763
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x192B"
    },
    "6440": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12710,
        12763
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6441": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12710,
        12763
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6442": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12731,
        12745
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6443": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12710,
        12763
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6444": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12695,
        12763
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6445": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12695,
        12763
      ],
      "op": "POP",
      "path": "23"
    },
    "6446": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12499,
        12778
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6447": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12797,
        12870
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 100,
      "value": "0x1940"
    },
    "6450": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12824,
        12827
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6451": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12829,
        12869
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x193B"
    },
    "6454": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12856,
        12868
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6455": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12829,
        12855
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2619"
    },
    "6458": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        12829,
        12869
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6459": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12829,
        12869
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6460": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12797,
        12823
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2629"
    },
    "6463": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        12797,
        12870
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6464": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12797,
        12870
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6465": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12791,
        12870
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6466": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12791,
        12870
      ],
      "op": "POP",
      "path": "23"
    },
    "6467": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12890,
        12973
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 101,
      "value": "0x1954"
    },
    "6470": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12922,
        12925
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6471": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12927,
        12972
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x194F"
    },
    "6474": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12959,
        12971
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6475": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12927,
        12958
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x263A"
    },
    "6478": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        12927,
        12972
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6479": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12927,
        12972
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6480": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12890,
        12921
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x264A"
    },
    "6483": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        12890,
        12973
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6484": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12890,
        12973
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6485": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12884,
        12973
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6486": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12884,
        12973
      ],
      "op": "POP",
      "path": "23"
    },
    "6487": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12993,
        13072
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 102,
      "value": "0x1968"
    },
    "6490": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13023,
        13026
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6491": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13028,
        13071
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1963"
    },
    "6494": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13058,
        13070
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6495": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13028,
        13057
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x265B"
    },
    "6498": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        13028,
        13071
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6499": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13028,
        13071
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6500": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12993,
        13022
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x266B"
    },
    "6503": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        12993,
        13072
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6504": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12993,
        13072
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6505": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12987,
        13072
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6506": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12987,
        13072
      ],
      "op": "POP",
      "path": "23"
    },
    "6507": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13092,
        13175
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 103,
      "value": "0x197C"
    },
    "6510": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13124,
        13127
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6511": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13129,
        13174
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1977"
    },
    "6514": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13161,
        13173
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6515": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13129,
        13160
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x267C"
    },
    "6518": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        13129,
        13174
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6519": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13129,
        13174
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6520": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13092,
        13123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x268C"
    },
    "6523": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        13092,
        13175
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6524": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13092,
        13175
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6525": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13086,
        13175
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6526": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13086,
        13175
      ],
      "op": "POP",
      "path": "23"
    },
    "6527": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12371,
        13693
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x19EC"
    },
    "6530": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12371,
        13693
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6531": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12371,
        13693
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6532": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13238,
        13363
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 104,
      "value": "0x19B0"
    },
    "6535": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13265,
        13268
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6536": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13270,
        13272
      ],
      "op": "DUP11",
      "path": "23"
    },
    "6537": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13270,
        13300
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x26"
    },
    "6539": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13270,
        13300
      ],
      "op": "ADD",
      "path": "23"
    },
    "6540": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13270,
        13362
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6542": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13301,
        13361
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x199C"
    },
    "6545": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13317,
        13319
      ],
      "op": "DUP14",
      "path": "23"
    },
    "6546": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13321,
        13328
      ],
      "op": "DUP16",
      "path": "23"
    },
    "6547": {
      "offset": [
        808,
        809
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "6549": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13341,
        13351
      ],
      "op": "DUP10",
      "path": "23"
    },
    "6550": {
      "offset": [
        1589,
        1591
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x21"
    },
    "6552": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13301,
        13316
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x22E0"
    },
    "6555": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        13301,
        13361
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6556": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13301,
        13361
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6557": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13270,
        13362
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6558": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13270,
        13362
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6559": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13270,
        13362
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6561": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13270,
        13362
      ],
      "op": "ADD",
      "path": "23"
    },
    "6562": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13270,
        13362
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6563": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13270,
        13362
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6564": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13270,
        13362
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6565": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13270,
        13362
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6567": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13270,
        13362
      ],
      "op": "ADD",
      "path": "23"
    },
    "6568": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13270,
        13362
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6570": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13270,
        13362
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "6571": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13270,
        13362
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6572": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13238,
        13264
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2629"
    },
    "6575": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        13238,
        13363
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6576": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13238,
        13363
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6577": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13232,
        13363
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6578": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13232,
        13363
      ],
      "op": "POP",
      "path": "23"
    },
    "6579": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13383,
        13470
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 105,
      "value": "0x19C3"
    },
    "6582": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13415,
        13418
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6583": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13420,
        13469
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x194F"
    },
    "6586": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13436,
        13438
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6587": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13440,
        13447
      ],
      "op": "DUP14",
      "path": "23"
    },
    "6588": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13449,
        13459
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6589": {
      "offset": [
        1632,
        1634
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x22"
    },
    "6591": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13420,
        13435
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "6594": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        13420,
        13469
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6595": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13383,
        13470
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6596": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13377,
        13470
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6597": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13377,
        13470
      ],
      "op": "POP",
      "path": "23"
    },
    "6598": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13490,
        13575
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 106,
      "value": "0x19D6"
    },
    "6601": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13520,
        13523
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6602": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13525,
        13574
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1963"
    },
    "6605": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13541,
        13543
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6606": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13545,
        13552
      ],
      "op": "DUP14",
      "path": "23"
    },
    "6607": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13554,
        13564
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6608": {
      "offset": [
        1675,
        1677
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x23"
    },
    "6610": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13525,
        13540
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "6613": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        13525,
        13574
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6614": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13490,
        13575
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6615": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13484,
        13575
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6616": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13484,
        13575
      ],
      "op": "POP",
      "path": "23"
    },
    "6617": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13595,
        13682
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 107,
      "value": "0x19E9"
    },
    "6620": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13627,
        13630
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6621": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13632,
        13681
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1977"
    },
    "6624": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13648,
        13650
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6625": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13652,
        13659
      ],
      "op": "DUP14",
      "path": "23"
    },
    "6626": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13661,
        13671
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6627": {
      "offset": [
        1718,
        1720
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "6629": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13632,
        13647
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "6632": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        13632,
        13681
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6633": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13595,
        13682
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6634": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13589,
        13682
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6635": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13589,
        13682
      ],
      "op": "POP",
      "path": "23"
    },
    "6636": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        12371,
        13693
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6637": {
      "branch": 288,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13726,
        13745
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6638": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13726,
        13810
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6639": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13726,
        13810
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6640": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13726,
        13810
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A05"
    },
    "6643": {
      "branch": 288,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13726,
        13810
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6644": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13726,
        13810
      ],
      "op": "POP",
      "path": "23"
    },
    "6645": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13793,
        13810
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6646": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13749,
        13790
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A03"
    },
    "6649": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13763,
        13768
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2710"
    },
    "6652": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13770,
        13780
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6653": {
      "offset": [
        1762,
        1764
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x29"
    },
    "6655": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13749,
        13762
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x220E"
    },
    "6658": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        13749,
        13790
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6659": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13749,
        13790
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6660": {
      "branch": 289,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13749,
        13810
      ],
      "op": "LT",
      "path": "23"
    },
    "6661": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13726,
        13810
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6662": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13722,
        15070
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6663": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13722,
        15070
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AA1"
    },
    "6666": {
      "branch": 289,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13722,
        15070
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6667": {
      "branch": 290,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13854,
        13872
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6668": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13854,
        13895
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6669": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13854,
        13895
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6670": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13854,
        13895
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A14"
    },
    "6673": {
      "branch": 290,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13854,
        13895
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6674": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13854,
        13895
      ],
      "op": "POP",
      "path": "23"
    },
    "6675": {
      "branch": 291,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13876,
        13895
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6676": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13854,
        13895
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6677": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13850,
        14129
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6678": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13850,
        14129
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A3C"
    },
    "6681": {
      "branch": 291,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13850,
        14129
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6682": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13930,
        13967
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 108,
      "value": "0x1A26"
    },
    "6685": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13944,
        13945
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "6687": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13947,
        13957
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6688": {
      "offset": [
        1805,
        1807
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2A"
    },
    "6690": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13930,
        13943
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x220E"
    },
    "6693": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        13930,
        13967
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6694": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13930,
        13967
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6695": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13971,
        13972
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "6697": {
      "branch": 292,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13930,
        13972
      ],
      "op": "EQ",
      "path": "23"
    },
    "6698": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13930,
        14007
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A33"
    },
    "6701": {
      "branch": 292,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13930,
        14007
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6702": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13992,
        14007
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6703": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13930,
        14007
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A35"
    },
    "6706": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13930,
        14007
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6707": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13930,
        14007
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6708": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13975,
        13989
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6709": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13930,
        14007
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6710": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13915,
        14007
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6711": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13915,
        14007
      ],
      "op": "POP",
      "path": "23"
    },
    "6712": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13850,
        14129
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A4C"
    },
    "6715": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13850,
        14129
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6716": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13850,
        14129
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6717": {
      "branch": 293,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14061,
        14079
      ],
      "op": "DUP6",
      "path": "23",
      "statement": 109
    },
    "6718": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14061,
        14114
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A47"
    },
    "6721": {
      "branch": 293,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14061,
        14114
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6722": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14099,
        14114
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6723": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14061,
        14114
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A49"
    },
    "6726": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14061,
        14114
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6727": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14061,
        14114
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6728": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14082,
        14096
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6729": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14061,
        14114
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6730": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14046,
        14114
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6731": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14046,
        14114
      ],
      "op": "POP",
      "path": "23"
    },
    "6732": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13850,
        14129
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6733": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14148,
        14225
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 110,
      "value": "0x1A5E"
    },
    "6736": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14177,
        14180
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6737": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14182,
        14224
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A59"
    },
    "6740": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14211,
        14223
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6741": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14182,
        14210
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x269D"
    },
    "6744": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        14182,
        14224
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6745": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14182,
        14224
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6746": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14148,
        14176
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26AD"
    },
    "6749": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        14148,
        14225
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6750": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14148,
        14225
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6751": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14142,
        14225
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6752": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14142,
        14225
      ],
      "op": "POP",
      "path": "23"
    },
    "6753": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14245,
        14332
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 111,
      "value": "0x1A72"
    },
    "6756": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14279,
        14282
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6757": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14284,
        14331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A6D"
    },
    "6760": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14318,
        14330
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6761": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14284,
        14317
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26BE"
    },
    "6764": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        14284,
        14331
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6765": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14284,
        14331
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6766": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14245,
        14278
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26CE"
    },
    "6769": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        14245,
        14332
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6770": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14245,
        14332
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6771": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14239,
        14332
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6772": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14239,
        14332
      ],
      "op": "POP",
      "path": "23"
    },
    "6773": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14352,
        14435
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 112,
      "value": "0x1A86"
    },
    "6776": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14384,
        14387
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6777": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14389,
        14434
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A81"
    },
    "6780": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14421,
        14433
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6781": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14389,
        14420
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26DF"
    },
    "6784": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        14389,
        14434
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6785": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14389,
        14434
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6786": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14352,
        14383
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26EF"
    },
    "6789": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        14352,
        14435
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6790": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14352,
        14435
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6791": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14346,
        14435
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6792": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14346,
        14435
      ],
      "op": "POP",
      "path": "23"
    },
    "6793": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14455,
        14542
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 113,
      "value": "0x1A9A"
    },
    "6796": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14489,
        14492
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6797": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14494,
        14541
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A95"
    },
    "6800": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14528,
        14540
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6801": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14494,
        14527
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2700"
    },
    "6804": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        14494,
        14541
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6805": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14494,
        14541
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6806": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14455,
        14488
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2710"
    },
    "6809": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        14455,
        14542
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6810": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14455,
        14542
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6811": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14449,
        14542
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6812": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14449,
        14542
      ],
      "op": "POP",
      "path": "23"
    },
    "6813": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13722,
        15070
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B0A"
    },
    "6816": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13722,
        15070
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6817": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13722,
        15070
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6818": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14605,
        14734
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 114,
      "value": "0x1ACE"
    },
    "6821": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14634,
        14637
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6822": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14639,
        14641
      ],
      "op": "DUP11",
      "path": "23"
    },
    "6823": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14639,
        14669
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x26"
    },
    "6825": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14639,
        14669
      ],
      "op": "ADD",
      "path": "23"
    },
    "6826": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14639,
        14733
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6828": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14670,
        14732
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1ABA"
    },
    "6831": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14686,
        14688
      ],
      "op": "DUP14",
      "path": "23"
    },
    "6832": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14690,
        14697
      ],
      "op": "DUP16",
      "path": "23"
    },
    "6833": {
      "offset": [
        854,
        855
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "6835": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14712,
        14722
      ],
      "op": "DUP10",
      "path": "23"
    },
    "6836": {
      "offset": [
        1848,
        1850
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2B"
    },
    "6838": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14670,
        14685
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x22E0"
    },
    "6841": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        14670,
        14732
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6842": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14670,
        14732
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6843": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14639,
        14733
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6844": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14639,
        14733
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6845": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14639,
        14733
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6847": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14639,
        14733
      ],
      "op": "ADD",
      "path": "23"
    },
    "6848": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14639,
        14733
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6849": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14639,
        14733
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6850": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14639,
        14733
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6851": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14639,
        14733
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6853": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14639,
        14733
      ],
      "op": "ADD",
      "path": "23"
    },
    "6854": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14639,
        14733
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6856": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14639,
        14733
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "6857": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14639,
        14733
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6858": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14605,
        14633
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26AD"
    },
    "6861": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        14605,
        14734
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6862": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14605,
        14734
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6863": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14599,
        14734
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6864": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14599,
        14734
      ],
      "op": "POP",
      "path": "23"
    },
    "6865": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14754,
        14843
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 115,
      "value": "0x1AE1"
    },
    "6868": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14788,
        14791
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6869": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14793,
        14842
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A6D"
    },
    "6872": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14809,
        14811
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6873": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14813,
        14820
      ],
      "op": "DUP14",
      "path": "23"
    },
    "6874": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14822,
        14832
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6875": {
      "offset": [
        1891,
        1893
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2C"
    },
    "6877": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14793,
        14808
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "6880": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        14793,
        14842
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6881": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14754,
        14843
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6882": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14748,
        14843
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6883": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14748,
        14843
      ],
      "op": "POP",
      "path": "23"
    },
    "6884": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14863,
        14950
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 116,
      "value": "0x1AF4"
    },
    "6887": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14895,
        14898
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6888": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14900,
        14949
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A81"
    },
    "6891": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14916,
        14918
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6892": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14920,
        14927
      ],
      "op": "DUP14",
      "path": "23"
    },
    "6893": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14929,
        14939
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6894": {
      "offset": [
        1934,
        1936
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2D"
    },
    "6896": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14900,
        14915
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "6899": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        14900,
        14949
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6900": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14863,
        14950
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6901": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14857,
        14950
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6902": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14857,
        14950
      ],
      "op": "POP",
      "path": "23"
    },
    "6903": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14970,
        15059
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 117,
      "value": "0x1B07"
    },
    "6906": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15004,
        15007
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6907": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15009,
        15058
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A95"
    },
    "6910": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15025,
        15027
      ],
      "op": "DUP12",
      "path": "23"
    },
    "6911": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15029,
        15036
      ],
      "op": "DUP14",
      "path": "23"
    },
    "6912": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15038,
        15048
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6913": {
      "offset": [
        1977,
        1979
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2E"
    },
    "6915": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15009,
        15024
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "6918": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        15009,
        15058
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6919": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14970,
        15059
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6920": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14964,
        15059
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "6921": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        14964,
        15059
      ],
      "op": "POP",
      "path": "23"
    },
    "6922": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        13722,
        15070
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6923": {
      "branch": 294,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15101,
        15120
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6924": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15101,
        15185
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6925": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15101,
        15185
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6926": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15101,
        15185
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B23"
    },
    "6929": {
      "branch": 294,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15101,
        15185
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6930": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15101,
        15185
      ],
      "op": "POP",
      "path": "23"
    },
    "6931": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15168,
        15185
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6932": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15124,
        15165
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B21"
    },
    "6935": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15138,
        15143
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2710"
    },
    "6938": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15145,
        15155
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6939": {
      "offset": [
        2021,
        2023
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x33"
    },
    "6941": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15124,
        15137
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x220E"
    },
    "6944": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        15124,
        15165
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6945": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15124,
        15165
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6946": {
      "branch": 295,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15124,
        15185
      ],
      "op": "LT",
      "path": "23"
    },
    "6947": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15101,
        15185
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6948": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15097,
        16419
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6949": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15097,
        16419
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BBF"
    },
    "6952": {
      "branch": 295,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15097,
        16419
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6953": {
      "branch": 296,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15229,
        15247
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6954": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15229,
        15270
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6955": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15229,
        15270
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6956": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15229,
        15270
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B32"
    },
    "6959": {
      "branch": 296,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15229,
        15270
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6960": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15229,
        15270
      ],
      "op": "POP",
      "path": "23"
    },
    "6961": {
      "branch": 297,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15251,
        15270
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6962": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15229,
        15270
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6963": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15225,
        15504
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6964": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15225,
        15504
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B5A"
    },
    "6967": {
      "branch": 297,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15225,
        15504
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6968": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15305,
        15342
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 118,
      "value": "0x1B44"
    },
    "6971": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15319,
        15320
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "6973": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15322,
        15332
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6974": {
      "offset": [
        2064,
        2066
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x34"
    },
    "6976": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15305,
        15318
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x220E"
    },
    "6979": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        15305,
        15342
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6980": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15305,
        15342
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6981": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15346,
        15347
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "6983": {
      "branch": 298,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15305,
        15347
      ],
      "op": "EQ",
      "path": "23"
    },
    "6984": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15305,
        15382
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B51"
    },
    "6987": {
      "branch": 298,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15305,
        15382
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6988": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15367,
        15382
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6989": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15305,
        15382
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B53"
    },
    "6992": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15305,
        15382
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6993": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15305,
        15382
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6994": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15350,
        15364
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6995": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15305,
        15382
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6996": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15290,
        15382
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6997": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15290,
        15382
      ],
      "op": "POP",
      "path": "23"
    },
    "6998": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15225,
        15504
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B6A"
    },
    "7001": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15225,
        15504
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7002": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15225,
        15504
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7003": {
      "branch": 299,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15436,
        15454
      ],
      "op": "DUP6",
      "path": "23",
      "statement": 119
    },
    "7004": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15436,
        15489
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B65"
    },
    "7007": {
      "branch": 299,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15436,
        15489
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7008": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15474,
        15489
      ],
      "op": "DUP7",
      "path": "23"
    },
    "7009": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15436,
        15489
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B67"
    },
    "7012": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15436,
        15489
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7013": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15436,
        15489
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7014": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15457,
        15471
      ],
      "op": "DUP8",
      "path": "23"
    },
    "7015": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15436,
        15489
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7016": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15421,
        15489
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7017": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15421,
        15489
      ],
      "op": "POP",
      "path": "23"
    },
    "7018": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15225,
        15504
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7019": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15523,
        15596
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 120,
      "value": "0x1B7C"
    },
    "7022": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15550,
        15553
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7023": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15555,
        15595
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B77"
    },
    "7026": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15582,
        15594
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7027": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15555,
        15581
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2721"
    },
    "7030": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        15555,
        15595
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7031": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15555,
        15595
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7032": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15523,
        15549
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2731"
    },
    "7035": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        15523,
        15596
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7036": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15523,
        15596
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7037": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15517,
        15596
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "7038": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15517,
        15596
      ],
      "op": "POP",
      "path": "23"
    },
    "7039": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15616,
        15699
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 121,
      "value": "0x1B90"
    },
    "7042": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15648,
        15651
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7043": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15653,
        15698
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B8B"
    },
    "7046": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15685,
        15697
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7047": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15653,
        15684
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2742"
    },
    "7050": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        15653,
        15698
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7051": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15653,
        15698
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7052": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15616,
        15647
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2752"
    },
    "7055": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        15616,
        15699
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7056": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15616,
        15699
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7057": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15610,
        15699
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "7058": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15610,
        15699
      ],
      "op": "POP",
      "path": "23"
    },
    "7059": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15719,
        15798
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 122,
      "value": "0x1BA4"
    },
    "7062": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15749,
        15752
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7063": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15754,
        15797
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B9F"
    },
    "7066": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15784,
        15796
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7067": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15754,
        15783
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2763"
    },
    "7070": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        15754,
        15797
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7071": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15754,
        15797
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7072": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15719,
        15748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2773"
    },
    "7075": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        15719,
        15798
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7076": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15719,
        15798
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7077": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15713,
        15798
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "7078": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15713,
        15798
      ],
      "op": "POP",
      "path": "23"
    },
    "7079": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15818,
        15901
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 123,
      "value": "0x1BB8"
    },
    "7082": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15850,
        15853
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7083": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15855,
        15900
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BB3"
    },
    "7086": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15887,
        15899
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7087": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15855,
        15886
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2784"
    },
    "7090": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        15855,
        15900
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7091": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15855,
        15900
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7092": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15818,
        15849
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2794"
    },
    "7095": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        15818,
        15901
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7096": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15818,
        15901
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7097": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15812,
        15901
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "7098": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15812,
        15901
      ],
      "op": "POP",
      "path": "23"
    },
    "7099": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15097,
        16419
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C28"
    },
    "7102": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15097,
        16419
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7103": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15097,
        16419
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7104": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15964,
        16089
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 124,
      "value": "0x1BEC"
    },
    "7107": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15991,
        15994
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7108": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15996,
        15998
      ],
      "op": "DUP11",
      "path": "23"
    },
    "7109": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15996,
        16026
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x26"
    },
    "7111": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15996,
        16026
      ],
      "op": "ADD",
      "path": "23"
    },
    "7112": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15996,
        16088
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7114": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16027,
        16087
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BD8"
    },
    "7117": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16043,
        16045
      ],
      "op": "DUP14",
      "path": "23"
    },
    "7118": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16047,
        16054
      ],
      "op": "DUP16",
      "path": "23"
    },
    "7119": {
      "offset": [
        898,
        899
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "7121": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16067,
        16077
      ],
      "op": "DUP10",
      "path": "23"
    },
    "7122": {
      "offset": [
        2107,
        2109
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x35"
    },
    "7124": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16027,
        16042
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x22E0"
    },
    "7127": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        16027,
        16087
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7128": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16027,
        16087
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7129": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15996,
        16088
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7130": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15996,
        16088
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7131": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15996,
        16088
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7133": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15996,
        16088
      ],
      "op": "ADD",
      "path": "23"
    },
    "7134": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15996,
        16088
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7135": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15996,
        16088
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7136": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15996,
        16088
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7137": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15996,
        16088
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7139": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15996,
        16088
      ],
      "op": "ADD",
      "path": "23"
    },
    "7140": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15996,
        16088
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7142": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15996,
        16088
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "7143": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15996,
        16088
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7144": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15964,
        15990
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2731"
    },
    "7147": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        15964,
        16089
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7148": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15964,
        16089
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7149": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15958,
        16089
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "7150": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15958,
        16089
      ],
      "op": "POP",
      "path": "23"
    },
    "7151": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16109,
        16196
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 125,
      "value": "0x1BFF"
    },
    "7154": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16141,
        16144
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7155": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16146,
        16195
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B8B"
    },
    "7158": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16162,
        16164
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7159": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16166,
        16173
      ],
      "op": "DUP14",
      "path": "23"
    },
    "7160": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16175,
        16185
      ],
      "op": "DUP7",
      "path": "23"
    },
    "7161": {
      "offset": [
        2150,
        2152
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x36"
    },
    "7163": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16146,
        16161
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "7166": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        16146,
        16195
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7167": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16109,
        16196
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7168": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16103,
        16196
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "7169": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16103,
        16196
      ],
      "op": "POP",
      "path": "23"
    },
    "7170": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16216,
        16301
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 126,
      "value": "0x1C12"
    },
    "7173": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16246,
        16249
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7174": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16251,
        16300
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B9F"
    },
    "7177": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16267,
        16269
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7178": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16271,
        16278
      ],
      "op": "DUP14",
      "path": "23"
    },
    "7179": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16280,
        16290
      ],
      "op": "DUP7",
      "path": "23"
    },
    "7180": {
      "offset": [
        2193,
        2195
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x37"
    },
    "7182": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16251,
        16266
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "7185": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        16251,
        16300
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7186": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16216,
        16301
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7187": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16210,
        16301
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "7188": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16210,
        16301
      ],
      "op": "POP",
      "path": "23"
    },
    "7189": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16321,
        16408
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 127,
      "value": "0x1C25"
    },
    "7192": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16353,
        16356
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7193": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16358,
        16407
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BB3"
    },
    "7196": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16374,
        16376
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7197": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16378,
        16385
      ],
      "op": "DUP14",
      "path": "23"
    },
    "7198": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16387,
        16397
      ],
      "op": "DUP7",
      "path": "23"
    },
    "7199": {
      "offset": [
        2236,
        2238
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x38"
    },
    "7201": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16358,
        16373
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "7204": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        16358,
        16407
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7205": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16321,
        16408
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7206": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16315,
        16408
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "7207": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16315,
        16408
      ],
      "op": "POP",
      "path": "23"
    },
    "7208": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        15097,
        16419
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7209": {
      "branch": 300,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16450,
        16469
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7210": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16450,
        16534
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7211": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16450,
        16534
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7212": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16450,
        16534
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C41"
    },
    "7215": {
      "branch": 300,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16450,
        16534
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7216": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16450,
        16534
      ],
      "op": "POP",
      "path": "23"
    },
    "7217": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16517,
        16534
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7218": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16473,
        16514
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C3F"
    },
    "7221": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16487,
        16492
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2710"
    },
    "7224": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16494,
        16504
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7225": {
      "offset": [
        2280,
        2282
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3D"
    },
    "7227": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16473,
        16486
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x220E"
    },
    "7230": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        16473,
        16514
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7231": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16473,
        16514
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7232": {
      "branch": 301,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16473,
        16534
      ],
      "op": "LT",
      "path": "23"
    },
    "7233": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16450,
        16534
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7234": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16446,
        17768
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7235": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16446,
        17768
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CDD"
    },
    "7238": {
      "branch": 301,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16446,
        17768
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7239": {
      "branch": 302,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16578,
        16596
      ],
      "op": "DUP6",
      "path": "23"
    },
    "7240": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16578,
        16619
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7241": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16578,
        16619
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7242": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16578,
        16619
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C50"
    },
    "7245": {
      "branch": 302,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16578,
        16619
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7246": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16578,
        16619
      ],
      "op": "POP",
      "path": "23"
    },
    "7247": {
      "branch": 303,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16600,
        16619
      ],
      "op": "DUP5",
      "path": "23"
    },
    "7248": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16578,
        16619
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7249": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16574,
        16853
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7250": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16574,
        16853
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C78"
    },
    "7253": {
      "branch": 303,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16574,
        16853
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7254": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16654,
        16691
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 128,
      "value": "0x1C62"
    },
    "7257": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16668,
        16669
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "7259": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16671,
        16681
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7260": {
      "offset": [
        2323,
        2325
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3E"
    },
    "7262": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16654,
        16667
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x220E"
    },
    "7265": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        16654,
        16691
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7266": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16654,
        16691
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7267": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16695,
        16696
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "7269": {
      "branch": 304,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16654,
        16696
      ],
      "op": "EQ",
      "path": "23"
    },
    "7270": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16654,
        16731
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C6F"
    },
    "7273": {
      "branch": 304,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16654,
        16731
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7274": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16716,
        16731
      ],
      "op": "DUP7",
      "path": "23"
    },
    "7275": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16654,
        16731
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C71"
    },
    "7278": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16654,
        16731
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7279": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16654,
        16731
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7280": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16699,
        16713
      ],
      "op": "DUP8",
      "path": "23"
    },
    "7281": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16654,
        16731
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7282": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16639,
        16731
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7283": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16639,
        16731
      ],
      "op": "POP",
      "path": "23"
    },
    "7284": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16574,
        16853
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C88"
    },
    "7287": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16574,
        16853
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7288": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16574,
        16853
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7289": {
      "branch": 305,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16785,
        16803
      ],
      "op": "DUP6",
      "path": "23",
      "statement": 129
    },
    "7290": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16785,
        16838
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C83"
    },
    "7293": {
      "branch": 305,
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16785,
        16838
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7294": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16823,
        16838
      ],
      "op": "DUP7",
      "path": "23"
    },
    "7295": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16785,
        16838
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C85"
    },
    "7298": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16785,
        16838
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7299": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16785,
        16838
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7300": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16806,
        16820
      ],
      "op": "DUP8",
      "path": "23"
    },
    "7301": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16785,
        16838
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7302": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16770,
        16838
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7303": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16770,
        16838
      ],
      "op": "POP",
      "path": "23"
    },
    "7304": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16574,
        16853
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7305": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16872,
        16945
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 130,
      "value": "0x1C9A"
    },
    "7308": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16899,
        16902
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7309": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16904,
        16944
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C95"
    },
    "7312": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16931,
        16943
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7313": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16904,
        16930
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x27A5"
    },
    "7316": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        16904,
        16944
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7317": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16904,
        16944
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7318": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16872,
        16898
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x27B5"
    },
    "7321": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        16872,
        16945
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7322": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16872,
        16945
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7323": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16866,
        16945
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "7324": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16866,
        16945
      ],
      "op": "POP",
      "path": "23"
    },
    "7325": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16965,
        17048
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 131,
      "value": "0x1CAE"
    },
    "7328": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16997,
        17000
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7329": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17002,
        17047
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CA9"
    },
    "7332": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17034,
        17046
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7333": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17002,
        17033
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x27C6"
    },
    "7336": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        17002,
        17047
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7337": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17002,
        17047
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7338": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16965,
        16996
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x27D6"
    },
    "7341": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        16965,
        17048
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7342": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16965,
        17048
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7343": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16959,
        17048
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "7344": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16959,
        17048
      ],
      "op": "POP",
      "path": "23"
    },
    "7345": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17068,
        17147
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 132,
      "value": "0x1CC2"
    },
    "7348": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17098,
        17101
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7349": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17103,
        17146
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CBD"
    },
    "7352": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17133,
        17145
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7353": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17103,
        17132
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x27E7"
    },
    "7356": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        17103,
        17146
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7357": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17103,
        17146
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7358": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17068,
        17097
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x27F7"
    },
    "7361": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        17068,
        17147
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7362": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17068,
        17147
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7363": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17062,
        17147
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "7364": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17062,
        17147
      ],
      "op": "POP",
      "path": "23"
    },
    "7365": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17167,
        17250
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 133,
      "value": "0x1CD6"
    },
    "7368": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17199,
        17202
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7369": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17204,
        17249
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CD1"
    },
    "7372": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17236,
        17248
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7373": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17204,
        17235
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2808"
    },
    "7376": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        17204,
        17249
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7377": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17204,
        17249
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7378": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17167,
        17198
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2818"
    },
    "7381": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        17167,
        17250
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7382": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17167,
        17250
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7383": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17161,
        17250
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "7384": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17161,
        17250
      ],
      "op": "POP",
      "path": "23"
    },
    "7385": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16446,
        17768
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D46"
    },
    "7388": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16446,
        17768
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7389": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16446,
        17768
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7390": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17313,
        17438
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 134,
      "value": "0x1D0A"
    },
    "7393": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17340,
        17343
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7394": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17345,
        17347
      ],
      "op": "DUP11",
      "path": "23"
    },
    "7395": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17345,
        17375
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x26"
    },
    "7397": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17345,
        17375
      ],
      "op": "ADD",
      "path": "23"
    },
    "7398": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17345,
        17437
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7400": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17376,
        17436
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CF6"
    },
    "7403": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17392,
        17394
      ],
      "op": "DUP14",
      "path": "23"
    },
    "7404": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17396,
        17403
      ],
      "op": "DUP16",
      "path": "23"
    },
    "7405": {
      "offset": [
        942,
        943
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "7407": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17416,
        17426
      ],
      "op": "DUP10",
      "path": "23"
    },
    "7408": {
      "offset": [
        2366,
        2368
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3F"
    },
    "7410": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17376,
        17391
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x22E0"
    },
    "7413": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        17376,
        17436
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7414": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17376,
        17436
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7415": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17345,
        17437
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7416": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17345,
        17437
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7417": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17345,
        17437
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7419": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17345,
        17437
      ],
      "op": "ADD",
      "path": "23"
    },
    "7420": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17345,
        17437
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7421": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17345,
        17437
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7422": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17345,
        17437
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7423": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17345,
        17437
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7425": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17345,
        17437
      ],
      "op": "ADD",
      "path": "23"
    },
    "7426": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17345,
        17437
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7428": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17345,
        17437
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "7429": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17345,
        17437
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7430": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17313,
        17339
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x27B5"
    },
    "7433": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        17313,
        17438
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7434": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17313,
        17438
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7435": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17307,
        17438
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "7436": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17307,
        17438
      ],
      "op": "POP",
      "path": "23"
    },
    "7437": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17458,
        17545
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 135,
      "value": "0x1D1D"
    },
    "7440": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17490,
        17493
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7441": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17495,
        17544
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CA9"
    },
    "7444": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17511,
        17513
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7445": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17515,
        17522
      ],
      "op": "DUP14",
      "path": "23"
    },
    "7446": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17524,
        17534
      ],
      "op": "DUP7",
      "path": "23"
    },
    "7447": {
      "offset": [
        2409,
        2411
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7449": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17495,
        17510
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "7452": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        17495,
        17544
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7453": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17458,
        17545
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7454": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17452,
        17545
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "7455": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17452,
        17545
      ],
      "op": "POP",
      "path": "23"
    },
    "7456": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17565,
        17650
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 136,
      "value": "0x1D30"
    },
    "7459": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17595,
        17598
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7460": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17600,
        17649
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CBD"
    },
    "7463": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17616,
        17618
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7464": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17620,
        17627
      ],
      "op": "DUP14",
      "path": "23"
    },
    "7465": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17629,
        17639
      ],
      "op": "DUP7",
      "path": "23"
    },
    "7466": {
      "offset": [
        2452,
        2454
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x41"
    },
    "7468": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17600,
        17615
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "7471": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        17600,
        17649
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7472": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17565,
        17650
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7473": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17559,
        17650
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "7474": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17559,
        17650
      ],
      "op": "POP",
      "path": "23"
    },
    "7475": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17670,
        17757
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 137,
      "value": "0x1D43"
    },
    "7478": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17702,
        17705
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7479": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17707,
        17756
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CD1"
    },
    "7482": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17723,
        17725
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7483": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17727,
        17734
      ],
      "op": "DUP14",
      "path": "23"
    },
    "7484": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17736,
        17746
      ],
      "op": "DUP7",
      "path": "23"
    },
    "7485": {
      "offset": [
        2495,
        2497
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x42"
    },
    "7487": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17707,
        17722
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2483"
    },
    "7490": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "i",
      "offset": [
        17707,
        17756
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7491": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17670,
        17757
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7492": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17664,
        17757
      ],
      "op": "SWAP11",
      "path": "23"
    },
    "7493": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17664,
        17757
      ],
      "op": "POP",
      "path": "23"
    },
    "7494": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        16446,
        17768
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7495": {
      "op": "POP"
    },
    "7496": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17784,
        17787
      ],
      "op": "SWAP9",
      "path": "23",
      "statement": 138
    },
    "7497": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        17784,
        17787
      ],
      "op": "SWAP14",
      "path": "23"
    },
    "7498": {
      "fn": "LibHatching.predictBabyDNA",
      "offset": [
        7944,
        17794
      ],
      "op": "SWAP13",
      "path": "23"
    },
    "7499": {
      "op": "POP"
    },
    "7500": {
      "op": "POP"
    },
    "7501": {
      "op": "POP"
    },
    "7502": {
      "op": "POP"
    },
    "7503": {
      "op": "POP"
    },
    "7504": {
      "op": "POP"
    },
    "7505": {
      "op": "POP"
    },
    "7506": {
      "op": "POP"
    },
    "7507": {
      "op": "POP"
    },
    "7508": {
      "op": "POP"
    },
    "7509": {
      "op": "POP"
    },
    "7510": {
      "op": "POP"
    },
    "7511": {
      "op": "POP"
    },
    "7512": {
      "fn": "LibHatching.predictBabyDNA",
      "jump": "o",
      "offset": [
        7944,
        17794
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7513": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        14849,
        15867
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7514": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        14999,
        15003
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7522": {
      "op": "SHL"
    },
    "7523": {
      "op": "SUB"
    },
    "7524": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15019,
        15032
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7525": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15019,
        15032
      ],
      "op": "AND",
      "path": "18"
    },
    "7526": {
      "fn": "Address.isContract",
      "offset": [
        1034,
        1054
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "7527": {
      "fn": "Address.isContract",
      "offset": [
        1080,
        1088
      ],
      "op": "ISZERO",
      "path": "6",
      "statement": 139
    },
    "7528": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15015,
        15861
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E5B"
    },
    "7531": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15015,
        15861
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7532": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7534": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7535": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "7540": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7542": {
      "op": "SHL"
    },
    "7543": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7544": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7551": {
      "op": "SHL"
    },
    "7552": {
      "op": "SUB"
    },
    "7553": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15106
      ],
      "op": "DUP6",
      "path": "18"
    },
    "7554": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15106
      ],
      "op": "AND",
      "path": "18"
    },
    "7555": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15106
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7556": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15106
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x150B7A02"
    },
    "7561": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15106
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7562": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1D9D"
    },
    "7565": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7566": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "7567": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7568": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15162,
        15166
      ],
      "op": "DUP10",
      "path": "18"
    },
    "7569": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15162,
        15166
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7570": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15188,
        15195
      ],
      "op": "DUP9",
      "path": "18"
    },
    "7571": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15188,
        15195
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7572": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15217,
        15222
      ],
      "op": "DUP9",
      "path": "18"
    },
    "7573": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15217,
        15222
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7574": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7576": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "ADD",
      "path": "18"
    },
    "7577": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D50"
    },
    "7580": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "jump": "i",
      "offset": [
        15070,
        15240
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7581": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7582": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7584": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7586": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7587": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7588": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "DUP4",
      "path": "18"
    },
    "7589": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "SUB",
      "path": "18"
    },
    "7590": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7591": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7593": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "DUP8",
      "path": "18"
    },
    "7594": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7595": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "7596": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7597": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7598": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7599": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1DB7"
    },
    "7602": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7603": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7605": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7606": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "REVERT",
      "path": "18"
    },
    "7607": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7608": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "POP",
      "path": "18"
    },
    "7609": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "GAS",
      "path": "18"
    },
    "7610": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "CALL",
      "path": "18"
    },
    "7611": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7612": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "POP",
      "path": "18"
    },
    "7613": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "POP",
      "path": "18"
    },
    "7614": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "POP",
      "path": "18"
    },
    "7615": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7616": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7617": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1DE7"
    },
    "7620": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7621": {
      "op": "POP"
    },
    "7622": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7624": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7625": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7626": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7628": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7629": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7630": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7631": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "ADD",
      "path": "18"
    },
    "7632": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7634": {
      "op": "NOT"
    },
    "7635": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "AND",
      "path": "18"
    },
    "7636": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7637": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "ADD",
      "path": "18"
    },
    "7638": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7639": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "7640": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7641": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1DE4"
    },
    "7644": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7645": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7646": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "ADD",
      "path": "18"
    },
    "7647": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7648": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2D8D"
    },
    "7651": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "jump": "i",
      "offset": [
        15070,
        15240
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7652": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7653": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "7655": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15070,
        15240
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7656": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E41"
    },
    "7659": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7660": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7661": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7662": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7663": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "7664": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E15"
    },
    "7667": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7668": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7670": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7671": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7672": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "POP",
      "path": "18"
    },
    "7673": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "7675": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "NOT",
      "path": "18"
    },
    "7676": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3F"
    },
    "7678": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7679": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "ADD",
      "path": "18"
    },
    "7680": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "AND",
      "path": "18"
    },
    "7681": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7682": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "ADD",
      "path": "18"
    },
    "7683": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "7685": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7686": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7687": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "DUP3",
      "path": "18"
    },
    "7688": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7689": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "7690": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "7692": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7694": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "DUP5",
      "path": "18"
    },
    "7695": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "ADD",
      "path": "18"
    },
    "7696": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "7697": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E1A"
    },
    "7700": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7701": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7702": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "7704": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "7705": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "POP",
      "path": "18"
    },
    "7706": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7707": {
      "op": "POP"
    },
    "7708": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15419,
        15432
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7709": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15419,
        15432
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7710": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15415,
        15795
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1E39"
    },
    "7713": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15415,
        15795
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "7714": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15461,
        15567
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 140,
      "value": "0x40"
    },
    "7716": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15461,
        15567
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7717": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7723": {
      "op": "SHL"
    },
    "7724": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15461,
        15567
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7725": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15461,
        15567
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "7726": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15461,
        15567
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "7728": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15461,
        15567
      ],
      "op": "ADD",
      "path": "18"
    },
    "7729": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15461,
        15567
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x469"
    },
    "7732": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15461,
        15567
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7733": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15461,
        15567
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2CFE"
    },
    "7736": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "jump": "i",
      "offset": [
        15461,
        15567
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7737": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15415,
        15795
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7738": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15747,
        15753
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7739": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15741,
        15754
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "7740": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15732,
        15738
      ],
      "op": "DUP2",
      "path": "18"
    },
    "7741": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15728,
        15730
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "7743": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15724,
        15739
      ],
      "op": "ADD",
      "path": "18"
    },
    "7744": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15717,
        15755
      ],
      "op": "REVERT",
      "path": "18"
    },
    "7745": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15050,
        15809
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7750": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7752": {
      "op": "SHL"
    },
    "7753": {
      "op": "SUB"
    },
    "7754": {
      "op": "NOT"
    },
    "7755": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15302,
        15353
      ],
      "op": "AND",
      "path": "18",
      "statement": 141
    },
    "7756": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "7761": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7763": {
      "op": "SHL"
    },
    "7764": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15302,
        15353
      ],
      "op": "EQ",
      "path": "18"
    },
    "7765": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15302,
        15353
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "7766": {
      "op": "POP"
    },
    "7767": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15295,
        15353
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xC63"
    },
    "7770": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15295,
        15353
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7771": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15015,
        15861
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "7772": {
      "op": "POP"
    },
    "7773": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        15846,
        15850
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 142,
      "value": "0x1"
    },
    "7775": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        14849,
        15867
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "7776": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        14849,
        15867
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "7777": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        14849,
        15867
      ],
      "op": "POP",
      "path": "18"
    },
    "7778": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        14849,
        15867
      ],
      "op": "POP",
      "path": "18"
    },
    "7779": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        14849,
        15867
      ],
      "op": "POP",
      "path": "18"
    },
    "7780": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "offset": [
        14849,
        15867
      ],
      "op": "POP",
      "path": "18"
    },
    "7781": {
      "fn": "ERC721WithDiamondStorage._checkOnERC721Received",
      "jump": "o",
      "offset": [
        14849,
        15867
      ],
      "op": "JUMP",
      "path": "18"
    },
    "7782": {
      "fn": "LibUnicornDNA._targetDNAVersion",
      "offset": [
        9700,
        9829
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7783": {
      "fn": "LibUnicornDNA._targetDNAVersion",
      "offset": [
        9752,
        9759
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7785": {
      "fn": "LibUnicornDNA._targetDNAVersion",
      "offset": [
        9778,
        9805
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 143,
      "value": "0x1E70"
    },
    "7788": {
      "fn": "LibUnicornDNA._targetDNAVersion",
      "offset": [
        9778,
        9803
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAD1"
    },
    "7791": {
      "fn": "LibUnicornDNA._targetDNAVersion",
      "jump": "i",
      "offset": [
        9778,
        9805
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7792": {
      "fn": "LibUnicornDNA._targetDNAVersion",
      "offset": [
        9778,
        9805
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7793": {
      "fn": "LibUnicornDNA._targetDNAVersion",
      "offset": [
        9778,
        9822
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x41"
    },
    "7795": {
      "fn": "LibUnicornDNA._targetDNAVersion",
      "offset": [
        9778,
        9822
      ],
      "op": "ADD",
      "path": "27"
    },
    "7796": {
      "fn": "LibUnicornDNA._targetDNAVersion",
      "offset": [
        9778,
        9822
      ],
      "op": "SLOAD",
      "path": "27"
    },
    "7797": {
      "fn": "LibUnicornDNA._targetDNAVersion",
      "offset": [
        9771,
        9822
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7798": {
      "fn": "LibUnicornDNA._targetDNAVersion",
      "offset": [
        9771,
        9822
      ],
      "op": "POP",
      "path": "27"
    },
    "7799": {
      "fn": "LibUnicornDNA._targetDNAVersion",
      "offset": [
        9700,
        9829
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "7800": {
      "fn": "LibUnicornDNA._targetDNAVersion",
      "jump": "o",
      "offset": [
        9700,
        9829
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7801": {
      "fn": "LibUnicornDNA._setVersion",
      "offset": [
        9835,
        10015
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7802": {
      "fn": "LibUnicornDNA._setVersion",
      "offset": [
        9933,
        9940
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7804": {
      "fn": "LibUnicornDNA._setVersion",
      "offset": [
        9963,
        10008
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 144,
      "value": "0x1E87"
    },
    "7807": {
      "fn": "LibUnicornDNA._setVersion",
      "offset": [
        9977,
        9981
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7808": {
      "fn": "LibUnicornDNA._setVersion",
      "offset": [
        9983,
        9989
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7809": {
      "offset": [
        964,
        968
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xFF"
    },
    "7811": {
      "fn": "LibUnicornDNA._setVersion",
      "offset": [
        9963,
        9976
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "7814": {
      "fn": "LibUnicornDNA._setVersion",
      "jump": "i",
      "offset": [
        9963,
        10008
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7815": {
      "fn": "LibUnicornDNA._setVersion",
      "offset": [
        9963,
        10008
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7816": {
      "fn": "LibUnicornDNA._setVersion",
      "offset": [
        9956,
        10008
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "7817": {
      "fn": "LibUnicornDNA._setVersion",
      "offset": [
        9835,
        10015
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "7818": {
      "op": "POP"
    },
    "7819": {
      "op": "POP"
    },
    "7820": {
      "op": "POP"
    },
    "7821": {
      "fn": "LibUnicornDNA._setVersion",
      "jump": "o",
      "offset": [
        9835,
        10015
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7822": {
      "fn": "LibUnicornDNA._setOrigin",
      "offset": [
        10360,
        10531
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7823": {
      "fn": "LibUnicornDNA._setOrigin",
      "offset": [
        10452,
        10459
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7825": {
      "fn": "LibUnicornDNA._setOrigin",
      "offset": [
        10482,
        10524
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 145,
      "value": "0x1E87"
    },
    "7828": {
      "fn": "LibUnicornDNA._setOrigin",
      "offset": [
        10496,
        10500
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7829": {
      "fn": "LibUnicornDNA._setOrigin",
      "offset": [
        10502,
        10506
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7830": {
      "offset": [
        1059,
        1064
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x100"
    },
    "7833": {
      "fn": "LibUnicornDNA._setOrigin",
      "offset": [
        10482,
        10495
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2849"
    },
    "7836": {
      "fn": "LibUnicornDNA._setOrigin",
      "jump": "i",
      "offset": [
        10482,
        10524
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7837": {
      "fn": "LibUnicornDNA._setGameLocked",
      "offset": [
        10671,
        10846
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7838": {
      "fn": "LibUnicornDNA._setGameLocked",
      "offset": [
        10767,
        10774
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7840": {
      "fn": "LibUnicornDNA._setGameLocked",
      "offset": [
        10797,
        10839
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 146,
      "value": "0x1E87"
    },
    "7843": {
      "fn": "LibUnicornDNA._setGameLocked",
      "offset": [
        10811,
        10815
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7844": {
      "fn": "LibUnicornDNA._setGameLocked",
      "offset": [
        10817,
        10821
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7845": {
      "offset": [
        1156,
        1161
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x200"
    },
    "7848": {
      "fn": "LibUnicornDNA._setGameLocked",
      "offset": [
        10797,
        10810
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2849"
    },
    "7851": {
      "fn": "LibUnicornDNA._setGameLocked",
      "jump": "i",
      "offset": [
        10797,
        10839
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7852": {
      "fn": "LibUnicornDNA._setLimitedEdition",
      "offset": [
        10990,
        11177
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7853": {
      "fn": "LibUnicornDNA._setLimitedEdition",
      "offset": [
        11090,
        11097
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7855": {
      "fn": "LibUnicornDNA._setLimitedEdition",
      "offset": [
        11120,
        11170
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 147,
      "value": "0x1E87"
    },
    "7858": {
      "fn": "LibUnicornDNA._setLimitedEdition",
      "offset": [
        11134,
        11138
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7859": {
      "fn": "LibUnicornDNA._setLimitedEdition",
      "offset": [
        11140,
        11144
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7860": {
      "offset": [
        1271,
        1276
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x400"
    },
    "7863": {
      "fn": "LibUnicornDNA._setLimitedEdition",
      "offset": [
        11120,
        11133
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2849"
    },
    "7866": {
      "fn": "LibUnicornDNA._setLimitedEdition",
      "jump": "i",
      "offset": [
        11120,
        11170
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7867": {
      "fn": "LibUnicornDNA._setLifecycleStage",
      "offset": [
        11333,
        11523
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7868": {
      "fn": "LibUnicornDNA._setLifecycleStage",
      "offset": [
        11436,
        11443
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7870": {
      "fn": "LibUnicornDNA._setLifecycleStage",
      "offset": [
        11466,
        11516
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 148,
      "value": "0x1E87"
    },
    "7873": {
      "fn": "LibUnicornDNA._setLifecycleStage",
      "offset": [
        11480,
        11484
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7874": {
      "fn": "LibUnicornDNA._setLifecycleStage",
      "offset": [
        11486,
        11490
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7875": {
      "offset": [
        1392,
        1398
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1800"
    },
    "7878": {
      "fn": "LibUnicornDNA._setLifecycleStage",
      "offset": [
        11466,
        11479
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "7881": {
      "fn": "LibUnicornDNA._setLifecycleStage",
      "jump": "i",
      "offset": [
        11466,
        11516
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7882": {
      "fn": "LibUnicornDNA._setBreedingPoints",
      "offset": [
        11678,
        11868
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7883": {
      "fn": "LibUnicornDNA._setBreedingPoints",
      "offset": [
        11781,
        11788
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7885": {
      "fn": "LibUnicornDNA._setBreedingPoints",
      "offset": [
        11811,
        11861
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 149,
      "value": "0x1E87"
    },
    "7888": {
      "fn": "LibUnicornDNA._setBreedingPoints",
      "offset": [
        11825,
        11829
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7889": {
      "fn": "LibUnicornDNA._setBreedingPoints",
      "offset": [
        11831,
        11835
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7890": {
      "offset": [
        1518,
        1525
      ],
      "op": "PUSH3",
      "path": "27",
      "value": "0x1E000"
    },
    "7894": {
      "fn": "LibUnicornDNA._setBreedingPoints",
      "offset": [
        11811,
        11824
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "7897": {
      "fn": "LibUnicornDNA._setBreedingPoints",
      "jump": "i",
      "offset": [
        11811,
        11861
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7898": {
      "fn": "LibUnicornDNA._setClass",
      "offset": [
        12023,
        12202
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7899": {
      "fn": "LibUnicornDNA._setClass",
      "offset": [
        12115,
        12122
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7901": {
      "fn": "LibUnicornDNA._setClass",
      "offset": [
        12145,
        12195
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 150,
      "value": "0x1E87"
    },
    "7904": {
      "fn": "LibUnicornDNA._setClass",
      "offset": [
        12159,
        12163
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7905": {
      "fn": "LibUnicornDNA._setClass",
      "offset": [
        12173,
        12177
      ],
      "op": "DUP4",
      "path": "27"
    },
    "7906": {
      "fn": "LibUnicornDNA._setClass",
      "offset": [
        12165,
        12178
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0xFF"
    },
    "7908": {
      "fn": "LibUnicornDNA._setClass",
      "offset": [
        12165,
        12178
      ],
      "op": "AND",
      "path": "27"
    },
    "7909": {
      "offset": [
        1631,
        1639
      ],
      "op": "PUSH3",
      "path": "27",
      "value": "0x1E0000"
    },
    "7913": {
      "fn": "LibUnicornDNA._setClass",
      "offset": [
        12145,
        12158
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "7916": {
      "fn": "LibUnicornDNA._setClass",
      "jump": "i",
      "offset": [
        12145,
        12195
      ],
      "op": "JUMP",
      "path": "27"
    },
    "7917": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9237,
        9581
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7918": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9320,
        9327
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "7920": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9358,
        9359
      ],
      "op": "DUP1",
      "path": "27",
      "statement": 151
    },
    "7921": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9351,
        9355
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7922": {
      "branch": 310,
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9351,
        9359
      ],
      "op": "GT",
      "path": "27"
    },
    "7923": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9343,
        9395
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1F3E"
    },
    "7926": {
      "branch": 310,
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9343,
        9395
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "7927": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9343,
        9395
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "7929": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9343,
        9395
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "7930": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7934": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7936": {
      "op": "SHL"
    },
    "7937": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9343,
        9395
      ],
      "op": "DUP2",
      "path": "27"
    },
    "7938": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9343,
        9395
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "7939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7941": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9343,
        9395
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x4"
    },
    "7943": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9343,
        9395
      ],
      "op": "DUP3",
      "path": "27"
    },
    "7944": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9343,
        9395
      ],
      "op": "ADD",
      "path": "27"
    },
    "7945": {
      "op": "MSTORE"
    },
    "7946": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7948": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7950": {
      "op": "DUP3"
    },
    "7951": {
      "op": "ADD"
    },
    "7952": {
      "op": "MSTORE"
    },
    "7953": {
      "op": "PUSH32",
      "value": "0x4C6962556E69636F726E444E413A2063616E6E6F7420736574203020444E4100"
    },
    "7986": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7988": {
      "op": "DUP3"
    },
    "7989": {
      "op": "ADD"
    },
    "7990": {
      "op": "MSTORE"
    },
    "7991": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7993": {
      "op": "ADD"
    },
    "7994": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9343,
        9395
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x469"
    },
    "7997": {
      "op": "JUMP"
    },
    "7998": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9343,
        9395
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "7999": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9405,
        9441
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8001": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9444,
        9471
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1F48"
    },
    "8004": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9444,
        9469
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAD1"
    },
    "8007": {
      "fn": "LibUnicornDNA._setDNA",
      "jump": "i",
      "offset": [
        9444,
        9471
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8008": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9444,
        9471
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8009": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9505
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 152,
      "value": "0x0"
    },
    "8011": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9505
      ],
      "op": "DUP6",
      "path": "27"
    },
    "8012": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9505
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8013": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9505
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8014": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9495
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x18"
    },
    "8016": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9495
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8017": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9495
      ],
      "op": "ADD",
      "path": "27"
    },
    "8018": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9505
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x20"
    },
    "8020": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9505
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8021": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9505
      ],
      "op": "DUP2",
      "path": "27"
    },
    "8022": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9505
      ],
      "op": "MSTORE",
      "path": "27"
    },
    "8023": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9505
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8025": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9505
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "8026": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9505
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8027": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9505
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8028": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9505
      ],
      "op": "KECCAK256",
      "path": "27"
    },
    "8029": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9512
      ],
      "op": "DUP7",
      "path": "27"
    },
    "8030": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9512
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8031": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9512
      ],
      "op": "SSTORE",
      "path": "27"
    },
    "8032": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9527,
        9553
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 153
    },
    "8033": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9527,
        9553
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8034": {
      "op": "DUP8"
    },
    "8035": {
      "op": "DUP2"
    },
    "8036": {
      "op": "MSTORE"
    },
    "8037": {
      "op": "SWAP1"
    },
    "8038": {
      "op": "DUP2"
    },
    "8039": {
      "op": "ADD"
    },
    "8040": {
      "op": "DUP7"
    },
    "8041": {
      "op": "SWAP1"
    },
    "8042": {
      "op": "MSTORE"
    },
    "8043": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9495
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "8044": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9481,
        9495
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "8045": {
      "op": "POP"
    },
    "8046": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9527,
        9553
      ],
      "op": "PUSH32",
      "path": "27",
      "value": "0x9224D149FACB2EC112BF239305994586C3A09A1776770EDCAF18F1EC3A4596B1"
    },
    "8079": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9527,
        9553
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "8080": {
      "op": "ADD"
    },
    "8081": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9527,
        9553
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x40"
    },
    "8083": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9527,
        9553
      ],
      "op": "MLOAD",
      "path": "27"
    },
    "8084": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9527,
        9553
      ],
      "op": "DUP1",
      "path": "27"
    },
    "8085": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9527,
        9553
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "8086": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9527,
        9553
      ],
      "op": "SUB",
      "path": "27"
    },
    "8087": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9527,
        9553
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "8088": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9527,
        9553
      ],
      "op": "LOG1",
      "path": "27"
    },
    "8089": {
      "op": "POP"
    },
    "8090": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9570,
        9574
      ],
      "op": "SWAP1",
      "path": "27",
      "statement": 154
    },
    "8091": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9570,
        9574
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "8092": {
      "fn": "LibUnicornDNA._setDNA",
      "offset": [
        9237,
        9581
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "8093": {
      "op": "POP"
    },
    "8094": {
      "op": "POP"
    },
    "8095": {
      "fn": "LibUnicornDNA._setDNA",
      "jump": "o",
      "offset": [
        9237,
        9581
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8096": {
      "fn": "LibUnicornDNA._getGameLocked",
      "offset": [
        10852,
        10984
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8097": {
      "fn": "LibUnicornDNA._getGameLocked",
      "offset": [
        10913,
        10917
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8099": {
      "offset": [
        1156,
        1161
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x200"
    },
    "8102": {
      "fn": "LibBin.extractBool",
      "offset": [
        2285,
        2302
      ],
      "op": "DUP3",
      "path": "21",
      "statement": 155
    },
    "8103": {
      "fn": "LibBin.extractBool",
      "offset": [
        2285,
        2302
      ],
      "op": "AND",
      "path": "21"
    },
    "8104": {
      "fn": "LibBin.extractBool",
      "offset": [
        2284,
        2308
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "8105": {
      "fn": "LibBin.extractBool",
      "offset": [
        2284,
        2308
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "8106": {
      "fn": "LibUnicornDNA._getGameLocked",
      "offset": [
        10936,
        10977
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 156,
      "value": "0x360"
    },
    "8109": {
      "fn": "LibBin.extractBool",
      "offset": [
        2155,
        2315
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8110": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20769,
        21034
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8111": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20845,
        20881
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8113": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20884,
        20911
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1FB8"
    },
    "8116": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20884,
        20909
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "8119": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "jump": "i",
      "offset": [
        20884,
        20911
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8120": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20884,
        20911
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8121": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20958,
        20977
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 157,
      "value": "0xA"
    },
    "8123": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20958,
        20977
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8124": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20958,
        20977
      ],
      "op": "ADD",
      "path": "18"
    },
    "8125": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20958,
        20984
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8126": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20958,
        20984
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8127": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20955
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8129": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20955
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8130": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20955
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8131": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20955
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8132": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20946
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "8134": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20946
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8135": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20946
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "8136": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20946
      ],
      "op": "ADD",
      "path": "18"
    },
    "8137": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20955
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8139": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20955
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8140": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20955
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8141": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20955
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8142": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20955
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8144": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20955
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8145": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20955
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8146": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20984
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8147": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20984
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8148": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20922,
        20984
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8149": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20994,
        21027
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 158,
      "value": "0x1"
    },
    "8151": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20994,
        21027
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8152": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20994,
        21027
      ],
      "op": "ADD",
      "path": "18"
    },
    "8153": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20994,
        21027
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8154": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20994,
        21027
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8155": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20994,
        21027
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8156": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20994,
        21027
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8157": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20994,
        21027
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8158": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20994,
        21027
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8159": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20994,
        21027
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8160": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20994,
        21027
      ],
      "op": "ADD",
      "path": "18"
    },
    "8161": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20994,
        21027
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8162": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20994,
        21027
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8163": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20994,
        21027
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8164": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "offset": [
        20994,
        21027
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8165": {
      "op": "POP"
    },
    "8166": {
      "fn": "ERC721WithDiamondStorage._addTokenToAllTokensEnumeration",
      "jump": "o",
      "offset": [
        20769,
        21034
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8167": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19469,
        20574
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8168": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19572,
        19608
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8170": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19611,
        19638
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1FF1"
    },
    "8173": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19611,
        19636
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "8176": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        19611,
        19638
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8177": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19611,
        19638
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8178": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19572,
        19638
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8179": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19572,
        19638
      ],
      "op": "POP",
      "path": "18"
    },
    "8180": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19819,
        19841
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8182": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19862,
        19863
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "8184": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19844,
        19859
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2000"
    },
    "8187": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19854,
        19858
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8188": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19844,
        19853
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x824"
    },
    "8191": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        19844,
        19859
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8192": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19844,
        19859
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8193": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19844,
        19863
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x200A"
    },
    "8196": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19844,
        19863
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8197": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19844,
        19863
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8198": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19844,
        19863
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2CCF"
    },
    "8201": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        19844,
        19863
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8202": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19844,
        19863
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8203": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19873,
        19891
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8205": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19894,
        19929
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8206": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19894,
        19929
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8207": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19894,
        19929
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8208": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19894,
        19920
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "8210": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19894,
        19920
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8211": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19894,
        19920
      ],
      "op": "ADD",
      "path": "18"
    },
    "8212": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19894,
        19929
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8214": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19894,
        19929
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8215": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19894,
        19929
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8217": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19894,
        19929
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8218": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19894,
        19929
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8219": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19894,
        19929
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8220": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19819,
        19863
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8221": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        19819,
        19863
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8222": {
      "op": "POP"
    },
    "8223": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20033,
        20061
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8224": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20033,
        20061
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8225": {
      "branch": 261,
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20033,
        20061
      ],
      "op": "EQ",
      "path": "18"
    },
    "8226": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20029,
        20379
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2063"
    },
    "8229": {
      "branch": 261,
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20029,
        20379
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8236": {
      "op": "SHL"
    },
    "8237": {
      "op": "SUB"
    },
    "8238": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20126
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8239": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20126
      ],
      "op": "AND",
      "path": "18"
    },
    "8240": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20077,
        20096
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8242": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20126
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8243": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20126
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8244": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20126
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8245": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20120
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "8247": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20120
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8248": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20120
      ],
      "op": "ADD",
      "path": "18"
    },
    "8249": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20126
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8251": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20126
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8252": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20126
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8253": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20126
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8254": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20126
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8256": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20126
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8257": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20126
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8258": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20126
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8259": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20142
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8260": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20142
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8261": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20142
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8262": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20142
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8263": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20142
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8264": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20142
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8265": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20142
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8266": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20142
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8267": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20099,
        20142
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8268": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20157,
        20196
      ],
      "op": "DUP5",
      "path": "18",
      "statement": 159
    },
    "8269": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20157,
        20196
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8270": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20157,
        20196
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8271": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20157,
        20196
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8272": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20157,
        20196
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8273": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20157,
        20196
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8274": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20157,
        20210
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8275": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20157,
        20210
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8276": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20157,
        20210
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8277": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20282,
        20321
      ],
      "op": "DUP4",
      "path": "18",
      "statement": 160
    },
    "8278": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20282,
        20321
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8279": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20282,
        20308
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "8281": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20282,
        20308
      ],
      "op": "DUP7",
      "path": "18"
    },
    "8282": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20282,
        20308
      ],
      "op": "ADD",
      "path": "18"
    },
    "8283": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20282,
        20321
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8284": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20282,
        20321
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8285": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20282,
        20321
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8286": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20282,
        20321
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8287": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20282,
        20321
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8288": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20282,
        20334
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8289": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20282,
        20334
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8290": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20282,
        20334
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8291": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20029,
        20379
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8292": {
      "op": "POP"
    },
    "8293": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20472,
        20507
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 161,
      "value": "0x0"
    },
    "8295": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20472,
        20507
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8296": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20472,
        20507
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8297": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20472,
        20507
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8298": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20472,
        20498
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "8300": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20472,
        20498
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8301": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20472,
        20498
      ],
      "op": "ADD",
      "path": "18"
    },
    "8302": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20472,
        20507
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8304": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20472,
        20507
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8305": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20472,
        20507
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8306": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20472,
        20507
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8307": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20472,
        20507
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8309": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20472,
        20507
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8310": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20472,
        20507
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8311": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20472,
        20507
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8312": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20465,
        20507
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8313": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20465,
        20507
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8314": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20465,
        20507
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8321": {
      "op": "SHL"
    },
    "8322": {
      "op": "SUB"
    },
    "8323": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20551
      ],
      "op": "SWAP1",
      "path": "18",
      "statement": 162
    },
    "8324": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20551
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "8325": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20551
      ],
      "op": "AND",
      "path": "18"
    },
    "8326": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20551
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8327": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20551
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8328": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20545
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "8330": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20545
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8331": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20545
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8332": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20545
      ],
      "op": "ADD",
      "path": "18"
    },
    "8333": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20551
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8334": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20551
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8335": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20551
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8336": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20551
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8337": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20551
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8338": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20567
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8339": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20567
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8340": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20567
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8341": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20567
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8342": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20567
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8343": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20567
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8344": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20567
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8345": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20524,
        20567
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8346": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "offset": [
        20517,
        20567
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8347": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        19469,
        20574
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8348": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21322,
        22523
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8349": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21403,
        21439
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8351": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21442,
        21469
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20A6"
    },
    "8354": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21442,
        21467
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "8357": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        21442,
        21469
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8358": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21442,
        21469
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8359": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21673,
        21692
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "8361": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21673,
        21692
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8362": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21673,
        21692
      ],
      "op": "ADD",
      "path": "18"
    },
    "8363": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21673,
        21699
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8364": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21403,
        21469
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8365": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21403,
        21469
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8366": {
      "op": "POP"
    },
    "8367": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21648,
        21670
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8369": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21648,
        21670
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8370": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21673,
        21703
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20BD"
    },
    "8373": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21673,
        21703
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8374": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21702,
        21703
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "8376": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21702,
        21703
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8377": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21673,
        21703
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2CCF"
    },
    "8380": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        21673,
        21703
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8381": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21673,
        21703
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8382": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21713,
        21731
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8384": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21734,
        21767
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8385": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21734,
        21767
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8386": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21734,
        21767
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8387": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21734,
        21758
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "8389": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21734,
        21758
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8390": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21734,
        21758
      ],
      "op": "ADD",
      "path": "18"
    },
    "8391": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21734,
        21767
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8393": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21734,
        21767
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8394": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21734,
        21767
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8396": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21734,
        21767
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8397": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21734,
        21767
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8398": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21734,
        21767
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8399": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22130
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "8401": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22130
      ],
      "op": "DUP6",
      "path": "18"
    },
    "8402": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22130
      ],
      "op": "ADD",
      "path": "18"
    },
    "8403": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8404": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8405": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21648,
        21703
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "8406": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21648,
        21703
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "8407": {
      "op": "POP"
    },
    "8408": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21734,
        21767
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8409": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21734,
        21767
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8410": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21648,
        21703
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8411": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21648,
        21703
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8412": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8413": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "LT",
      "path": "18"
    },
    "8414": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20E9"
    },
    "8417": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8418": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x20E9"
    },
    "8421": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C88"
    },
    "8424": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        22111,
        22146
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8425": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8426": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8427": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8429": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8430": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8432": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8434": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8435": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "ADD",
      "path": "18"
    },
    "8436": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22111,
        22146
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8437": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22089,
        22146
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8438": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22089,
        22146
      ],
      "op": "POP",
      "path": "18"
    },
    "8439": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22191,
        22202
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 163
    },
    "8440": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22159
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8441": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22176
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "8443": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22176
      ],
      "op": "ADD",
      "path": "18"
    },
    "8444": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22177,
        22187
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8445": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8446": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8447": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8448": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "LT",
      "path": "18"
    },
    "8449": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x210C"
    },
    "8452": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8453": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x210C"
    },
    "8456": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2C88"
    },
    "8459": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        22157,
        22188
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8460": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8461": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8463": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8464": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8465": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8466": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8468": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8469": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8470": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8471": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8472": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8473": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22188
      ],
      "op": "ADD",
      "path": "18"
    },
    "8474": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22202
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8475": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22202
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8476": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22202
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8477": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22157,
        22202
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8478": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22270,
        22307
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 164
    },
    "8479": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22270,
        22307
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8480": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22270,
        22307
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8481": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22270,
        22294
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xB"
    },
    "8483": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22270,
        22294
      ],
      "op": "DUP7",
      "path": "18"
    },
    "8484": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22270,
        22294
      ],
      "op": "ADD",
      "path": "18"
    },
    "8485": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22270,
        22307
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8486": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22270,
        22307
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "8487": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22270,
        22307
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8488": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22270,
        22307
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8490": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22270,
        22307
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8491": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22270,
        22307
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8492": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22270,
        22307
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8493": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22270,
        22320
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8494": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22270,
        22320
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8495": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22270,
        22320
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8496": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22448,
        22481
      ],
      "op": "DUP7",
      "path": "18",
      "statement": 165
    },
    "8497": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22448,
        22481
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8498": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22448,
        22481
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8499": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22448,
        22481
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8500": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22448,
        22481
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8501": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22441,
        22481
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8502": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22510
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 166,
      "value": "0xA"
    },
    "8504": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22510
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8505": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22510
      ],
      "op": "ADD",
      "path": "18"
    },
    "8506": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8507": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "8508": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8509": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2148"
    },
    "8512": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "8513": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2148"
    },
    "8516": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x2DAA"
    },
    "8519": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        22491,
        22516
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8520": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8521": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "8523": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8524": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "SUB",
      "path": "18"
    },
    "8525": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8526": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8527": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8528": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8530": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8531": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8533": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8535": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8536": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "ADD",
      "path": "18"
    },
    "8537": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8539": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8540": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8541": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8542": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        22491,
        22516
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8543": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21393,
        22523
      ],
      "op": "POP",
      "path": "18"
    },
    "8544": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21393,
        22523
      ],
      "op": "POP",
      "path": "18"
    },
    "8545": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21393,
        22523
      ],
      "op": "POP",
      "path": "18"
    },
    "8546": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21393,
        22523
      ],
      "op": "POP",
      "path": "18"
    },
    "8547": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "offset": [
        21322,
        22523
      ],
      "op": "POP",
      "path": "18"
    },
    "8548": {
      "fn": "ERC721WithDiamondStorage._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        21322,
        22523
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8549": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18548,
        18852
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8550": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18632,
        18668
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8552": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18671,
        18698
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x216F"
    },
    "8555": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18671,
        18696
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xAD1"
    },
    "8558": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        18671,
        18698
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8559": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18671,
        18698
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8560": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18632,
        18698
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8561": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18632,
        18698
      ],
      "op": "POP",
      "path": "18"
    },
    "8562": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18708,
        18722
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8564": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18725,
        18738
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x217C"
    },
    "8567": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18735,
        18737
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8568": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18725,
        18734
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x824"
    },
    "8571": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        18725,
        18738
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8572": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18725,
        18738
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "8573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8579": {
      "op": "SHL"
    },
    "8580": {
      "op": "SUB"
    },
    "8581": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18773
      ],
      "op": "SWAP1",
      "path": "18",
      "statement": 167
    },
    "8582": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18773
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "8583": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18773
      ],
      "op": "AND",
      "path": "18"
    },
    "8584": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18773
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "8586": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18773
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8587": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18773
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8588": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18773
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8589": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18769
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x8"
    },
    "8591": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18769
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8592": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18769
      ],
      "op": "ADD",
      "path": "18"
    },
    "8593": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18773
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "8595": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18773
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8596": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18773
      ],
      "op": "DUP2",
      "path": "18"
    },
    "8597": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18773
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8598": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18773
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "8600": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18773
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8601": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18773
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8602": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18773
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8603": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18781
      ],
      "op": "DUP8",
      "path": "18"
    },
    "8604": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18781
      ],
      "op": "DUP5",
      "path": "18"
    },
    "8605": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18781
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8606": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18781
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8607": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18781
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8608": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18781
      ],
      "op": "DUP1",
      "path": "18"
    },
    "8609": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18781
      ],
      "op": "DUP4",
      "path": "18"
    },
    "8610": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18781
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8611": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18791
      ],
      "op": "DUP7",
      "path": "18"
    },
    "8612": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18791
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8613": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18748,
        18791
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8614": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18801,
        18836
      ],
      "op": "SWAP5",
      "path": "18",
      "statement": 168
    },
    "8615": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18801,
        18836
      ],
      "op": "DUP3",
      "path": "18"
    },
    "8616": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18801,
        18836
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8617": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18801,
        18827
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x9"
    },
    "8619": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18801,
        18827
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8620": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18801,
        18827
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "8621": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18801,
        18827
      ],
      "op": "ADD",
      "path": "18"
    },
    "8622": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18801,
        18836
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "8623": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18801,
        18836
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "8624": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18801,
        18836
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "8625": {
      "op": "POP"
    },
    "8626": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18801,
        18836
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "8627": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "offset": [
        18801,
        18845
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "8628": {
      "fn": "ERC721WithDiamondStorage._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        18548,
        18852
      ],
      "op": "JUMP",
      "path": "18"
    },
    "8629": {
      "fn": "LibIdempotence._getHatchingRandomnessFulfilled",
      "offset": [
        4613,
        4847
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8630": {
      "fn": "LibIdempotence._getHatchingRandomnessFulfilled",
      "offset": [
        4695,
        4699
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "8632": {
      "fn": "LibIdempotence._getHatchingRandomnessFulfilled",
      "offset": [
        4711,
        4724
      ],
      "op": "DUP1",
      "path": "24"
    },
    "8633": {
      "fn": "LibIdempotence._getHatchingRandomnessFulfilled",
      "offset": [
        4727,
        4757
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x21C1"
    },
    "8636": {
      "fn": "LibIdempotence._getHatchingRandomnessFulfilled",
      "offset": [
        4748,
        4756
      ],
      "op": "DUP4",
      "path": "24"
    },
    "8637": {
      "fn": "LibIdempotence._getHatchingRandomnessFulfilled",
      "offset": [
        4727,
        4747
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2867"
    },
    "8640": {
      "fn": "LibIdempotence._getHatchingRandomnessFulfilled",
      "jump": "i",
      "offset": [
        4727,
        4757
      ],
      "op": "JUMP",
      "path": "24"
    },
    "8641": {
      "fn": "LibIdempotence._getHatchingRandomnessFulfilled",
      "offset": [
        4727,
        4757
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8642": {
      "fn": "LibIdempotence._getHatchingRandomnessFulfilled",
      "offset": [
        4711,
        4757
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8643": {
      "op": "POP"
    },
    "8644": {
      "offset": [
        1249,
        1253
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "8646": {
      "fn": "LibBin.extractBool",
      "offset": [
        2285,
        2302
      ],
      "op": "DUP2",
      "path": "21"
    },
    "8647": {
      "fn": "LibBin.extractBool",
      "offset": [
        2285,
        2302
      ],
      "op": "AND",
      "path": "21"
    },
    "8648": {
      "fn": "LibBin.extractBool",
      "offset": [
        2284,
        2308
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "8649": {
      "fn": "LibBin.extractBool",
      "offset": [
        2284,
        2308
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "8650": {
      "fn": "LibIdempotence._getHatchingRandomnessFulfilled",
      "offset": [
        4774,
        4840
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 169,
      "value": "0x1E87"
    },
    "8653": {
      "fn": "LibBin.extractBool",
      "offset": [
        2155,
        2315
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8654": {
      "fn": "LibIdempotence._getHatchingStarted",
      "offset": [
        4019,
        4228
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8655": {
      "fn": "LibIdempotence._getHatchingStarted",
      "offset": [
        4089,
        4093
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "8657": {
      "fn": "LibIdempotence._getHatchingStarted",
      "offset": [
        4105,
        4118
      ],
      "op": "DUP1",
      "path": "24"
    },
    "8658": {
      "fn": "LibIdempotence._getHatchingStarted",
      "offset": [
        4121,
        4151
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x21DA"
    },
    "8661": {
      "fn": "LibIdempotence._getHatchingStarted",
      "offset": [
        4142,
        4150
      ],
      "op": "DUP4",
      "path": "24"
    },
    "8662": {
      "fn": "LibIdempotence._getHatchingStarted",
      "offset": [
        4121,
        4141
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2867"
    },
    "8665": {
      "fn": "LibIdempotence._getHatchingStarted",
      "jump": "i",
      "offset": [
        4121,
        4151
      ],
      "op": "JUMP",
      "path": "24"
    },
    "8666": {
      "fn": "LibIdempotence._getHatchingStarted",
      "offset": [
        4121,
        4151
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "8667": {
      "fn": "LibIdempotence._getHatchingStarted",
      "offset": [
        4105,
        4151
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "8668": {
      "op": "POP"
    },
    "8669": {
      "offset": [
        1111,
        1115
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "8671": {
      "fn": "LibBin.extractBool",
      "offset": [
        2285,
        2302
      ],
      "op": "DUP2",
      "path": "21"
    },
    "8672": {
      "fn": "LibBin.extractBool",
      "offset": [
        2285,
        2302
      ],
      "op": "AND",
      "path": "21"
    },
    "8673": {
      "fn": "LibBin.extractBool",
      "offset": [
        2284,
        2308
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "8674": {
      "fn": "LibBin.extractBool",
      "offset": [
        2284,
        2308
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "8675": {
      "fn": "LibIdempotence._getHatchingStarted",
      "offset": [
        4168,
        4221
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 170,
      "value": "0x1E87"
    },
    "8678": {
      "fn": "LibBin.extractBool",
      "offset": [
        2155,
        2315
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8679": {
      "fn": "LibUnicornDNA._getCanonicalDNA",
      "offset": [
        9082,
        9231
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8680": {
      "fn": "LibUnicornDNA._getCanonicalDNA",
      "offset": [
        9149,
        9156
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8682": {
      "fn": "LibUnicornDNA._getCanonicalDNA",
      "offset": [
        9175,
        9202
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 171,
      "value": "0xEEE"
    },
    "8685": {
      "fn": "LibUnicornDNA._getCanonicalDNA",
      "offset": [
        9175,
        9200
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xAD1"
    },
    "8688": {
      "fn": "LibUnicornDNA._getCanonicalDNA",
      "jump": "i",
      "offset": [
        9175,
        9202
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8689": {
      "fn": "LibUnicornDNA._getLifecycleStage",
      "offset": [
        11529,
        11672
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8690": {
      "fn": "LibUnicornDNA._getLifecycleStage",
      "offset": [
        11594,
        11601
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8692": {
      "fn": "LibUnicornDNA._getLifecycleStage",
      "offset": [
        11620,
        11665
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 172,
      "value": "0x360"
    },
    "8695": {
      "fn": "LibUnicornDNA._getLifecycleStage",
      "offset": [
        11635,
        11639
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8696": {
      "offset": [
        1392,
        1398
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x1800"
    },
    "8699": {
      "fn": "LibUnicornDNA._getLifecycleStage",
      "offset": [
        11620,
        11634
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "8702": {
      "fn": "LibUnicornDNA._getLifecycleStage",
      "jump": "i",
      "offset": [
        11620,
        11665
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8703": {
      "fn": "LibUnicornDNA._getClass",
      "offset": [
        12208,
        12338
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8704": {
      "fn": "LibUnicornDNA._getClass",
      "offset": [
        12264,
        12269
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8706": {
      "fn": "LibUnicornDNA._getClass",
      "offset": [
        12294,
        12330
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 173,
      "value": "0x360"
    },
    "8709": {
      "fn": "LibUnicornDNA._getClass",
      "offset": [
        12309,
        12313
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8710": {
      "offset": [
        1631,
        1639
      ],
      "op": "PUSH3",
      "path": "27",
      "value": "0x1E0000"
    },
    "8714": {
      "fn": "LibUnicornDNA._getClass",
      "offset": [
        12294,
        12308
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "8717": {
      "fn": "LibUnicornDNA._getClass",
      "jump": "i",
      "offset": [
        12294,
        12330
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8718": {
      "fn": "LibRNG.expand",
      "offset": [
        3124,
        3299
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8719": {
      "fn": "LibRNG.expand",
      "offset": [
        3211,
        3218
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8721": {
      "fn": "LibRNG.expand",
      "offset": [
        3284,
        3292
      ],
      "op": "DUP4",
      "path": "25",
      "statement": 174
    },
    "8722": {
      "fn": "LibRNG.expand",
      "offset": [
        3266,
        3271
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8723": {
      "fn": "LibRNG.expand",
      "offset": [
        3273,
        3278
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8724": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8726": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8727": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8729": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "ADD",
      "path": "25"
    },
    "8730": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x222D"
    },
    "8733": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "8734": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8735": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8736": {
      "op": "SWAP2"
    },
    "8737": {
      "op": "DUP3"
    },
    "8738": {
      "op": "MSTORE"
    },
    "8739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8741": {
      "op": "DUP3"
    },
    "8742": {
      "op": "ADD"
    },
    "8743": {
      "op": "MSTORE"
    },
    "8744": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8746": {
      "op": "ADD"
    },
    "8747": {
      "op": "SWAP1"
    },
    "8748": {
      "op": "JUMP"
    },
    "8749": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "8750": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8752": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8753": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8755": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8756": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "DUP4",
      "path": "25"
    },
    "8757": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "SUB",
      "path": "25"
    },
    "8758": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "SUB",
      "path": "25"
    },
    "8759": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "DUP2",
      "path": "25"
    },
    "8760": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8761": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8762": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "8764": {
      "fn": "LibRNG.expand",
      "offset": [
        3255,
        3279
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "8765": {
      "fn": "LibRNG.expand",
      "offset": [
        3245,
        3280
      ],
      "op": "DUP1",
      "path": "25"
    },
    "8766": {
      "fn": "LibRNG.expand",
      "offset": [
        3245,
        3280
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "8767": {
      "fn": "LibRNG.expand",
      "offset": [
        3245,
        3280
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8768": {
      "fn": "LibRNG.expand",
      "offset": [
        3245,
        3280
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "8770": {
      "fn": "LibRNG.expand",
      "offset": [
        3245,
        3280
      ],
      "op": "ADD",
      "path": "25"
    },
    "8771": {
      "fn": "LibRNG.expand",
      "offset": [
        3245,
        3280
      ],
      "op": "KECCAK256",
      "path": "25"
    },
    "8772": {
      "fn": "LibRNG.expand",
      "offset": [
        3237,
        3281
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "8774": {
      "fn": "LibRNG.expand",
      "offset": [
        3237,
        3281
      ],
      "op": "SHR",
      "path": "25"
    },
    "8775": {
      "fn": "LibRNG.expand",
      "offset": [
        3237,
        3292
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xC63"
    },
    "8778": {
      "fn": "LibRNG.expand",
      "offset": [
        3237,
        3292
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "8779": {
      "fn": "LibRNG.expand",
      "offset": [
        3237,
        3292
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "8780": {
      "fn": "LibRNG.expand",
      "offset": [
        3237,
        3292
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x2DC0"
    },
    "8783": {
      "fn": "LibRNG.expand",
      "jump": "i",
      "offset": [
        3237,
        3292
      ],
      "op": "JUMP",
      "path": "25"
    },
    "8784": {
      "fn": "LibUnicornDNA._getBodyPart",
      "offset": [
        12527,
        12657
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8785": {
      "fn": "LibUnicornDNA._getBodyPart",
      "offset": [
        12586,
        12593
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8787": {
      "fn": "LibUnicornDNA._getBodyPart",
      "offset": [
        12612,
        12650
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 175,
      "value": "0x360"
    },
    "8790": {
      "fn": "LibUnicornDNA._getBodyPart",
      "offset": [
        12627,
        12631
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8791": {
      "offset": [
        1757,
        1767
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x1FE00000"
    },
    "8796": {
      "fn": "LibUnicornDNA._getBodyPart",
      "offset": [
        12612,
        12626
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "8799": {
      "fn": "LibUnicornDNA._getBodyPart",
      "jump": "i",
      "offset": [
        12612,
        12650
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8800": {
      "fn": "LibUnicornDNA._setBodyPart",
      "offset": [
        12344,
        12521
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8801": {
      "fn": "LibUnicornDNA._setBodyPart",
      "offset": [
        12441,
        12448
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8803": {
      "fn": "LibUnicornDNA._setBodyPart",
      "offset": [
        12471,
        12514
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 176,
      "value": "0x1E87"
    },
    "8806": {
      "fn": "LibUnicornDNA._setBodyPart",
      "offset": [
        12485,
        12489
      ],
      "op": "DUP4",
      "path": "27"
    },
    "8807": {
      "fn": "LibUnicornDNA._setBodyPart",
      "offset": [
        12491,
        12495
      ],
      "op": "DUP4",
      "path": "27"
    },
    "8808": {
      "offset": [
        1757,
        1767
      ],
      "op": "PUSH4",
      "path": "27",
      "value": "0x1FE00000"
    },
    "8813": {
      "fn": "LibUnicornDNA._setBodyPart",
      "offset": [
        12471,
        12484
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "8816": {
      "fn": "LibUnicornDNA._setBodyPart",
      "jump": "i",
      "offset": [
        12471,
        12514
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8817": {
      "fn": "LibUnicornDNA._getBodyMajorGene",
      "offset": [
        12857,
        12998
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8818": {
      "fn": "LibUnicornDNA._getBodyMajorGene",
      "offset": [
        12921,
        12928
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8820": {
      "fn": "LibUnicornDNA._getBodyMajorGene",
      "offset": [
        12947,
        12991
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 177,
      "value": "0x360"
    },
    "8823": {
      "fn": "LibUnicornDNA._getBodyMajorGene",
      "offset": [
        12962,
        12966
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8824": {
      "offset": [
        1905,
        1917
      ],
      "op": "PUSH5",
      "path": "27",
      "value": "0x1FE0000000"
    },
    "8830": {
      "fn": "LibUnicornDNA._getBodyMajorGene",
      "offset": [
        12947,
        12961
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "8833": {
      "fn": "LibUnicornDNA._getBodyMajorGene",
      "jump": "i",
      "offset": [
        12947,
        12991
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8834": {
      "fn": "LibUnicornDNA._setBodyMajorGene",
      "offset": [
        12663,
        12851
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8835": {
      "fn": "LibUnicornDNA._setBodyMajorGene",
      "offset": [
        12765,
        12772
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8837": {
      "fn": "LibUnicornDNA._setBodyMajorGene",
      "offset": [
        12795,
        12844
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 178,
      "value": "0x1E87"
    },
    "8840": {
      "fn": "LibUnicornDNA._setBodyMajorGene",
      "offset": [
        12809,
        12813
      ],
      "op": "DUP4",
      "path": "27"
    },
    "8841": {
      "fn": "LibUnicornDNA._setBodyMajorGene",
      "offset": [
        12815,
        12819
      ],
      "op": "DUP4",
      "path": "27"
    },
    "8842": {
      "offset": [
        1905,
        1917
      ],
      "op": "PUSH5",
      "path": "27",
      "value": "0x1FE0000000"
    },
    "8848": {
      "fn": "LibUnicornDNA._setBodyMajorGene",
      "offset": [
        12795,
        12808
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "8851": {
      "fn": "LibUnicornDNA._setBodyMajorGene",
      "jump": "i",
      "offset": [
        12795,
        12844
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8852": {
      "fn": "LibUnicornDNA._getBodyMidGene",
      "offset": [
        13194,
        13331
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8853": {
      "fn": "LibUnicornDNA._getBodyMidGene",
      "offset": [
        13256,
        13263
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8855": {
      "fn": "LibUnicornDNA._getBodyMidGene",
      "offset": [
        13282,
        13324
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 179,
      "value": "0x360"
    },
    "8858": {
      "fn": "LibUnicornDNA._getBodyMidGene",
      "offset": [
        13297,
        13301
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8859": {
      "offset": [
        2059,
        2073
      ],
      "op": "PUSH6",
      "path": "27",
      "value": "0x1FE000000000"
    },
    "8866": {
      "fn": "LibUnicornDNA._getBodyMidGene",
      "offset": [
        13282,
        13296
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "8869": {
      "fn": "LibUnicornDNA._getBodyMidGene",
      "jump": "i",
      "offset": [
        13282,
        13324
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8870": {
      "fn": "LibUnicornDNA._setBodyMidGene",
      "offset": [
        13004,
        13188
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8871": {
      "fn": "LibUnicornDNA._setBodyMidGene",
      "offset": [
        13104,
        13111
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8873": {
      "fn": "LibUnicornDNA._setBodyMidGene",
      "offset": [
        13134,
        13181
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 180,
      "value": "0x1E87"
    },
    "8876": {
      "fn": "LibUnicornDNA._setBodyMidGene",
      "offset": [
        13148,
        13152
      ],
      "op": "DUP4",
      "path": "27"
    },
    "8877": {
      "fn": "LibUnicornDNA._setBodyMidGene",
      "offset": [
        13154,
        13158
      ],
      "op": "DUP4",
      "path": "27"
    },
    "8878": {
      "offset": [
        2059,
        2073
      ],
      "op": "PUSH6",
      "path": "27",
      "value": "0x1FE000000000"
    },
    "8885": {
      "fn": "LibUnicornDNA._setBodyMidGene",
      "offset": [
        13134,
        13147
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "8888": {
      "fn": "LibUnicornDNA._setBodyMidGene",
      "jump": "i",
      "offset": [
        13134,
        13181
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8889": {
      "fn": "LibUnicornDNA._getBodyMinorGene",
      "offset": [
        13531,
        13672
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8890": {
      "fn": "LibUnicornDNA._getBodyMinorGene",
      "offset": [
        13595,
        13602
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8892": {
      "fn": "LibUnicornDNA._getBodyMinorGene",
      "offset": [
        13621,
        13665
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 181,
      "value": "0x360"
    },
    "8895": {
      "fn": "LibUnicornDNA._getBodyMinorGene",
      "offset": [
        13636,
        13640
      ],
      "op": "DUP3",
      "path": "27"
    },
    "8896": {
      "offset": [
        2227,
        2243
      ],
      "op": "PUSH7",
      "path": "27",
      "value": "0x1FE00000000000"
    },
    "8904": {
      "fn": "LibUnicornDNA._getBodyMinorGene",
      "offset": [
        13621,
        13635
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "8907": {
      "fn": "LibUnicornDNA._getBodyMinorGene",
      "jump": "i",
      "offset": [
        13621,
        13665
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8908": {
      "fn": "LibUnicornDNA._setBodyMinorGene",
      "offset": [
        13337,
        13525
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "8909": {
      "fn": "LibUnicornDNA._setBodyMinorGene",
      "offset": [
        13439,
        13446
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "8911": {
      "fn": "LibUnicornDNA._setBodyMinorGene",
      "offset": [
        13469,
        13518
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 182,
      "value": "0x1E87"
    },
    "8914": {
      "fn": "LibUnicornDNA._setBodyMinorGene",
      "offset": [
        13483,
        13487
      ],
      "op": "DUP4",
      "path": "27"
    },
    "8915": {
      "fn": "LibUnicornDNA._setBodyMinorGene",
      "offset": [
        13489,
        13493
      ],
      "op": "DUP4",
      "path": "27"
    },
    "8916": {
      "offset": [
        2227,
        2243
      ],
      "op": "PUSH7",
      "path": "27",
      "value": "0x1FE00000000000"
    },
    "8924": {
      "fn": "LibUnicornDNA._setBodyMinorGene",
      "offset": [
        13469,
        13482
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "8927": {
      "fn": "LibUnicornDNA._setBodyMinorGene",
      "jump": "i",
      "offset": [
        13469,
        13518
      ],
      "op": "JUMP",
      "path": "27"
    },
    "8928": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18031,
        19012
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8929": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18231,
        18238
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8931": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18301
      ],
      "op": "DUP5",
      "path": "23"
    },
    "8932": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18301
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8933": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18301
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8934": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18291
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x29"
    },
    "8936": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18291
      ],
      "op": "DUP7",
      "path": "23"
    },
    "8937": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18291
      ],
      "op": "ADD",
      "path": "23"
    },
    "8938": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18301
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "8940": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18301
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8941": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18301
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8942": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18301
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8943": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18301
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8945": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18301
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8946": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18301
      ],
      "op": "DUP4",
      "path": "23"
    },
    "8947": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18301
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "8948": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18310
      ],
      "op": "DUP7",
      "path": "23"
    },
    "8949": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18310
      ],
      "op": "DUP5",
      "path": "23"
    },
    "8950": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18310
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8951": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18310
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8952": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18310
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "8953": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18310
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8954": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18310
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8955": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18310
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "8956": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18273,
        18317
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8957": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18231,
        18238
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8958": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18231,
        18238
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8959": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18360,
        18499
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8960": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18381,
        18393
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8961": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18377,
        18378
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8962": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18377,
        18393
      ],
      "op": "LT",
      "path": "23"
    },
    "8963": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18360,
        18499
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8964": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18360,
        18499
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2374"
    },
    "8967": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18360,
        18499
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8968": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18488
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 183,
      "value": "0x0"
    },
    "8970": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18475
      ],
      "op": "DUP9",
      "path": "23"
    },
    "8971": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18475
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8972": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18475
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8973": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18465
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x29"
    },
    "8975": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18465
      ],
      "op": "DUP11",
      "path": "23"
    },
    "8976": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18465
      ],
      "op": "ADD",
      "path": "23"
    },
    "8977": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18475
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "8979": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18475
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8980": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18475
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8981": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18475
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8982": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18475
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8984": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18475
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8985": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18475
      ],
      "op": "DUP4",
      "path": "23"
    },
    "8986": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18475
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "8987": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18484
      ],
      "op": "DUP11",
      "path": "23"
    },
    "8988": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18484
      ],
      "op": "DUP5",
      "path": "23"
    },
    "8989": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18484
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8990": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18484
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8991": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18484
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "8992": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18484
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8993": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18484
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8994": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18484
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "8995": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8996": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8997": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18446
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2B"
    },
    "8999": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18446
      ],
      "op": "DUP13",
      "path": "23"
    },
    "9000": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18446
      ],
      "op": "ADD",
      "path": "23"
    },
    "9001": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18446
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9002": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18488
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9003": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18484
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9004": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18485,
        18486
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9005": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18485,
        18486
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9006": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9007": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "LT",
      "path": "23"
    },
    "9008": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x233B"
    },
    "9011": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9012": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x233B"
    },
    "9015": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C88"
    },
    "9018": {
      "fn": "LibHatching.getRandomPartId",
      "jump": "i",
      "offset": [
        18447,
        18487
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9019": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9020": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9021": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9023": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9024": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9026": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9028": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "9029": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "ADD",
      "path": "23"
    },
    "9030": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18447,
        18487
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "9031": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18488
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9032": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18488
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9033": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18488
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9035": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18488
      ],
      "op": "ADD",
      "path": "23"
    },
    "9036": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18488
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9037": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18488
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9038": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18488
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9039": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18488
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9041": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18488
      ],
      "op": "ADD",
      "path": "23"
    },
    "9042": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18488
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9044": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18488
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "9045": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18429,
        18488
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "9046": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18414,
        18488
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9047": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18414,
        18488
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2360"
    },
    "9050": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18414,
        18488
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9051": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18414,
        18488
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9052": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18414,
        18488
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CE6"
    },
    "9055": {
      "fn": "LibHatching.getRandomPartId",
      "jump": "i",
      "offset": [
        18414,
        18488
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9056": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18414,
        18488
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9057": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18414,
        18488
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9058": {
      "op": "POP"
    },
    "9059": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18395,
        18398
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 184
    },
    "9060": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18395,
        18398
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x236C"
    },
    "9063": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18395,
        18398
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9064": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18395,
        18398
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CB4"
    },
    "9067": {
      "fn": "LibHatching.getRandomPartId",
      "jump": "i",
      "offset": [
        18395,
        18398
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9068": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18395,
        18398
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9069": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18395,
        18398
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9070": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18395,
        18398
      ],
      "op": "POP",
      "path": "23"
    },
    "9071": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18395,
        18398
      ],
      "op": "POP",
      "path": "23"
    },
    "9072": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18360,
        18499
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x22FF"
    },
    "9075": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18360,
        18499
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9076": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18360,
        18499
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9077": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18360,
        18499
      ],
      "op": "POP",
      "path": "23"
    },
    "9078": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18508,
        18522
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9080": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18525,
        18568
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2382"
    },
    "9083": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18539,
        18550
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9084": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18552,
        18560
      ],
      "op": "DUP8",
      "path": "23"
    },
    "9085": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18562,
        18567
      ],
      "op": "DUP8",
      "path": "23"
    },
    "9086": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18525,
        18538
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x220E"
    },
    "9089": {
      "fn": "LibHatching.getRandomPartId",
      "jump": "i",
      "offset": [
        18525,
        18568
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9090": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18525,
        18568
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9091": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18525,
        18572
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x238D"
    },
    "9094": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18525,
        18572
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9095": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18571,
        18572
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "9097": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18525,
        18572
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CE6"
    },
    "9100": {
      "fn": "LibHatching.getRandomPartId",
      "jump": "i",
      "offset": [
        18525,
        18572
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9101": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18525,
        18572
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9102": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18508,
        18572
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9103": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18508,
        18572
      ],
      "op": "POP",
      "path": "23"
    },
    "9104": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18582,
        18606
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9106": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18625,
        18631
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9107": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18620,
        18943
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9108": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18641,
        18653
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9109": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18637,
        18638
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9110": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18637,
        18653
      ],
      "op": "LT",
      "path": "23"
    },
    "9111": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18620,
        18943
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "9112": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18620,
        18943
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x241D"
    },
    "9115": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18620,
        18943
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9116": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18674,
        18690
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9118": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18721
      ],
      "op": "DUP11",
      "path": "23"
    },
    "9119": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18721
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9120": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18721
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9121": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18711
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x29"
    },
    "9123": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18711
      ],
      "op": "DUP13",
      "path": "23"
    },
    "9124": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18711
      ],
      "op": "ADD",
      "path": "23"
    },
    "9125": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18721
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9127": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18721
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9128": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18721
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9129": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18721
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9130": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18721
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9132": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18721
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9133": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18721
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9134": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18721
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "9135": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18730
      ],
      "op": "DUP13",
      "path": "23"
    },
    "9136": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18730
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9137": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18730
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9138": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18730
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9139": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18730
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9140": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18730
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9141": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18730
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9142": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18730
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "9143": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9144": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "9145": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18731,
        18732
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9146": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18731,
        18732
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9147": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9148": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "LT",
      "path": "23"
    },
    "9149": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23C8"
    },
    "9152": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9153": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x23C8"
    },
    "9156": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C88"
    },
    "9159": {
      "fn": "LibHatching.getRandomPartId",
      "jump": "i",
      "offset": [
        18693,
        18733
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9160": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9161": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9163": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9164": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9165": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9166": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9168": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9169": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9170": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "9171": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9172": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9173": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "ADD",
      "path": "23"
    },
    "9174": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "9175": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18768,
        18795
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9176": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18768,
        18795
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9177": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18768,
        18795
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9178": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18768,
        18785
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2B"
    },
    "9180": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18768,
        18785
      ],
      "op": "DUP16",
      "path": "23"
    },
    "9181": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18768,
        18785
      ],
      "op": "ADD",
      "path": "23"
    },
    "9182": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18768,
        18795
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9183": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18768,
        18795
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9184": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18768,
        18795
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9185": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18768,
        18795
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9187": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18768,
        18795
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9188": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18768,
        18795
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9189": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18768,
        18795
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "9190": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18768,
        18795
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "9191": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9192": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18693,
        18733
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9193": {
      "op": "POP"
    },
    "9194": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18809,
        18839
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 185,
      "value": "0x23F3"
    },
    "9197": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18768,
        18795
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9198": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18809,
        18839
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9199": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18809,
        18839
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CE6"
    },
    "9202": {
      "fn": "LibHatching.getRandomPartId",
      "jump": "i",
      "offset": [
        18809,
        18839
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9203": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18809,
        18839
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9204": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18809,
        18839
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "9205": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18809,
        18839
      ],
      "op": "POP",
      "path": "23"
    },
    "9206": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18867,
        18883
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9207": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18857,
        18863
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9208": {
      "branch": 306,
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18857,
        18883
      ],
      "op": "GT",
      "path": "23"
    },
    "9209": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18853,
        18933
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x240A"
    },
    "9212": {
      "branch": 306,
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18853,
        18933
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9213": {
      "op": "POP"
    },
    "9214": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18910,
        18918
      ],
      "op": "SWAP6",
      "path": "23",
      "statement": 186
    },
    "9215": {
      "op": "POP"
    },
    "9216": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18903,
        18918
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x247A"
    },
    "9219": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18903,
        18918
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "9220": {
      "op": "POP"
    },
    "9221": {
      "op": "POP"
    },
    "9222": {
      "op": "POP"
    },
    "9223": {
      "op": "POP"
    },
    "9224": {
      "op": "POP"
    },
    "9225": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18903,
        18918
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9226": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18853,
        18933
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9227": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18660,
        18943
      ],
      "op": "POP",
      "path": "23"
    },
    "9228": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18660,
        18943
      ],
      "op": "POP",
      "path": "23"
    },
    "9229": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18655,
        18658
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 187
    },
    "9230": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18655,
        18658
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2416"
    },
    "9233": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18655,
        18658
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9234": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18655,
        18658
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CB4"
    },
    "9237": {
      "fn": "LibHatching.getRandomPartId",
      "jump": "i",
      "offset": [
        18655,
        18658
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9238": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18655,
        18658
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9239": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18655,
        18658
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9240": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18655,
        18658
      ],
      "op": "POP",
      "path": "23"
    },
    "9241": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18620,
        18943
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2393"
    },
    "9244": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18620,
        18943
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9245": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18620,
        18943
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9246": {
      "op": "POP"
    },
    "9247": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18952,
        19005
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 188,
      "value": "0x40"
    },
    "9249": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18952,
        19005
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9250": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9254": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9256": {
      "op": "SHL"
    },
    "9257": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18952,
        19005
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9258": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18952,
        19005
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9261": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18952,
        19005
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "9263": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18952,
        19005
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9264": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18952,
        19005
      ],
      "op": "ADD",
      "path": "23"
    },
    "9265": {
      "op": "MSTORE"
    },
    "9266": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "9268": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9270": {
      "op": "DUP3"
    },
    "9271": {
      "op": "ADD"
    },
    "9272": {
      "op": "MSTORE"
    },
    "9273": {
      "op": "PUSH32",
      "value": "0x4861746368696E6746616365743A204661696C65642067657474696E6720524E"
    },
    "9306": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9308": {
      "op": "DUP3"
    },
    "9309": {
      "op": "ADD"
    },
    "9310": {
      "op": "MSTORE"
    },
    "9311": {
      "op": "PUSH11",
      "value": "0x4720626F64797061727473"
    },
    "9323": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9325": {
      "op": "SHL"
    },
    "9326": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9328": {
      "op": "DUP3"
    },
    "9329": {
      "op": "ADD"
    },
    "9330": {
      "op": "MSTORE"
    },
    "9331": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9333": {
      "op": "ADD"
    },
    "9334": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18952,
        19005
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x469"
    },
    "9337": {
      "op": "JUMP"
    },
    "9338": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18031,
        19012
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9339": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18031,
        19012
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "9340": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18031,
        19012
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "9341": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18031,
        19012
      ],
      "op": "POP",
      "path": "23"
    },
    "9342": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18031,
        19012
      ],
      "op": "POP",
      "path": "23"
    },
    "9343": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18031,
        19012
      ],
      "op": "POP",
      "path": "23"
    },
    "9344": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18031,
        19012
      ],
      "op": "POP",
      "path": "23"
    },
    "9345": {
      "fn": "LibHatching.getRandomPartId",
      "offset": [
        18031,
        19012
      ],
      "op": "POP",
      "path": "23"
    },
    "9346": {
      "fn": "LibHatching.getRandomPartId",
      "jump": "o",
      "offset": [
        18031,
        19012
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9347": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19018,
        19724
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9348": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19192,
        19199
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9350": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19230,
        19254
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9351": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19230,
        19254
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9352": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19230,
        19254
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9353": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19230,
        19244
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x21"
    },
    "9355": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19230,
        19244
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9356": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19230,
        19244
      ],
      "op": "ADD",
      "path": "23"
    },
    "9357": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19230,
        19254
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9359": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19230,
        19254
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9360": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19230,
        19254
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9361": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19230,
        19254
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9362": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19230,
        19254
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9364": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19230,
        19254
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9365": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19230,
        19254
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9366": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19230,
        19254
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "9367": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19230,
        19261
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "9368": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19302,
        19325
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x22"
    },
    "9370": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19302,
        19325
      ],
      "op": "DUP9",
      "path": "23"
    },
    "9371": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19302,
        19325
      ],
      "op": "ADD",
      "path": "23"
    },
    "9372": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19302,
        19335
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9373": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19302,
        19335
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9374": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19302,
        19335
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9375": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19302,
        19335
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9376": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19302,
        19335
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "9377": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19302,
        19335
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "9378": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19192,
        19199
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9379": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19192,
        19199
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9380": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19288,
        19353
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x24AE"
    },
    "9383": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19288,
        19353
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9384": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19337,
        19345
      ],
      "op": "DUP7",
      "path": "23"
    },
    "9385": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19347,
        19352
      ],
      "op": "DUP7",
      "path": "23"
    },
    "9386": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19288,
        19301
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x220E"
    },
    "9389": {
      "fn": "LibHatching.getRandomGeneId",
      "jump": "i",
      "offset": [
        19288,
        19353
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9390": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19288,
        19353
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9391": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19288,
        19357
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x24B9"
    },
    "9394": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19288,
        19357
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9395": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19356,
        19357
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "9397": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19288,
        19357
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CE6"
    },
    "9400": {
      "fn": "LibHatching.getRandomGeneId",
      "jump": "i",
      "offset": [
        19288,
        19357
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9401": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19288,
        19357
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9402": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19271,
        19357
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9403": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19271,
        19357
      ],
      "op": "POP",
      "path": "23"
    },
    "9404": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19367,
        19391
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9406": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19410,
        19416
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9407": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19405,
        19660
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9408": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19426,
        19434
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9409": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19422,
        19423
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9410": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19422,
        19434
      ],
      "op": "LT",
      "path": "23"
    },
    "9411": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19405,
        19660
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "9412": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19405,
        19660
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x253D"
    },
    "9415": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19405,
        19660
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9416": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19455,
        19469
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9418": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19496
      ],
      "op": "DUP9",
      "path": "23"
    },
    "9419": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19496
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9420": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19496
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9421": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19486
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x21"
    },
    "9423": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19486
      ],
      "op": "DUP11",
      "path": "23"
    },
    "9424": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19486
      ],
      "op": "ADD",
      "path": "23"
    },
    "9425": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19496
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9427": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19496
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9428": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19496
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9430": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19496
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9431": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19496
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "9432": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9433": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "9434": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19497,
        19498
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9435": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19497,
        19498
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9436": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9437": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "LT",
      "path": "23"
    },
    "9438": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x24E9"
    },
    "9441": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9442": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x24E9"
    },
    "9445": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C88"
    },
    "9448": {
      "fn": "LibHatching.getRandomGeneId",
      "jump": "i",
      "offset": [
        19472,
        19499
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9449": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9450": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9451": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9453": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9454": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9456": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9458": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "9459": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "ADD",
      "path": "23"
    },
    "9460": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19472,
        19499
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "9461": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19455,
        19499
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9462": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19455,
        19499
      ],
      "op": "POP",
      "path": "23"
    },
    "9463": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19533,
        19535
      ],
      "op": "DUP10",
      "path": "23",
      "statement": 189
    },
    "9464": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19533,
        19550
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x23"
    },
    "9466": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19533,
        19550
      ],
      "op": "ADD",
      "path": "23"
    },
    "9467": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19533,
        19558
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9469": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19551,
        19557
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9470": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19533,
        19558
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9471": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19533,
        19558
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9472": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19533,
        19558
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9474": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19533,
        19558
      ],
      "op": "ADD",
      "path": "23"
    },
    "9475": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19533,
        19558
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9476": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19533,
        19558
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9477": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19533,
        19558
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9478": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19533,
        19558
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9480": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19533,
        19558
      ],
      "op": "ADD",
      "path": "23"
    },
    "9481": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19533,
        19558
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9483": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19533,
        19558
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "9484": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19533,
        19558
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "9485": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19513,
        19558
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9486": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19513,
        19558
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2517"
    },
    "9489": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19513,
        19558
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9490": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19513,
        19558
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9491": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19513,
        19558
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CE6"
    },
    "9494": {
      "fn": "LibHatching.getRandomGeneId",
      "jump": "i",
      "offset": [
        19513,
        19558
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9495": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19513,
        19558
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9496": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19513,
        19558
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9497": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19513,
        19558
      ],
      "op": "POP",
      "path": "23"
    },
    "9498": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19586,
        19602
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9499": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19576,
        19582
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9500": {
      "branch": 307,
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19576,
        19602
      ],
      "op": "GT",
      "path": "23"
    },
    "9501": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19572,
        19650
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x252C"
    },
    "9504": {
      "branch": 307,
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19572,
        19650
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9505": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19629,
        19635
      ],
      "op": "SWAP5",
      "path": "23",
      "statement": 190
    },
    "9506": {
      "op": "POP"
    },
    "9507": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19622,
        19635
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC63"
    },
    "9510": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19622,
        19635
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "9511": {
      "op": "POP"
    },
    "9512": {
      "op": "POP"
    },
    "9513": {
      "op": "POP"
    },
    "9514": {
      "op": "POP"
    },
    "9515": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19622,
        19635
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9516": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19572,
        19650
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9517": {
      "op": "POP"
    },
    "9518": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19436,
        19439
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 191,
      "value": "0x2536"
    },
    "9521": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19436,
        19439
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9522": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19436,
        19439
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CB4"
    },
    "9525": {
      "fn": "LibHatching.getRandomGeneId",
      "jump": "i",
      "offset": [
        19436,
        19439
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9526": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19436,
        19439
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9527": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19436,
        19439
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9528": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19436,
        19439
      ],
      "op": "POP",
      "path": "23"
    },
    "9529": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19405,
        19660
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x24BF"
    },
    "9532": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19405,
        19660
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9533": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19405,
        19660
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9534": {
      "op": "POP"
    },
    "9535": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19669,
        19717
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 192,
      "value": "0x40"
    },
    "9537": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19669,
        19717
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9538": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9542": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9544": {
      "op": "SHL"
    },
    "9545": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19669,
        19717
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9546": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19669,
        19717
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9549": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19669,
        19717
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "9551": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19669,
        19717
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9552": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19669,
        19717
      ],
      "op": "ADD",
      "path": "23"
    },
    "9553": {
      "op": "MSTORE"
    },
    "9554": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9558": {
      "op": "DUP3"
    },
    "9559": {
      "op": "ADD"
    },
    "9560": {
      "op": "MSTORE"
    },
    "9561": {
      "op": "PUSH32",
      "value": "0x4861746368696E6746616365743A204661696C65642067657474696E6720524E"
    },
    "9594": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9596": {
      "op": "DUP3"
    },
    "9597": {
      "op": "ADD"
    },
    "9598": {
      "op": "MSTORE"
    },
    "9599": {
      "op": "PUSH6",
      "value": "0x472067656E65"
    },
    "9606": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "9608": {
      "op": "SHL"
    },
    "9609": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9611": {
      "op": "DUP3"
    },
    "9612": {
      "op": "ADD"
    },
    "9613": {
      "op": "MSTORE"
    },
    "9614": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9616": {
      "op": "ADD"
    },
    "9617": {
      "fn": "LibHatching.getRandomGeneId",
      "offset": [
        19669,
        19717
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x469"
    },
    "9620": {
      "op": "JUMP"
    },
    "9621": {
      "fn": "LibUnicornDNA._getFacePart",
      "offset": [
        13861,
        13991
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9622": {
      "fn": "LibUnicornDNA._getFacePart",
      "offset": [
        13920,
        13927
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9624": {
      "fn": "LibUnicornDNA._getFacePart",
      "offset": [
        13946,
        13984
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 193,
      "value": "0x360"
    },
    "9627": {
      "fn": "LibUnicornDNA._getFacePart",
      "offset": [
        13961,
        13965
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9628": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9630": {
      "op": "PUSH1",
      "value": "0x35"
    },
    "9632": {
      "op": "SHL"
    },
    "9633": {
      "fn": "LibUnicornDNA._getFacePart",
      "offset": [
        13946,
        13960
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "9636": {
      "fn": "LibUnicornDNA._getFacePart",
      "jump": "i",
      "offset": [
        13946,
        13984
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9637": {
      "fn": "LibUnicornDNA._setFacePart",
      "offset": [
        13678,
        13855
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9638": {
      "fn": "LibUnicornDNA._setFacePart",
      "offset": [
        13775,
        13782
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9640": {
      "fn": "LibUnicornDNA._setFacePart",
      "offset": [
        13805,
        13848
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 194,
      "value": "0x1E87"
    },
    "9643": {
      "fn": "LibUnicornDNA._setFacePart",
      "offset": [
        13819,
        13823
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9644": {
      "fn": "LibUnicornDNA._setFacePart",
      "offset": [
        13825,
        13829
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9645": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9647": {
      "op": "PUSH1",
      "value": "0x35"
    },
    "9649": {
      "op": "SHL"
    },
    "9650": {
      "fn": "LibUnicornDNA._setFacePart",
      "offset": [
        13805,
        13818
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "9653": {
      "fn": "LibUnicornDNA._setFacePart",
      "jump": "i",
      "offset": [
        13805,
        13848
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9654": {
      "fn": "LibUnicornDNA._getFaceMajorGene",
      "offset": [
        14191,
        14332
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9655": {
      "fn": "LibUnicornDNA._getFaceMajorGene",
      "offset": [
        14255,
        14262
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9657": {
      "fn": "LibUnicornDNA._getFaceMajorGene",
      "offset": [
        14281,
        14325
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 195,
      "value": "0x360"
    },
    "9660": {
      "fn": "LibUnicornDNA._getFaceMajorGene",
      "offset": [
        14296,
        14300
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9661": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9663": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "9665": {
      "op": "SHL"
    },
    "9666": {
      "fn": "LibUnicornDNA._getFaceMajorGene",
      "offset": [
        14281,
        14295
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "9669": {
      "fn": "LibUnicornDNA._getFaceMajorGene",
      "jump": "i",
      "offset": [
        14281,
        14325
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9670": {
      "fn": "LibUnicornDNA._setFaceMajorGene",
      "offset": [
        13997,
        14185
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9671": {
      "fn": "LibUnicornDNA._setFaceMajorGene",
      "offset": [
        14099,
        14106
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9673": {
      "fn": "LibUnicornDNA._setFaceMajorGene",
      "offset": [
        14129,
        14178
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 196,
      "value": "0x1E87"
    },
    "9676": {
      "fn": "LibUnicornDNA._setFaceMajorGene",
      "offset": [
        14143,
        14147
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9677": {
      "fn": "LibUnicornDNA._setFaceMajorGene",
      "offset": [
        14149,
        14153
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9678": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9680": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "9682": {
      "op": "SHL"
    },
    "9683": {
      "fn": "LibUnicornDNA._setFaceMajorGene",
      "offset": [
        14129,
        14142
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "9686": {
      "fn": "LibUnicornDNA._setFaceMajorGene",
      "jump": "i",
      "offset": [
        14129,
        14178
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9687": {
      "fn": "LibUnicornDNA._getFaceMidGene",
      "offset": [
        14528,
        14665
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9688": {
      "fn": "LibUnicornDNA._getFaceMidGene",
      "offset": [
        14590,
        14597
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9690": {
      "fn": "LibUnicornDNA._getFaceMidGene",
      "offset": [
        14616,
        14658
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 197,
      "value": "0x360"
    },
    "9693": {
      "fn": "LibUnicornDNA._getFaceMidGene",
      "offset": [
        14631,
        14635
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9694": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9696": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "9698": {
      "op": "SHL"
    },
    "9699": {
      "fn": "LibUnicornDNA._getFaceMidGene",
      "offset": [
        14616,
        14630
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "9702": {
      "fn": "LibUnicornDNA._getFaceMidGene",
      "jump": "i",
      "offset": [
        14616,
        14658
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9703": {
      "fn": "LibUnicornDNA._setFaceMidGene",
      "offset": [
        14338,
        14522
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9704": {
      "fn": "LibUnicornDNA._setFaceMidGene",
      "offset": [
        14438,
        14445
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9706": {
      "fn": "LibUnicornDNA._setFaceMidGene",
      "offset": [
        14468,
        14515
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 198,
      "value": "0x1E87"
    },
    "9709": {
      "fn": "LibUnicornDNA._setFaceMidGene",
      "offset": [
        14482,
        14486
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9710": {
      "fn": "LibUnicornDNA._setFaceMidGene",
      "offset": [
        14488,
        14492
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9711": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9713": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "9715": {
      "op": "SHL"
    },
    "9716": {
      "fn": "LibUnicornDNA._setFaceMidGene",
      "offset": [
        14468,
        14481
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "9719": {
      "fn": "LibUnicornDNA._setFaceMidGene",
      "jump": "i",
      "offset": [
        14468,
        14515
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9720": {
      "fn": "LibUnicornDNA._getFaceMinorGene",
      "offset": [
        14865,
        15006
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9721": {
      "fn": "LibUnicornDNA._getFaceMinorGene",
      "offset": [
        14929,
        14936
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9723": {
      "fn": "LibUnicornDNA._getFaceMinorGene",
      "offset": [
        14955,
        14999
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 199,
      "value": "0x360"
    },
    "9726": {
      "fn": "LibUnicornDNA._getFaceMinorGene",
      "offset": [
        14970,
        14974
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9727": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9729": {
      "op": "PUSH1",
      "value": "0x4D"
    },
    "9731": {
      "op": "SHL"
    },
    "9732": {
      "fn": "LibUnicornDNA._getFaceMinorGene",
      "offset": [
        14955,
        14969
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "9735": {
      "fn": "LibUnicornDNA._getFaceMinorGene",
      "jump": "i",
      "offset": [
        14955,
        14999
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9736": {
      "fn": "LibUnicornDNA._setFaceMinorGene",
      "offset": [
        14671,
        14859
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9737": {
      "fn": "LibUnicornDNA._setFaceMinorGene",
      "offset": [
        14773,
        14780
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9739": {
      "fn": "LibUnicornDNA._setFaceMinorGene",
      "offset": [
        14803,
        14852
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 200,
      "value": "0x1E87"
    },
    "9742": {
      "fn": "LibUnicornDNA._setFaceMinorGene",
      "offset": [
        14817,
        14821
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9743": {
      "fn": "LibUnicornDNA._setFaceMinorGene",
      "offset": [
        14823,
        14827
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9744": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9746": {
      "op": "PUSH1",
      "value": "0x4D"
    },
    "9748": {
      "op": "SHL"
    },
    "9749": {
      "fn": "LibUnicornDNA._setFaceMinorGene",
      "offset": [
        14803,
        14816
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "9752": {
      "fn": "LibUnicornDNA._setFaceMinorGene",
      "jump": "i",
      "offset": [
        14803,
        14852
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9753": {
      "fn": "LibUnicornDNA._getHornPart",
      "offset": [
        16561,
        16691
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9754": {
      "fn": "LibUnicornDNA._getHornPart",
      "offset": [
        16620,
        16627
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9756": {
      "fn": "LibUnicornDNA._getHornPart",
      "offset": [
        16646,
        16684
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 201,
      "value": "0x360"
    },
    "9759": {
      "fn": "LibUnicornDNA._getHornPart",
      "offset": [
        16661,
        16665
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9760": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9762": {
      "op": "PUSH1",
      "value": "0x55"
    },
    "9764": {
      "op": "SHL"
    },
    "9765": {
      "fn": "LibUnicornDNA._getHornPart",
      "offset": [
        16646,
        16660
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "9768": {
      "fn": "LibUnicornDNA._getHornPart",
      "jump": "i",
      "offset": [
        16646,
        16684
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9769": {
      "fn": "LibUnicornDNA._setHornPart",
      "offset": [
        16378,
        16555
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9770": {
      "fn": "LibUnicornDNA._setHornPart",
      "offset": [
        16475,
        16482
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9772": {
      "fn": "LibUnicornDNA._setHornPart",
      "offset": [
        16505,
        16548
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 202,
      "value": "0x1E87"
    },
    "9775": {
      "fn": "LibUnicornDNA._setHornPart",
      "offset": [
        16519,
        16523
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9776": {
      "fn": "LibUnicornDNA._setHornPart",
      "offset": [
        16525,
        16529
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9777": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9779": {
      "op": "PUSH1",
      "value": "0x55"
    },
    "9781": {
      "op": "SHL"
    },
    "9782": {
      "fn": "LibUnicornDNA._setHornPart",
      "offset": [
        16505,
        16518
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "9785": {
      "fn": "LibUnicornDNA._setHornPart",
      "jump": "i",
      "offset": [
        16505,
        16548
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9786": {
      "fn": "LibUnicornDNA._getHornMajorGene",
      "offset": [
        16891,
        17032
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9787": {
      "fn": "LibUnicornDNA._getHornMajorGene",
      "offset": [
        16955,
        16962
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9789": {
      "fn": "LibUnicornDNA._getHornMajorGene",
      "offset": [
        16981,
        17025
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 203,
      "value": "0x360"
    },
    "9792": {
      "fn": "LibUnicornDNA._getHornMajorGene",
      "offset": [
        16996,
        17000
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9793": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9795": {
      "op": "PUSH1",
      "value": "0x5D"
    },
    "9797": {
      "op": "SHL"
    },
    "9798": {
      "fn": "LibUnicornDNA._getHornMajorGene",
      "offset": [
        16981,
        16995
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "9801": {
      "fn": "LibUnicornDNA._getHornMajorGene",
      "jump": "i",
      "offset": [
        16981,
        17025
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9802": {
      "fn": "LibUnicornDNA._setHornMajorGene",
      "offset": [
        16697,
        16885
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9803": {
      "fn": "LibUnicornDNA._setHornMajorGene",
      "offset": [
        16799,
        16806
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9805": {
      "fn": "LibUnicornDNA._setHornMajorGene",
      "offset": [
        16829,
        16878
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 204,
      "value": "0x1E87"
    },
    "9808": {
      "fn": "LibUnicornDNA._setHornMajorGene",
      "offset": [
        16843,
        16847
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9809": {
      "fn": "LibUnicornDNA._setHornMajorGene",
      "offset": [
        16849,
        16853
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9810": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9812": {
      "op": "PUSH1",
      "value": "0x5D"
    },
    "9814": {
      "op": "SHL"
    },
    "9815": {
      "fn": "LibUnicornDNA._setHornMajorGene",
      "offset": [
        16829,
        16842
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "9818": {
      "fn": "LibUnicornDNA._setHornMajorGene",
      "jump": "i",
      "offset": [
        16829,
        16878
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9819": {
      "fn": "LibUnicornDNA._getHornMidGene",
      "offset": [
        17228,
        17365
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9820": {
      "fn": "LibUnicornDNA._getHornMidGene",
      "offset": [
        17290,
        17297
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9822": {
      "fn": "LibUnicornDNA._getHornMidGene",
      "offset": [
        17316,
        17358
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 205,
      "value": "0x360"
    },
    "9825": {
      "fn": "LibUnicornDNA._getHornMidGene",
      "offset": [
        17331,
        17335
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9826": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9828": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "9830": {
      "op": "SHL"
    },
    "9831": {
      "fn": "LibUnicornDNA._getHornMidGene",
      "offset": [
        17316,
        17330
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "9834": {
      "fn": "LibUnicornDNA._getHornMidGene",
      "jump": "i",
      "offset": [
        17316,
        17358
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9835": {
      "fn": "LibUnicornDNA._setHornMidGene",
      "offset": [
        17038,
        17222
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9836": {
      "fn": "LibUnicornDNA._setHornMidGene",
      "offset": [
        17138,
        17145
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9838": {
      "fn": "LibUnicornDNA._setHornMidGene",
      "offset": [
        17168,
        17215
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 206,
      "value": "0x1E87"
    },
    "9841": {
      "fn": "LibUnicornDNA._setHornMidGene",
      "offset": [
        17182,
        17186
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9842": {
      "fn": "LibUnicornDNA._setHornMidGene",
      "offset": [
        17188,
        17192
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9843": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9845": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "9847": {
      "op": "SHL"
    },
    "9848": {
      "fn": "LibUnicornDNA._setHornMidGene",
      "offset": [
        17168,
        17181
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "9851": {
      "fn": "LibUnicornDNA._setHornMidGene",
      "jump": "i",
      "offset": [
        17168,
        17215
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9852": {
      "fn": "LibUnicornDNA._getHornMinorGene",
      "offset": [
        17565,
        17706
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9853": {
      "fn": "LibUnicornDNA._getHornMinorGene",
      "offset": [
        17629,
        17636
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9855": {
      "fn": "LibUnicornDNA._getHornMinorGene",
      "offset": [
        17655,
        17699
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 207,
      "value": "0x360"
    },
    "9858": {
      "fn": "LibUnicornDNA._getHornMinorGene",
      "offset": [
        17670,
        17674
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9859": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9861": {
      "op": "PUSH1",
      "value": "0x6D"
    },
    "9863": {
      "op": "SHL"
    },
    "9864": {
      "fn": "LibUnicornDNA._getHornMinorGene",
      "offset": [
        17655,
        17669
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "9867": {
      "fn": "LibUnicornDNA._getHornMinorGene",
      "jump": "i",
      "offset": [
        17655,
        17699
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9868": {
      "fn": "LibUnicornDNA._setHornMinorGene",
      "offset": [
        17371,
        17559
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9869": {
      "fn": "LibUnicornDNA._setHornMinorGene",
      "offset": [
        17473,
        17480
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9871": {
      "fn": "LibUnicornDNA._setHornMinorGene",
      "offset": [
        17503,
        17552
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 208,
      "value": "0x1E87"
    },
    "9874": {
      "fn": "LibUnicornDNA._setHornMinorGene",
      "offset": [
        17517,
        17521
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9875": {
      "fn": "LibUnicornDNA._setHornMinorGene",
      "offset": [
        17523,
        17527
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9876": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9878": {
      "op": "PUSH1",
      "value": "0x6D"
    },
    "9880": {
      "op": "SHL"
    },
    "9881": {
      "fn": "LibUnicornDNA._setHornMinorGene",
      "offset": [
        17503,
        17516
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "9884": {
      "fn": "LibUnicornDNA._setHornMinorGene",
      "jump": "i",
      "offset": [
        17503,
        17552
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9885": {
      "fn": "LibUnicornDNA._getHoovesPart",
      "offset": [
        15199,
        15333
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9886": {
      "fn": "LibUnicornDNA._getHoovesPart",
      "offset": [
        15260,
        15267
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9888": {
      "fn": "LibUnicornDNA._getHoovesPart",
      "offset": [
        15286,
        15326
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 209,
      "value": "0x360"
    },
    "9891": {
      "fn": "LibUnicornDNA._getHoovesPart",
      "offset": [
        15301,
        15305
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9892": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9894": {
      "op": "PUSH1",
      "value": "0x75"
    },
    "9896": {
      "op": "SHL"
    },
    "9897": {
      "fn": "LibUnicornDNA._getHoovesPart",
      "offset": [
        15286,
        15300
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "9900": {
      "fn": "LibUnicornDNA._getHoovesPart",
      "jump": "i",
      "offset": [
        15286,
        15326
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9901": {
      "fn": "LibUnicornDNA._setHoovesPart",
      "offset": [
        15012,
        15193
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9902": {
      "fn": "LibUnicornDNA._setHoovesPart",
      "offset": [
        15111,
        15118
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9904": {
      "fn": "LibUnicornDNA._setHoovesPart",
      "offset": [
        15141,
        15186
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 210,
      "value": "0x1E87"
    },
    "9907": {
      "fn": "LibUnicornDNA._setHoovesPart",
      "offset": [
        15155,
        15159
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9908": {
      "fn": "LibUnicornDNA._setHoovesPart",
      "offset": [
        15161,
        15165
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9909": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9911": {
      "op": "PUSH1",
      "value": "0x75"
    },
    "9913": {
      "op": "SHL"
    },
    "9914": {
      "fn": "LibUnicornDNA._setHoovesPart",
      "offset": [
        15141,
        15154
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "9917": {
      "fn": "LibUnicornDNA._setHoovesPart",
      "jump": "i",
      "offset": [
        15141,
        15186
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9918": {
      "fn": "LibUnicornDNA._getHoovesMajorGene",
      "offset": [
        15537,
        15682
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9919": {
      "fn": "LibUnicornDNA._getHoovesMajorGene",
      "offset": [
        15603,
        15610
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9921": {
      "fn": "LibUnicornDNA._getHoovesMajorGene",
      "offset": [
        15629,
        15675
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 211,
      "value": "0x360"
    },
    "9924": {
      "fn": "LibUnicornDNA._getHoovesMajorGene",
      "offset": [
        15644,
        15648
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9925": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9927": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "9929": {
      "op": "SHL"
    },
    "9930": {
      "fn": "LibUnicornDNA._getHoovesMajorGene",
      "offset": [
        15629,
        15643
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "9933": {
      "fn": "LibUnicornDNA._getHoovesMajorGene",
      "jump": "i",
      "offset": [
        15629,
        15675
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9934": {
      "fn": "LibUnicornDNA._setHoovesMajorGene",
      "offset": [
        15339,
        15531
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9935": {
      "fn": "LibUnicornDNA._setHoovesMajorGene",
      "offset": [
        15443,
        15450
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9937": {
      "fn": "LibUnicornDNA._setHoovesMajorGene",
      "offset": [
        15473,
        15524
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 212,
      "value": "0x1E87"
    },
    "9940": {
      "fn": "LibUnicornDNA._setHoovesMajorGene",
      "offset": [
        15487,
        15491
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9941": {
      "fn": "LibUnicornDNA._setHoovesMajorGene",
      "offset": [
        15493,
        15497
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9942": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9944": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "9946": {
      "op": "SHL"
    },
    "9947": {
      "fn": "LibUnicornDNA._setHoovesMajorGene",
      "offset": [
        15473,
        15486
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "9950": {
      "fn": "LibUnicornDNA._setHoovesMajorGene",
      "jump": "i",
      "offset": [
        15473,
        15524
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9951": {
      "fn": "LibUnicornDNA._getHoovesMidGene",
      "offset": [
        15882,
        16023
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9952": {
      "fn": "LibUnicornDNA._getHoovesMidGene",
      "offset": [
        15946,
        15953
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9954": {
      "fn": "LibUnicornDNA._getHoovesMidGene",
      "offset": [
        15972,
        16016
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 213,
      "value": "0x360"
    },
    "9957": {
      "fn": "LibUnicornDNA._getHoovesMidGene",
      "offset": [
        15987,
        15991
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9958": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9960": {
      "op": "PUSH1",
      "value": "0x85"
    },
    "9962": {
      "op": "SHL"
    },
    "9963": {
      "fn": "LibUnicornDNA._getHoovesMidGene",
      "offset": [
        15972,
        15986
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "9966": {
      "fn": "LibUnicornDNA._getHoovesMidGene",
      "jump": "i",
      "offset": [
        15972,
        16016
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9967": {
      "fn": "LibUnicornDNA._setHoovesMidGene",
      "offset": [
        15688,
        15876
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9968": {
      "fn": "LibUnicornDNA._setHoovesMidGene",
      "offset": [
        15790,
        15797
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9970": {
      "fn": "LibUnicornDNA._setHoovesMidGene",
      "offset": [
        15820,
        15869
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 214,
      "value": "0x1E87"
    },
    "9973": {
      "fn": "LibUnicornDNA._setHoovesMidGene",
      "offset": [
        15834,
        15838
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9974": {
      "fn": "LibUnicornDNA._setHoovesMidGene",
      "offset": [
        15840,
        15844
      ],
      "op": "DUP4",
      "path": "27"
    },
    "9975": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9977": {
      "op": "PUSH1",
      "value": "0x85"
    },
    "9979": {
      "op": "SHL"
    },
    "9980": {
      "fn": "LibUnicornDNA._setHoovesMidGene",
      "offset": [
        15820,
        15833
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "9983": {
      "fn": "LibUnicornDNA._setHoovesMidGene",
      "jump": "i",
      "offset": [
        15820,
        15869
      ],
      "op": "JUMP",
      "path": "27"
    },
    "9984": {
      "fn": "LibUnicornDNA._getHoovesMinorGene",
      "offset": [
        16227,
        16372
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "9985": {
      "fn": "LibUnicornDNA._getHoovesMinorGene",
      "offset": [
        16293,
        16300
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "9987": {
      "fn": "LibUnicornDNA._getHoovesMinorGene",
      "offset": [
        16319,
        16365
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 215,
      "value": "0x360"
    },
    "9990": {
      "fn": "LibUnicornDNA._getHoovesMinorGene",
      "offset": [
        16334,
        16338
      ],
      "op": "DUP3",
      "path": "27"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9993": {
      "op": "PUSH1",
      "value": "0x8D"
    },
    "9995": {
      "op": "SHL"
    },
    "9996": {
      "fn": "LibUnicornDNA._getHoovesMinorGene",
      "offset": [
        16319,
        16333
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "9999": {
      "fn": "LibUnicornDNA._getHoovesMinorGene",
      "jump": "i",
      "offset": [
        16319,
        16365
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10000": {
      "fn": "LibUnicornDNA._setHoovesMinorGene",
      "offset": [
        16029,
        16221
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10001": {
      "fn": "LibUnicornDNA._setHoovesMinorGene",
      "offset": [
        16133,
        16140
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10003": {
      "fn": "LibUnicornDNA._setHoovesMinorGene",
      "offset": [
        16163,
        16214
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 216,
      "value": "0x1E87"
    },
    "10006": {
      "fn": "LibUnicornDNA._setHoovesMinorGene",
      "offset": [
        16177,
        16181
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10007": {
      "fn": "LibUnicornDNA._setHoovesMinorGene",
      "offset": [
        16183,
        16187
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10008": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10010": {
      "op": "PUSH1",
      "value": "0x8D"
    },
    "10012": {
      "op": "SHL"
    },
    "10013": {
      "fn": "LibUnicornDNA._setHoovesMinorGene",
      "offset": [
        16163,
        16176
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "10016": {
      "fn": "LibUnicornDNA._setHoovesMinorGene",
      "jump": "i",
      "offset": [
        16163,
        16214
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10017": {
      "fn": "LibUnicornDNA._getManePart",
      "offset": [
        17895,
        18025
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10018": {
      "fn": "LibUnicornDNA._getManePart",
      "offset": [
        17954,
        17961
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10020": {
      "fn": "LibUnicornDNA._getManePart",
      "offset": [
        17980,
        18018
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 217,
      "value": "0x360"
    },
    "10023": {
      "fn": "LibUnicornDNA._getManePart",
      "offset": [
        17995,
        17999
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10024": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10026": {
      "op": "PUSH1",
      "value": "0x95"
    },
    "10028": {
      "op": "SHL"
    },
    "10029": {
      "fn": "LibUnicornDNA._getManePart",
      "offset": [
        17980,
        17994
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "10032": {
      "fn": "LibUnicornDNA._getManePart",
      "jump": "i",
      "offset": [
        17980,
        18018
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10033": {
      "fn": "LibUnicornDNA._setManePart",
      "offset": [
        17712,
        17889
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10034": {
      "fn": "LibUnicornDNA._setManePart",
      "offset": [
        17809,
        17816
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10036": {
      "fn": "LibUnicornDNA._setManePart",
      "offset": [
        17839,
        17882
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 218,
      "value": "0x1E87"
    },
    "10039": {
      "fn": "LibUnicornDNA._setManePart",
      "offset": [
        17853,
        17857
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10040": {
      "fn": "LibUnicornDNA._setManePart",
      "offset": [
        17859,
        17863
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10041": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10043": {
      "op": "PUSH1",
      "value": "0x95"
    },
    "10045": {
      "op": "SHL"
    },
    "10046": {
      "fn": "LibUnicornDNA._setManePart",
      "offset": [
        17839,
        17852
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "10049": {
      "fn": "LibUnicornDNA._setManePart",
      "jump": "i",
      "offset": [
        17839,
        17882
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10050": {
      "fn": "LibUnicornDNA._getManeMajorGene",
      "offset": [
        18225,
        18366
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10051": {
      "fn": "LibUnicornDNA._getManeMajorGene",
      "offset": [
        18289,
        18296
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10053": {
      "fn": "LibUnicornDNA._getManeMajorGene",
      "offset": [
        18315,
        18359
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 219,
      "value": "0x360"
    },
    "10056": {
      "fn": "LibUnicornDNA._getManeMajorGene",
      "offset": [
        18330,
        18334
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10057": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10059": {
      "op": "PUSH1",
      "value": "0x9D"
    },
    "10061": {
      "op": "SHL"
    },
    "10062": {
      "fn": "LibUnicornDNA._getManeMajorGene",
      "offset": [
        18315,
        18329
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "10065": {
      "fn": "LibUnicornDNA._getManeMajorGene",
      "jump": "i",
      "offset": [
        18315,
        18359
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10066": {
      "fn": "LibUnicornDNA._setManeMajorGene",
      "offset": [
        18031,
        18219
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10067": {
      "fn": "LibUnicornDNA._setManeMajorGene",
      "offset": [
        18133,
        18140
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10069": {
      "fn": "LibUnicornDNA._setManeMajorGene",
      "offset": [
        18163,
        18212
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 220,
      "value": "0x1E87"
    },
    "10072": {
      "fn": "LibUnicornDNA._setManeMajorGene",
      "offset": [
        18177,
        18181
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10073": {
      "fn": "LibUnicornDNA._setManeMajorGene",
      "offset": [
        18183,
        18187
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10074": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10076": {
      "op": "PUSH1",
      "value": "0x9D"
    },
    "10078": {
      "op": "SHL"
    },
    "10079": {
      "fn": "LibUnicornDNA._setManeMajorGene",
      "offset": [
        18163,
        18176
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "10082": {
      "fn": "LibUnicornDNA._setManeMajorGene",
      "jump": "i",
      "offset": [
        18163,
        18212
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10083": {
      "fn": "LibUnicornDNA._getManeMidGene",
      "offset": [
        18562,
        18699
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10084": {
      "fn": "LibUnicornDNA._getManeMidGene",
      "offset": [
        18624,
        18631
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10086": {
      "fn": "LibUnicornDNA._getManeMidGene",
      "offset": [
        18650,
        18692
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 221,
      "value": "0x360"
    },
    "10089": {
      "fn": "LibUnicornDNA._getManeMidGene",
      "offset": [
        18665,
        18669
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10090": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10092": {
      "op": "PUSH1",
      "value": "0xA5"
    },
    "10094": {
      "op": "SHL"
    },
    "10095": {
      "fn": "LibUnicornDNA._getManeMidGene",
      "offset": [
        18650,
        18664
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "10098": {
      "fn": "LibUnicornDNA._getManeMidGene",
      "jump": "i",
      "offset": [
        18650,
        18692
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10099": {
      "fn": "LibUnicornDNA._setManeMidGene",
      "offset": [
        18372,
        18556
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10100": {
      "fn": "LibUnicornDNA._setManeMidGene",
      "offset": [
        18472,
        18479
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10102": {
      "fn": "LibUnicornDNA._setManeMidGene",
      "offset": [
        18502,
        18549
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 222,
      "value": "0x1E87"
    },
    "10105": {
      "fn": "LibUnicornDNA._setManeMidGene",
      "offset": [
        18516,
        18520
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10106": {
      "fn": "LibUnicornDNA._setManeMidGene",
      "offset": [
        18522,
        18526
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10107": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10109": {
      "op": "PUSH1",
      "value": "0xA5"
    },
    "10111": {
      "op": "SHL"
    },
    "10112": {
      "fn": "LibUnicornDNA._setManeMidGene",
      "offset": [
        18502,
        18515
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "10115": {
      "fn": "LibUnicornDNA._setManeMidGene",
      "jump": "i",
      "offset": [
        18502,
        18549
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10116": {
      "fn": "LibUnicornDNA._getManeMinorGene",
      "offset": [
        18899,
        19040
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10117": {
      "fn": "LibUnicornDNA._getManeMinorGene",
      "offset": [
        18963,
        18970
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10119": {
      "fn": "LibUnicornDNA._getManeMinorGene",
      "offset": [
        18989,
        19033
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 223,
      "value": "0x360"
    },
    "10122": {
      "fn": "LibUnicornDNA._getManeMinorGene",
      "offset": [
        19004,
        19008
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10123": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10125": {
      "op": "PUSH1",
      "value": "0xAD"
    },
    "10127": {
      "op": "SHL"
    },
    "10128": {
      "fn": "LibUnicornDNA._getManeMinorGene",
      "offset": [
        18989,
        19003
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "10131": {
      "fn": "LibUnicornDNA._getManeMinorGene",
      "jump": "i",
      "offset": [
        18989,
        19033
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10132": {
      "fn": "LibUnicornDNA._setManeMinorGene",
      "offset": [
        18705,
        18893
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10133": {
      "fn": "LibUnicornDNA._setManeMinorGene",
      "offset": [
        18807,
        18814
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10135": {
      "fn": "LibUnicornDNA._setManeMinorGene",
      "offset": [
        18837,
        18886
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 224,
      "value": "0x1E87"
    },
    "10138": {
      "fn": "LibUnicornDNA._setManeMinorGene",
      "offset": [
        18851,
        18855
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10139": {
      "fn": "LibUnicornDNA._setManeMinorGene",
      "offset": [
        18857,
        18861
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10140": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10142": {
      "op": "PUSH1",
      "value": "0xAD"
    },
    "10144": {
      "op": "SHL"
    },
    "10145": {
      "fn": "LibUnicornDNA._setManeMinorGene",
      "offset": [
        18837,
        18850
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "10148": {
      "fn": "LibUnicornDNA._setManeMinorGene",
      "jump": "i",
      "offset": [
        18837,
        18886
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10149": {
      "fn": "LibUnicornDNA._getTailPart",
      "offset": [
        19229,
        19359
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10150": {
      "fn": "LibUnicornDNA._getTailPart",
      "offset": [
        19288,
        19295
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10152": {
      "fn": "LibUnicornDNA._getTailPart",
      "offset": [
        19314,
        19352
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 225,
      "value": "0x360"
    },
    "10155": {
      "fn": "LibUnicornDNA._getTailPart",
      "offset": [
        19329,
        19333
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10156": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10158": {
      "op": "PUSH1",
      "value": "0xB5"
    },
    "10160": {
      "op": "SHL"
    },
    "10161": {
      "fn": "LibUnicornDNA._getTailPart",
      "offset": [
        19314,
        19328
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "10164": {
      "fn": "LibUnicornDNA._getTailPart",
      "jump": "i",
      "offset": [
        19314,
        19352
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10165": {
      "fn": "LibUnicornDNA._setTailPart",
      "offset": [
        19046,
        19223
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10166": {
      "fn": "LibUnicornDNA._setTailPart",
      "offset": [
        19143,
        19150
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10168": {
      "fn": "LibUnicornDNA._setTailPart",
      "offset": [
        19173,
        19216
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 226,
      "value": "0x1E87"
    },
    "10171": {
      "fn": "LibUnicornDNA._setTailPart",
      "offset": [
        19187,
        19191
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10172": {
      "fn": "LibUnicornDNA._setTailPart",
      "offset": [
        19193,
        19197
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10173": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10175": {
      "op": "PUSH1",
      "value": "0xB5"
    },
    "10177": {
      "op": "SHL"
    },
    "10178": {
      "fn": "LibUnicornDNA._setTailPart",
      "offset": [
        19173,
        19186
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "10181": {
      "fn": "LibUnicornDNA._setTailPart",
      "jump": "i",
      "offset": [
        19173,
        19216
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10182": {
      "fn": "LibUnicornDNA._getTailMajorGene",
      "offset": [
        19559,
        19700
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10183": {
      "fn": "LibUnicornDNA._getTailMajorGene",
      "offset": [
        19623,
        19630
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10185": {
      "fn": "LibUnicornDNA._getTailMajorGene",
      "offset": [
        19649,
        19693
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 227,
      "value": "0x360"
    },
    "10188": {
      "fn": "LibUnicornDNA._getTailMajorGene",
      "offset": [
        19664,
        19668
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10189": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10191": {
      "op": "PUSH1",
      "value": "0xBD"
    },
    "10193": {
      "op": "SHL"
    },
    "10194": {
      "fn": "LibUnicornDNA._getTailMajorGene",
      "offset": [
        19649,
        19663
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "10197": {
      "fn": "LibUnicornDNA._getTailMajorGene",
      "jump": "i",
      "offset": [
        19649,
        19693
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10198": {
      "fn": "LibUnicornDNA._setTailMajorGene",
      "offset": [
        19365,
        19553
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10199": {
      "fn": "LibUnicornDNA._setTailMajorGene",
      "offset": [
        19467,
        19474
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10201": {
      "fn": "LibUnicornDNA._setTailMajorGene",
      "offset": [
        19497,
        19546
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 228,
      "value": "0x1E87"
    },
    "10204": {
      "fn": "LibUnicornDNA._setTailMajorGene",
      "offset": [
        19511,
        19515
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10205": {
      "fn": "LibUnicornDNA._setTailMajorGene",
      "offset": [
        19517,
        19521
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10206": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10208": {
      "op": "PUSH1",
      "value": "0xBD"
    },
    "10210": {
      "op": "SHL"
    },
    "10211": {
      "fn": "LibUnicornDNA._setTailMajorGene",
      "offset": [
        19497,
        19510
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "10214": {
      "fn": "LibUnicornDNA._setTailMajorGene",
      "jump": "i",
      "offset": [
        19497,
        19546
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10215": {
      "fn": "LibUnicornDNA._getTailMidGene",
      "offset": [
        19896,
        20033
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10216": {
      "fn": "LibUnicornDNA._getTailMidGene",
      "offset": [
        19958,
        19965
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10218": {
      "fn": "LibUnicornDNA._getTailMidGene",
      "offset": [
        19984,
        20026
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 229,
      "value": "0x360"
    },
    "10221": {
      "fn": "LibUnicornDNA._getTailMidGene",
      "offset": [
        19999,
        20003
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10222": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10224": {
      "op": "PUSH1",
      "value": "0xC5"
    },
    "10226": {
      "op": "SHL"
    },
    "10227": {
      "fn": "LibUnicornDNA._getTailMidGene",
      "offset": [
        19984,
        19998
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "10230": {
      "fn": "LibUnicornDNA._getTailMidGene",
      "jump": "i",
      "offset": [
        19984,
        20026
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10231": {
      "fn": "LibUnicornDNA._setTailMidGene",
      "offset": [
        19706,
        19890
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10232": {
      "fn": "LibUnicornDNA._setTailMidGene",
      "offset": [
        19806,
        19813
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10234": {
      "fn": "LibUnicornDNA._setTailMidGene",
      "offset": [
        19836,
        19883
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 230,
      "value": "0x1E87"
    },
    "10237": {
      "fn": "LibUnicornDNA._setTailMidGene",
      "offset": [
        19850,
        19854
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10238": {
      "fn": "LibUnicornDNA._setTailMidGene",
      "offset": [
        19856,
        19860
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10239": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10241": {
      "op": "PUSH1",
      "value": "0xC5"
    },
    "10243": {
      "op": "SHL"
    },
    "10244": {
      "fn": "LibUnicornDNA._setTailMidGene",
      "offset": [
        19836,
        19849
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2825"
    },
    "10247": {
      "fn": "LibUnicornDNA._setTailMidGene",
      "jump": "i",
      "offset": [
        19836,
        19883
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10248": {
      "fn": "LibUnicornDNA._getTailMinorGene",
      "offset": [
        20233,
        20374
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10249": {
      "fn": "LibUnicornDNA._getTailMinorGene",
      "offset": [
        20297,
        20304
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10251": {
      "fn": "LibUnicornDNA._getTailMinorGene",
      "offset": [
        20323,
        20367
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 231,
      "value": "0x360"
    },
    "10254": {
      "fn": "LibUnicornDNA._getTailMinorGene",
      "offset": [
        20338,
        20342
      ],
      "op": "DUP3",
      "path": "27"
    },
    "10255": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10257": {
      "op": "PUSH1",
      "value": "0xCD"
    },
    "10259": {
      "op": "SHL"
    },
    "10260": {
      "fn": "LibUnicornDNA._getTailMinorGene",
      "offset": [
        20323,
        20337
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x2887"
    },
    "10263": {
      "fn": "LibUnicornDNA._getTailMinorGene",
      "jump": "i",
      "offset": [
        20323,
        20367
      ],
      "op": "JUMP",
      "path": "27"
    },
    "10264": {
      "fn": "LibUnicornDNA._setTailMinorGene",
      "offset": [
        20039,
        20227
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "10265": {
      "fn": "LibUnicornDNA._setTailMinorGene",
      "offset": [
        20141,
        20148
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "10267": {
      "fn": "LibUnicornDNA._setTailMinorGene",
      "offset": [
        20171,
        20220
      ],
      "op": "PUSH2",
      "path": "27",
      "statement": 232,
      "value": "0x1E87"
    },
    "10270": {
      "fn": "LibUnicornDNA._setTailMinorGene",
      "offset": [
        20185,
        20189
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10271": {
      "fn": "LibUnicornDNA._setTailMinorGene",
      "offset": [
        20191,
        20195
      ],
      "op": "DUP4",
      "path": "27"
    },
    "10272": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10274": {
      "op": "PUSH1",
      "value": "0xCD"
    },
    "10276": {
      "op": "SHL"
    },
    "10277": {
      "fn": "LibBin.splice",
      "offset": [
        955,
        1351
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "10278": {
      "fn": "LibBin.splice",
      "offset": [
        1078,
        1085
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "10280": {
      "fn": "LibBin.splice",
      "offset": [
        1097,
        1111
      ],
      "op": "DUP1",
      "path": "21"
    },
    "10281": {
      "fn": "LibBin.splice",
      "offset": [
        1114,
        1136
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2831"
    },
    "10284": {
      "fn": "LibBin.splice",
      "offset": [
        1130,
        1135
      ],
      "op": "DUP4",
      "path": "21"
    },
    "10285": {
      "fn": "LibBin.splice",
      "offset": [
        1114,
        1129
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x28A0"
    },
    "10288": {
      "fn": "LibBin.splice",
      "jump": "i",
      "offset": [
        1114,
        1136
      ],
      "op": "JUMP",
      "path": "21"
    },
    "10289": {
      "fn": "LibBin.splice",
      "offset": [
        1114,
        1136
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "10290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10292": {
      "op": "NOT"
    },
    "10293": {
      "fn": "LibBin.splice",
      "offset": [
        1172,
        1183
      ],
      "op": "DUP5",
      "path": "21"
    },
    "10294": {
      "fn": "LibBin.splice",
      "offset": [
        1172,
        1183
      ],
      "op": "XOR",
      "path": "21"
    },
    "10295": {
      "fn": "LibBin.splice",
      "offset": [
        1281,
        1308
      ],
      "op": "DUP7",
      "path": "21",
      "statement": 233
    },
    "10296": {
      "fn": "LibBin.splice",
      "offset": [
        1281,
        1308
      ],
      "op": "AND",
      "path": "21"
    },
    "10297": {
      "fn": "LibBin.splice",
      "offset": [
        1314,
        1334
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "10298": {
      "fn": "LibBin.splice",
      "offset": [
        1314,
        1334
      ],
      "op": "DUP6",
      "path": "21"
    },
    "10299": {
      "fn": "LibBin.splice",
      "offset": [
        1314,
        1334
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "10300": {
      "fn": "LibBin.splice",
      "offset": [
        1314,
        1334
      ],
      "op": "SHL",
      "path": "21"
    },
    "10301": {
      "fn": "LibBin.splice",
      "offset": [
        1313,
        1343
      ],
      "op": "DUP5",
      "path": "21"
    },
    "10302": {
      "fn": "LibBin.splice",
      "offset": [
        1313,
        1343
      ],
      "op": "AND",
      "path": "21"
    },
    "10303": {
      "fn": "LibBin.splice",
      "offset": [
        1280,
        1344
      ],
      "op": "OR",
      "path": "21"
    },
    "10304": {
      "fn": "LibBin.splice",
      "offset": [
        1280,
        1344
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "10305": {
      "op": "POP"
    },
    "10306": {
      "op": "POP"
    },
    "10307": {
      "fn": "LibBin.splice",
      "offset": [
        955,
        1351
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "10308": {
      "fn": "LibBin.splice",
      "offset": [
        955,
        1351
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "10309": {
      "fn": "LibBin.splice",
      "offset": [
        955,
        1351
      ],
      "op": "POP",
      "path": "21"
    },
    "10310": {
      "fn": "LibBin.splice",
      "offset": [
        955,
        1351
      ],
      "op": "POP",
      "path": "21"
    },
    "10311": {
      "fn": "LibBin.splice",
      "offset": [
        955,
        1351
      ],
      "op": "POP",
      "path": "21"
    },
    "10312": {
      "fn": "LibBin.splice",
      "jump": "o",
      "offset": [
        955,
        1351
      ],
      "op": "JUMP",
      "path": "21"
    },
    "10313": {
      "fn": "LibBin.splice",
      "offset": [
        1416,
        1613
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "10314": {
      "fn": "LibBin.splice",
      "offset": [
        1536,
        1543
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "10316": {
      "fn": "LibBin.splice",
      "offset": [
        1562,
        1606
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 234,
      "value": "0xC63"
    },
    "10319": {
      "fn": "LibBin.splice",
      "offset": [
        1569,
        1578
      ],
      "op": "DUP5",
      "path": "21"
    },
    "10320": {
      "branch": 262,
      "fn": "LibBin.splice",
      "offset": [
        1580,
        1590
      ],
      "op": "DUP5",
      "path": "21"
    },
    "10321": {
      "fn": "LibBin.splice",
      "offset": [
        1580,
        1598
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x285B"
    },
    "10324": {
      "branch": 262,
      "fn": "LibBin.splice",
      "offset": [
        1580,
        1598
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "10325": {
      "fn": "LibBin.splice",
      "offset": [
        1597,
        1598
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "10327": {
      "fn": "LibBin.splice",
      "offset": [
        1580,
        1598
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x285E"
    },
    "10330": {
      "fn": "LibBin.splice",
      "offset": [
        1580,
        1598
      ],
      "op": "JUMP",
      "path": "21"
    },
    "10331": {
      "fn": "LibBin.splice",
      "offset": [
        1580,
        1598
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "10332": {
      "fn": "LibBin.splice",
      "offset": [
        1593,
        1594
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "10334": {
      "fn": "LibBin.splice",
      "offset": [
        1580,
        1598
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "10335": {
      "fn": "LibBin.splice",
      "offset": [
        1562,
        1606
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "10337": {
      "fn": "LibBin.splice",
      "offset": [
        1562,
        1606
      ],
      "op": "AND",
      "path": "21"
    },
    "10338": {
      "fn": "LibBin.splice",
      "offset": [
        1600,
        1605
      ],
      "op": "DUP5",
      "path": "21"
    },
    "10339": {
      "fn": "LibBin.splice",
      "offset": [
        1562,
        1568
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2825"
    },
    "10342": {
      "fn": "LibBin.splice",
      "jump": "i",
      "offset": [
        1562,
        1606
      ],
      "op": "JUMP",
      "path": "21"
    },
    "10343": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2171,
        2381
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "10344": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2242,
        2249
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "10346": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2261,
        2297
      ],
      "op": "DUP1",
      "path": "24"
    },
    "10347": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2300,
        2327
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2872"
    },
    "10350": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2300,
        2325
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAD1"
    },
    "10353": {
      "fn": "LibIdempotence._getIdempotenceState",
      "jump": "i",
      "offset": [
        2300,
        2327
      ],
      "op": "JUMP",
      "path": "24"
    },
    "10354": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2300,
        2327
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "10355": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2344,
        2374
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 235,
      "value": "0x0"
    },
    "10357": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2344,
        2374
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "10358": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2344,
        2374
      ],
      "op": "DUP5",
      "path": "24"
    },
    "10359": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2344,
        2374
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "10360": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2344,
        2364
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x19"
    },
    "10362": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2344,
        2364
      ],
      "op": "ADD",
      "path": "24"
    },
    "10363": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2344,
        2374
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "10365": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2344,
        2374
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "10366": {
      "op": "POP"
    },
    "10367": {
      "op": "POP"
    },
    "10368": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2344,
        2374
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "10370": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2344,
        2374
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "10371": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2344,
        2374
      ],
      "op": "KECCAK256",
      "path": "24"
    },
    "10372": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2344,
        2374
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "10373": {
      "fn": "LibIdempotence._getIdempotenceState",
      "offset": [
        2344,
        2374
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "10374": {
      "fn": "LibIdempotence._getIdempotenceState",
      "jump": "o",
      "offset": [
        2171,
        2381
      ],
      "op": "JUMP",
      "path": "24"
    },
    "10375": {
      "fn": "LibBin.extract",
      "offset": [
        1877,
        2090
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "10376": {
      "fn": "LibBin.extract",
      "offset": [
        1975,
        1982
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "10378": {
      "fn": "LibBin.extract",
      "offset": [
        1998,
        2012
      ],
      "op": "DUP1",
      "path": "21"
    },
    "10379": {
      "fn": "LibBin.extract",
      "offset": [
        2015,
        2037
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2893"
    },
    "10382": {
      "fn": "LibBin.extract",
      "offset": [
        2031,
        2036
      ],
      "op": "DUP4",
      "path": "21"
    },
    "10383": {
      "fn": "LibBin.extract",
      "offset": [
        2015,
        2030
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x28A0"
    },
    "10386": {
      "fn": "LibBin.extract",
      "jump": "i",
      "offset": [
        2015,
        2037
      ],
      "op": "JUMP",
      "path": "21"
    },
    "10387": {
      "fn": "LibBin.extract",
      "offset": [
        2015,
        2037
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "10388": {
      "fn": "LibBin.extract",
      "offset": [
        2055,
        2072
      ],
      "op": "SWAP3",
      "path": "21",
      "statement": 236
    },
    "10389": {
      "fn": "LibBin.extract",
      "offset": [
        2055,
        2072
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "10390": {
      "fn": "LibBin.extract",
      "offset": [
        2055,
        2072
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "10391": {
      "fn": "LibBin.extract",
      "offset": [
        2055,
        2072
      ],
      "op": "AND",
      "path": "21"
    },
    "10392": {
      "fn": "LibBin.extract",
      "offset": [
        2054,
        2083
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "10393": {
      "fn": "LibBin.extract",
      "offset": [
        2054,
        2083
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "10394": {
      "fn": "LibBin.extract",
      "offset": [
        2054,
        2083
      ],
      "op": "SHR",
      "path": "21"
    },
    "10395": {
      "fn": "LibBin.extract",
      "offset": [
        2054,
        2083
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "10396": {
      "fn": "LibBin.extract",
      "offset": [
        1877,
        2090
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "10397": {
      "op": "POP"
    },
    "10398": {
      "op": "POP"
    },
    "10399": {
      "fn": "LibBin.extract",
      "jump": "o",
      "offset": [
        1877,
        2090
      ],
      "op": "JUMP",
      "path": "21"
    },
    "10400": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        415,
        634
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "10401": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        478,
        485
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "10403": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        478,
        485
      ],
      "op": "DUP1",
      "path": "21"
    },
    "10404": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        524,
        606
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "10405": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        539,
        542
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "10407": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        531,
        542
      ],
      "op": "DUP4",
      "path": "21"
    },
    "10408": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        531,
        542
      ],
      "op": "AND",
      "path": "21"
    },
    "10409": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        524,
        606
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x360"
    },
    "10412": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        524,
        606
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "10413": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        573,
        574
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 237,
      "value": "0x1"
    },
    "10415": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        563,
        574
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "10416": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        563,
        574
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "10417": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        563,
        574
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "10418": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        563,
        574
      ],
      "op": "SHR",
      "path": "21"
    },
    "10419": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        563,
        574
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "10420": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        588,
        595
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 238,
      "value": "0x28BC"
    },
    "10423": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        588,
        595
      ],
      "op": "DUP2",
      "path": "21"
    },
    "10424": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        588,
        595
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2CB4"
    },
    "10427": {
      "fn": "LibBin._getShiftAmount",
      "jump": "i",
      "offset": [
        588,
        595
      ],
      "op": "JUMP",
      "path": "21"
    },
    "10428": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        588,
        595
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "10429": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        588,
        595
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "10430": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        588,
        595
      ],
      "op": "POP",
      "path": "21"
    },
    "10431": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        524,
        606
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x28A4"
    },
    "10434": {
      "fn": "LibBin._getShiftAmount",
      "offset": [
        524,
        606
      ],
      "op": "JUMP",
      "path": "21"
    },
    "10435": {
      "op": "JUMPDEST"
    },
    "10436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10440": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10442": {
      "op": "SHL"
    },
    "10443": {
      "op": "SUB"
    },
    "10444": {
      "op": "NOT"
    },
    "10445": {
      "op": "DUP2"
    },
    "10446": {
      "op": "AND"
    },
    "10447": {
      "op": "DUP2"
    },
    "10448": {
      "op": "EQ"
    },
    "10449": {
      "op": "PUSH2",
      "value": "0x28D9"
    },
    "10452": {
      "op": "JUMPI"
    },
    "10453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10455": {
      "op": "DUP1"
    },
    "10456": {
      "op": "REVERT"
    },
    "10457": {
      "op": "JUMPDEST"
    },
    "10458": {
      "op": "POP"
    },
    "10459": {
      "jump": "o",
      "op": "JUMP"
    },
    "10460": {
      "op": "JUMPDEST"
    },
    "10461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10465": {
      "op": "DUP3"
    },
    "10466": {
      "op": "DUP5"
    },
    "10467": {
      "op": "SUB"
    },
    "10468": {
      "op": "SLT"
    },
    "10469": {
      "op": "ISZERO"
    },
    "10470": {
      "op": "PUSH2",
      "value": "0x28EE"
    },
    "10473": {
      "op": "JUMPI"
    },
    "10474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10476": {
      "op": "DUP1"
    },
    "10477": {
      "op": "REVERT"
    },
    "10478": {
      "op": "JUMPDEST"
    },
    "10479": {
      "op": "DUP2"
    },
    "10480": {
      "op": "CALLDATALOAD"
    },
    "10481": {
      "op": "PUSH2",
      "value": "0x1E87"
    },
    "10484": {
      "op": "DUP2"
    },
    "10485": {
      "op": "PUSH2",
      "value": "0x28C3"
    },
    "10488": {
      "jump": "i",
      "op": "JUMP"
    },
    "10489": {
      "op": "JUMPDEST"
    },
    "10490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10492": {
      "op": "DUP2"
    },
    "10493": {
      "op": "MLOAD"
    },
    "10494": {
      "op": "DUP1"
    },
    "10495": {
      "op": "DUP5"
    },
    "10496": {
      "op": "MSTORE"
    },
    "10497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10499": {
      "op": "JUMPDEST"
    },
    "10500": {
      "op": "DUP2"
    },
    "10501": {
      "op": "DUP2"
    },
    "10502": {
      "op": "LT"
    },
    "10503": {
      "op": "ISZERO"
    },
    "10504": {
      "op": "PUSH2",
      "value": "0x291F"
    },
    "10507": {
      "op": "JUMPI"
    },
    "10508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10510": {
      "op": "DUP2"
    },
    "10511": {
      "op": "DUP6"
    },
    "10512": {
      "op": "ADD"
    },
    "10513": {
      "op": "DUP2"
    },
    "10514": {
      "op": "ADD"
    },
    "10515": {
      "op": "MLOAD"
    },
    "10516": {
      "op": "DUP7"
    },
    "10517": {
      "op": "DUP4"
    },
    "10518": {
      "op": "ADD"
    },
    "10519": {
      "op": "DUP3"
    },
    "10520": {
      "op": "ADD"
    },
    "10521": {
      "op": "MSTORE"
    },
    "10522": {
      "op": "ADD"
    },
    "10523": {
      "op": "PUSH2",
      "value": "0x2903"
    },
    "10526": {
      "op": "JUMP"
    },
    "10527": {
      "op": "JUMPDEST"
    },
    "10528": {
      "op": "DUP2"
    },
    "10529": {
      "op": "DUP2"
    },
    "10530": {
      "op": "GT"
    },
    "10531": {
      "op": "ISZERO"
    },
    "10532": {
      "op": "PUSH2",
      "value": "0x2931"
    },
    "10535": {
      "op": "JUMPI"
    },
    "10536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10538": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10540": {
      "op": "DUP4"
    },
    "10541": {
      "op": "DUP8"
    },
    "10542": {
      "op": "ADD"
    },
    "10543": {
      "op": "ADD"
    },
    "10544": {
      "op": "MSTORE"
    },
    "10545": {
      "op": "JUMPDEST"
    },
    "10546": {
      "op": "POP"
    },
    "10547": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10549": {
      "op": "ADD"
    },
    "10550": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10552": {
      "op": "NOT"
    },
    "10553": {
      "op": "AND"
    },
    "10554": {
      "op": "SWAP3"
    },
    "10555": {
      "op": "SWAP1"
    },
    "10556": {
      "op": "SWAP3"
    },
    "10557": {
      "op": "ADD"
    },
    "10558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10560": {
      "op": "ADD"
    },
    "10561": {
      "op": "SWAP3"
    },
    "10562": {
      "op": "SWAP2"
    },
    "10563": {
      "op": "POP"
    },
    "10564": {
      "op": "POP"
    },
    "10565": {
      "jump": "o",
      "op": "JUMP"
    },
    "10566": {
      "op": "JUMPDEST"
    },
    "10567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10569": {
      "op": "DUP2"
    },
    "10570": {
      "op": "MSTORE"
    },
    "10571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10573": {
      "op": "PUSH2",
      "value": "0x1E87"
    },
    "10576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10578": {
      "op": "DUP4"
    },
    "10579": {
      "op": "ADD"
    },
    "10580": {
      "op": "DUP5"
    },
    "10581": {
      "op": "PUSH2",
      "value": "0x28F9"
    },
    "10584": {
      "jump": "i",
      "op": "JUMP"
    },
    "10585": {
      "op": "JUMPDEST"
    },
    "10586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10590": {
      "op": "DUP3"
    },
    "10591": {
      "op": "DUP5"
    },
    "10592": {
      "op": "SUB"
    },
    "10593": {
      "op": "SLT"
    },
    "10594": {
      "op": "ISZERO"
    },
    "10595": {
      "op": "PUSH2",
      "value": "0x296B"
    },
    "10598": {
      "op": "JUMPI"
    },
    "10599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10601": {
      "op": "DUP1"
    },
    "10602": {
      "op": "REVERT"
    },
    "10603": {
      "op": "JUMPDEST"
    },
    "10604": {
      "op": "POP"
    },
    "10605": {
      "op": "CALLDATALOAD"
    },
    "10606": {
      "op": "SWAP2"
    },
    "10607": {
      "op": "SWAP1"
    },
    "10608": {
      "op": "POP"
    },
    "10609": {
      "jump": "o",
      "op": "JUMP"
    },
    "10610": {
      "op": "JUMPDEST"
    },
    "10611": {
      "op": "DUP1"
    },
    "10612": {
      "op": "CALLDATALOAD"
    },
    "10613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10619": {
      "op": "SHL"
    },
    "10620": {
      "op": "SUB"
    },
    "10621": {
      "op": "DUP2"
    },
    "10622": {
      "op": "AND"
    },
    "10623": {
      "op": "DUP2"
    },
    "10624": {
      "op": "EQ"
    },
    "10625": {
      "op": "PUSH2",
      "value": "0x2989"
    },
    "10628": {
      "op": "JUMPI"
    },
    "10629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10631": {
      "op": "DUP1"
    },
    "10632": {
      "op": "REVERT"
    },
    "10633": {
      "op": "JUMPDEST"
    },
    "10634": {
      "op": "SWAP2"
    },
    "10635": {
      "op": "SWAP1"
    },
    "10636": {
      "op": "POP"
    },
    "10637": {
      "jump": "o",
      "op": "JUMP"
    },
    "10638": {
      "op": "JUMPDEST"
    },
    "10639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10641": {
      "op": "DUP1"
    },
    "10642": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10644": {
      "op": "DUP4"
    },
    "10645": {
      "op": "DUP6"
    },
    "10646": {
      "op": "SUB"
    },
    "10647": {
      "op": "SLT"
    },
    "10648": {
      "op": "ISZERO"
    },
    "10649": {
      "op": "PUSH2",
      "value": "0x29A1"
    },
    "10652": {
      "op": "JUMPI"
    },
    "10653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10655": {
      "op": "DUP1"
    },
    "10656": {
      "op": "REVERT"
    },
    "10657": {
      "op": "JUMPDEST"
    },
    "10658": {
      "op": "PUSH2",
      "value": "0x29AA"
    },
    "10661": {
      "op": "DUP4"
    },
    "10662": {
      "op": "PUSH2",
      "value": "0x2972"
    },
    "10665": {
      "jump": "i",
      "op": "JUMP"
    },
    "10666": {
      "op": "JUMPDEST"
    },
    "10667": {
      "op": "SWAP5"
    },
    "10668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10670": {
      "op": "SWAP4"
    },
    "10671": {
      "op": "SWAP1"
    },
    "10672": {
      "op": "SWAP4"
    },
    "10673": {
      "op": "ADD"
    },
    "10674": {
      "op": "CALLDATALOAD"
    },
    "10675": {
      "op": "SWAP4"
    },
    "10676": {
      "op": "POP"
    },
    "10677": {
      "op": "POP"
    },
    "10678": {
      "op": "POP"
    },
    "10679": {
      "jump": "o",
      "op": "JUMP"
    },
    "10680": {
      "op": "JUMPDEST"
    },
    "10681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10683": {
      "op": "DUP1"
    },
    "10684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10686": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10688": {
      "op": "DUP5"
    },
    "10689": {
      "op": "DUP7"
    },
    "10690": {
      "op": "SUB"
    },
    "10691": {
      "op": "SLT"
    },
    "10692": {
      "op": "ISZERO"
    },
    "10693": {
      "op": "PUSH2",
      "value": "0x29CD"
    },
    "10696": {
      "op": "JUMPI"
    },
    "10697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10699": {
      "op": "DUP1"
    },
    "10700": {
      "op": "REVERT"
    },
    "10701": {
      "op": "JUMPDEST"
    },
    "10702": {
      "op": "PUSH2",
      "value": "0x29D6"
    },
    "10705": {
      "op": "DUP5"
    },
    "10706": {
      "op": "PUSH2",
      "value": "0x2972"
    },
    "10709": {
      "jump": "i",
      "op": "JUMP"
    },
    "10710": {
      "op": "JUMPDEST"
    },
    "10711": {
      "op": "SWAP3"
    },
    "10712": {
      "op": "POP"
    },
    "10713": {
      "op": "PUSH2",
      "value": "0x29E4"
    },
    "10716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10718": {
      "op": "DUP6"
    },
    "10719": {
      "op": "ADD"
    },
    "10720": {
      "op": "PUSH2",
      "value": "0x2972"
    },
    "10723": {
      "jump": "i",
      "op": "JUMP"
    },
    "10724": {
      "op": "JUMPDEST"
    },
    "10725": {
      "op": "SWAP2"
    },
    "10726": {
      "op": "POP"
    },
    "10727": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10729": {
      "op": "DUP5"
    },
    "10730": {
      "op": "ADD"
    },
    "10731": {
      "op": "CALLDATALOAD"
    },
    "10732": {
      "op": "SWAP1"
    },
    "10733": {
      "op": "POP"
    },
    "10734": {
      "op": "SWAP3"
    },
    "10735": {
      "op": "POP"
    },
    "10736": {
      "op": "SWAP3"
    },
    "10737": {
      "op": "POP"
    },
    "10738": {
      "op": "SWAP3"
    },
    "10739": {
      "jump": "o",
      "op": "JUMP"
    },
    "10740": {
      "op": "JUMPDEST"
    },
    "10741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10745": {
      "op": "DUP3"
    },
    "10746": {
      "op": "DUP5"
    },
    "10747": {
      "op": "SUB"
    },
    "10748": {
      "op": "SLT"
    },
    "10749": {
      "op": "ISZERO"
    },
    "10750": {
      "op": "PUSH2",
      "value": "0x2A06"
    },
    "10753": {
      "op": "JUMPI"
    },
    "10754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10756": {
      "op": "DUP1"
    },
    "10757": {
      "op": "REVERT"
    },
    "10758": {
      "op": "JUMPDEST"
    },
    "10759": {
      "op": "PUSH2",
      "value": "0x1E87"
    },
    "10762": {
      "op": "DUP3"
    },
    "10763": {
      "op": "PUSH2",
      "value": "0x2972"
    },
    "10766": {
      "jump": "i",
      "op": "JUMP"
    },
    "10767": {
      "op": "JUMPDEST"
    },
    "10768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10770": {
      "op": "DUP1"
    },
    "10771": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10773": {
      "op": "DUP4"
    },
    "10774": {
      "op": "DUP6"
    },
    "10775": {
      "op": "SUB"
    },
    "10776": {
      "op": "SLT"
    },
    "10777": {
      "op": "ISZERO"
    },
    "10778": {
      "op": "PUSH2",
      "value": "0x2A22"
    },
    "10781": {
      "op": "JUMPI"
    },
    "10782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10784": {
      "op": "DUP1"
    },
    "10785": {
      "op": "REVERT"
    },
    "10786": {
      "op": "JUMPDEST"
    },
    "10787": {
      "op": "PUSH2",
      "value": "0x2A2B"
    },
    "10790": {
      "op": "DUP4"
    },
    "10791": {
      "op": "PUSH2",
      "value": "0x2972"
    },
    "10794": {
      "jump": "i",
      "op": "JUMP"
    },
    "10795": {
      "op": "JUMPDEST"
    },
    "10796": {
      "op": "SWAP2"
    },
    "10797": {
      "op": "POP"
    },
    "10798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10800": {
      "op": "DUP4"
    },
    "10801": {
      "op": "ADD"
    },
    "10802": {
      "op": "CALLDATALOAD"
    },
    "10803": {
      "op": "DUP1"
    },
    "10804": {
      "op": "ISZERO"
    },
    "10805": {
      "op": "ISZERO"
    },
    "10806": {
      "op": "DUP2"
    },
    "10807": {
      "op": "EQ"
    },
    "10808": {
      "op": "PUSH2",
      "value": "0x2A40"
    },
    "10811": {
      "op": "JUMPI"
    },
    "10812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10814": {
      "op": "DUP1"
    },
    "10815": {
      "op": "REVERT"
    },
    "10816": {
      "op": "JUMPDEST"
    },
    "10817": {
      "op": "DUP1"
    },
    "10818": {
      "op": "SWAP2"
    },
    "10819": {
      "op": "POP"
    },
    "10820": {
      "op": "POP"
    },
    "10821": {
      "op": "SWAP3"
    },
    "10822": {
      "op": "POP"
    },
    "10823": {
      "op": "SWAP3"
    },
    "10824": {
      "op": "SWAP1"
    },
    "10825": {
      "op": "POP"
    },
    "10826": {
      "jump": "o",
      "op": "JUMP"
    },
    "10827": {
      "op": "JUMPDEST"
    },
    "10828": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10833": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10835": {
      "op": "SHL"
    },
    "10836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10838": {
      "op": "MSTORE"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "10841": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10843": {
      "op": "MSTORE"
    },
    "10844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10848": {
      "op": "REVERT"
    },
    "10849": {
      "op": "JUMPDEST"
    },
    "10850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10852": {
      "op": "DUP1"
    },
    "10853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10855": {
      "op": "DUP1"
    },
    "10856": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10858": {
      "op": "DUP6"
    },
    "10859": {
      "op": "DUP8"
    },
    "10860": {
      "op": "SUB"
    },
    "10861": {
      "op": "SLT"
    },
    "10862": {
      "op": "ISZERO"
    },
    "10863": {
      "op": "PUSH2",
      "value": "0x2A77"
    },
    "10866": {
      "op": "JUMPI"
    },
    "10867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10869": {
      "op": "DUP1"
    },
    "10870": {
      "op": "REVERT"
    },
    "10871": {
      "op": "JUMPDEST"
    },
    "10872": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "10875": {
      "op": "DUP6"
    },
    "10876": {
      "op": "PUSH2",
      "value": "0x2972"
    },
    "10879": {
      "jump": "i",
      "op": "JUMP"
    },
    "10880": {
      "op": "JUMPDEST"
    },
    "10881": {
      "op": "SWAP4"
    },
    "10882": {
      "op": "POP"
    },
    "10883": {
      "op": "PUSH2",
      "value": "0x2A8E"
    },
    "10886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10888": {
      "op": "DUP7"
    },
    "10889": {
      "op": "ADD"
    },
    "10890": {
      "op": "PUSH2",
      "value": "0x2972"
    },
    "10893": {
      "jump": "i",
      "op": "JUMP"
    },
    "10894": {
      "op": "JUMPDEST"
    },
    "10895": {
      "op": "SWAP3"
    },
    "10896": {
      "op": "POP"
    },
    "10897": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10899": {
      "op": "DUP6"
    },
    "10900": {
      "op": "ADD"
    },
    "10901": {
      "op": "CALLDATALOAD"
    },
    "10902": {
      "op": "SWAP2"
    },
    "10903": {
      "op": "POP"
    },
    "10904": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10906": {
      "op": "DUP6"
    },
    "10907": {
      "op": "ADD"
    },
    "10908": {
      "op": "CALLDATALOAD"
    },
    "10909": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10918": {
      "op": "DUP1"
    },
    "10919": {
      "op": "DUP3"
    },
    "10920": {
      "op": "GT"
    },
    "10921": {
      "op": "ISZERO"
    },
    "10922": {
      "op": "PUSH2",
      "value": "0x2AB2"
    },
    "10925": {
      "op": "JUMPI"
    },
    "10926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10928": {
      "op": "DUP1"
    },
    "10929": {
      "op": "REVERT"
    },
    "10930": {
      "op": "JUMPDEST"
    },
    "10931": {
      "op": "DUP2"
    },
    "10932": {
      "op": "DUP8"
    },
    "10933": {
      "op": "ADD"
    },
    "10934": {
      "op": "SWAP2"
    },
    "10935": {
      "op": "POP"
    },
    "10936": {
      "op": "DUP8"
    },
    "10937": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10939": {
      "op": "DUP4"
    },
    "10940": {
      "op": "ADD"
    },
    "10941": {
      "op": "SLT"
    },
    "10942": {
      "op": "PUSH2",
      "value": "0x2AC6"
    },
    "10945": {
      "op": "JUMPI"
    },
    "10946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10948": {
      "op": "DUP1"
    },
    "10949": {
      "op": "REVERT"
    },
    "10950": {
      "op": "JUMPDEST"
    },
    "10951": {
      "op": "DUP2"
    },
    "10952": {
      "op": "CALLDATALOAD"
    },
    "10953": {
      "op": "DUP2"
    },
    "10954": {
      "op": "DUP2"
    },
    "10955": {
      "op": "GT"
    },
    "10956": {
      "op": "ISZERO"
    },
    "10957": {
      "op": "PUSH2",
      "value": "0x2AD8"
    },
    "10960": {
      "op": "JUMPI"
    },
    "10961": {
      "op": "PUSH2",
      "value": "0x2AD8"
    },
    "10964": {
      "op": "PUSH2",
      "value": "0x2A4B"
    },
    "10967": {
      "jump": "i",
      "op": "JUMP"
    },
    "10968": {
      "op": "JUMPDEST"
    },
    "10969": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10971": {
      "op": "MLOAD"
    },
    "10972": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10974": {
      "op": "DUP3"
    },
    "10975": {
      "op": "ADD"
    },
    "10976": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10978": {
      "op": "NOT"
    },
    "10979": {
      "op": "SWAP1"
    },
    "10980": {
      "op": "DUP2"
    },
    "10981": {
      "op": "AND"
    },
    "10982": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "10984": {
      "op": "ADD"
    },
    "10985": {
      "op": "AND"
    },
    "10986": {
      "op": "DUP2"
    },
    "10987": {
      "op": "ADD"
    },
    "10988": {
      "op": "SWAP1"
    },
    "10989": {
      "op": "DUP4"
    },
    "10990": {
      "op": "DUP3"
    },
    "10991": {
      "op": "GT"
    },
    "10992": {
      "op": "DUP2"
    },
    "10993": {
      "op": "DUP4"
    },
    "10994": {
      "op": "LT"
    },
    "10995": {
      "op": "OR"
    },
    "10996": {
      "op": "ISZERO"
    },
    "10997": {
      "op": "PUSH2",
      "value": "0x2B00"
    },
    "11000": {
      "op": "JUMPI"
    },
    "11001": {
      "op": "PUSH2",
      "value": "0x2B00"
    },
    "11004": {
      "op": "PUSH2",
      "value": "0x2A4B"
    },
    "11007": {
      "jump": "i",
      "op": "JUMP"
    },
    "11008": {
      "op": "JUMPDEST"
    },
    "11009": {
      "op": "DUP2"
    },
    "11010": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11012": {
      "op": "MSTORE"
    },
    "11013": {
      "op": "DUP3"
    },
    "11014": {
      "op": "DUP2"
    },
    "11015": {
      "op": "MSTORE"
    },
    "11016": {
      "op": "DUP11"
    },
    "11017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11019": {
      "op": "DUP5"
    },
    "11020": {
      "op": "DUP8"
    },
    "11021": {
      "op": "ADD"
    },
    "11022": {
      "op": "ADD"
    },
    "11023": {
      "op": "GT"
    },
    "11024": {
      "op": "ISZERO"
    },
    "11025": {
      "op": "PUSH2",
      "value": "0x2B19"
    },
    "11028": {
      "op": "JUMPI"
    },
    "11029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11031": {
      "op": "DUP1"
    },
    "11032": {
      "op": "REVERT"
    },
    "11033": {
      "op": "JUMPDEST"
    },
    "11034": {
      "op": "DUP3"
    },
    "11035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11037": {
      "op": "DUP7"
    },
    "11038": {
      "op": "ADD"
    },
    "11039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11041": {
      "op": "DUP4"
    },
    "11042": {
      "op": "ADD"
    },
    "11043": {
      "op": "CALLDATACOPY"
    },
    "11044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11048": {
      "op": "DUP5"
    },
    "11049": {
      "op": "DUP4"
    },
    "11050": {
      "op": "ADD"
    },
    "11051": {
      "op": "ADD"
    },
    "11052": {
      "op": "MSTORE"
    },
    "11053": {
      "op": "DUP1"
    },
    "11054": {
      "op": "SWAP6"
    },
    "11055": {
      "op": "POP"
    },
    "11056": {
      "op": "POP"
    },
    "11057": {
      "op": "POP"
    },
    "11058": {
      "op": "POP"
    },
    "11059": {
      "op": "POP"
    },
    "11060": {
      "op": "POP"
    },
    "11061": {
      "op": "SWAP3"
    },
    "11062": {
      "op": "SWAP6"
    },
    "11063": {
      "op": "SWAP2"
    },
    "11064": {
      "op": "SWAP5"
    },
    "11065": {
      "op": "POP"
    },
    "11066": {
      "op": "SWAP3"
    },
    "11067": {
      "op": "POP"
    },
    "11068": {
      "jump": "o",
      "op": "JUMP"
    },
    "11069": {
      "op": "JUMPDEST"
    },
    "11070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11072": {
      "op": "DUP1"
    },
    "11073": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11075": {
      "op": "DUP4"
    },
    "11076": {
      "op": "DUP6"
    },
    "11077": {
      "op": "SUB"
    },
    "11078": {
      "op": "SLT"
    },
    "11079": {
      "op": "ISZERO"
    },
    "11080": {
      "op": "PUSH2",
      "value": "0x2B50"
    },
    "11083": {
      "op": "JUMPI"
    },
    "11084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11086": {
      "op": "DUP1"
    },
    "11087": {
      "op": "REVERT"
    },
    "11088": {
      "op": "JUMPDEST"
    },
    "11089": {
      "op": "PUSH2",
      "value": "0x2B59"
    },
    "11092": {
      "op": "DUP4"
    },
    "11093": {
      "op": "PUSH2",
      "value": "0x2972"
    },
    "11096": {
      "jump": "i",
      "op": "JUMP"
    },
    "11097": {
      "op": "JUMPDEST"
    },
    "11098": {
      "op": "SWAP2"
    },
    "11099": {
      "op": "POP"
    },
    "11100": {
      "op": "PUSH2",
      "value": "0x2B67"
    },
    "11103": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11105": {
      "op": "DUP5"
    },
    "11106": {
      "op": "ADD"
    },
    "11107": {
      "op": "PUSH2",
      "value": "0x2972"
    },
    "11110": {
      "jump": "i",
      "op": "JUMP"
    },
    "11111": {
      "op": "JUMPDEST"
    },
    "11112": {
      "op": "SWAP1"
    },
    "11113": {
      "op": "POP"
    },
    "11114": {
      "op": "SWAP3"
    },
    "11115": {
      "op": "POP"
    },
    "11116": {
      "op": "SWAP3"
    },
    "11117": {
      "op": "SWAP1"
    },
    "11118": {
      "op": "POP"
    },
    "11119": {
      "jump": "o",
      "op": "JUMP"
    },
    "11120": {
      "op": "JUMPDEST"
    },
    "11121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11123": {
      "op": "DUP1"
    },
    "11124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11126": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11128": {
      "op": "DUP5"
    },
    "11129": {
      "op": "DUP7"
    },
    "11130": {
      "op": "SUB"
    },
    "11131": {
      "op": "SLT"
    },
    "11132": {
      "op": "ISZERO"
    },
    "11133": {
      "op": "PUSH2",
      "value": "0x2B85"
    },
    "11136": {
      "op": "JUMPI"
    },
    "11137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11139": {
      "op": "DUP1"
    },
    "11140": {
      "op": "REVERT"
    },
    "11141": {
      "op": "JUMPDEST"
    },
    "11142": {
      "op": "DUP4"
    },
    "11143": {
      "op": "CALLDATALOAD"
    },
    "11144": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11153": {
      "op": "DUP1"
    },
    "11154": {
      "op": "DUP3"
    },
    "11155": {
      "op": "GT"
    },
    "11156": {
      "op": "ISZERO"
    },
    "11157": {
      "op": "PUSH2",
      "value": "0x2B9D"
    },
    "11160": {
      "op": "JUMPI"
    },
    "11161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11163": {
      "op": "DUP1"
    },
    "11164": {
      "op": "REVERT"
    },
    "11165": {
      "op": "JUMPDEST"
    },
    "11166": {
      "op": "DUP2"
    },
    "11167": {
      "op": "DUP7"
    },
    "11168": {
      "op": "ADD"
    },
    "11169": {
      "op": "SWAP2"
    },
    "11170": {
      "op": "POP"
    },
    "11171": {
      "op": "DUP7"
    },
    "11172": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11174": {
      "op": "DUP4"
    },
    "11175": {
      "op": "ADD"
    },
    "11176": {
      "op": "SLT"
    },
    "11177": {
      "op": "PUSH2",
      "value": "0x2BB1"
    },
    "11180": {
      "op": "JUMPI"
    },
    "11181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11183": {
      "op": "DUP1"
    },
    "11184": {
      "op": "REVERT"
    },
    "11185": {
      "op": "JUMPDEST"
    },
    "11186": {
      "op": "DUP2"
    },
    "11187": {
      "op": "CALLDATALOAD"
    },
    "11188": {
      "op": "DUP2"
    },
    "11189": {
      "op": "DUP2"
    },
    "11190": {
      "op": "GT"
    },
    "11191": {
      "op": "ISZERO"
    },
    "11192": {
      "op": "PUSH2",
      "value": "0x2BC0"
    },
    "11195": {
      "op": "JUMPI"
    },
    "11196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11198": {
      "op": "DUP1"
    },
    "11199": {
      "op": "REVERT"
    },
    "11200": {
      "op": "JUMPDEST"
    },
    "11201": {
      "op": "DUP8"
    },
    "11202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11204": {
      "op": "DUP3"
    },
    "11205": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11207": {
      "op": "SHL"
    },
    "11208": {
      "op": "DUP6"
    },
    "11209": {
      "op": "ADD"
    },
    "11210": {
      "op": "ADD"
    },
    "11211": {
      "op": "GT"
    },
    "11212": {
      "op": "ISZERO"
    },
    "11213": {
      "op": "PUSH2",
      "value": "0x2BD5"
    },
    "11216": {
      "op": "JUMPI"
    },
    "11217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11219": {
      "op": "DUP1"
    },
    "11220": {
      "op": "REVERT"
    },
    "11221": {
      "op": "JUMPDEST"
    },
    "11222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11224": {
      "op": "SWAP3"
    },
    "11225": {
      "op": "DUP4"
    },
    "11226": {
      "op": "ADD"
    },
    "11227": {
      "op": "SWAP6"
    },
    "11228": {
      "op": "POP"
    },
    "11229": {
      "op": "SWAP4"
    },
    "11230": {
      "op": "POP"
    },
    "11231": {
      "op": "POP"
    },
    "11232": {
      "op": "DUP5"
    },
    "11233": {
      "op": "ADD"
    },
    "11234": {
      "op": "CALLDATALOAD"
    },
    "11235": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11237": {
      "op": "DUP2"
    },
    "11238": {
      "op": "AND"
    },
    "11239": {
      "op": "DUP2"
    },
    "11240": {
      "op": "EQ"
    },
    "11241": {
      "op": "PUSH2",
      "value": "0x2BF1"
    },
    "11244": {
      "op": "JUMPI"
    },
    "11245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11247": {
      "op": "DUP1"
    },
    "11248": {
      "op": "REVERT"
    },
    "11249": {
      "op": "JUMPDEST"
    },
    "11250": {
      "op": "DUP1"
    },
    "11251": {
      "op": "SWAP2"
    },
    "11252": {
      "op": "POP"
    },
    "11253": {
      "op": "POP"
    },
    "11254": {
      "op": "SWAP3"
    },
    "11255": {
      "op": "POP"
    },
    "11256": {
      "op": "SWAP3"
    },
    "11257": {
      "op": "POP"
    },
    "11258": {
      "op": "SWAP3"
    },
    "11259": {
      "jump": "o",
      "op": "JUMP"
    },
    "11260": {
      "op": "JUMPDEST"
    },
    "11261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11263": {
      "op": "DUP2"
    },
    "11264": {
      "op": "DUP2"
    },
    "11265": {
      "op": "SHR"
    },
    "11266": {
      "op": "SWAP1"
    },
    "11267": {
      "op": "DUP3"
    },
    "11268": {
      "op": "AND"
    },
    "11269": {
      "op": "DUP1"
    },
    "11270": {
      "op": "PUSH2",
      "value": "0x2C10"
    },
    "11273": {
      "op": "JUMPI"
    },
    "11274": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11276": {
      "op": "DUP3"
    },
    "11277": {
      "op": "AND"
    },
    "11278": {
      "op": "SWAP2"
    },
    "11279": {
      "op": "POP"
    },
    "11280": {
      "op": "JUMPDEST"
    },
    "11281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11283": {
      "op": "DUP3"
    },
    "11284": {
      "op": "LT"
    },
    "11285": {
      "op": "DUP2"
    },
    "11286": {
      "op": "EQ"
    },
    "11287": {
      "op": "ISZERO"
    },
    "11288": {
      "op": "PUSH2",
      "value": "0x2C31"
    },
    "11291": {
      "op": "JUMPI"
    },
    "11292": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11297": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11299": {
      "op": "SHL"
    },
    "11300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11302": {
      "op": "MSTORE"
    },
    "11303": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11305": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11307": {
      "op": "MSTORE"
    },
    "11308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11312": {
      "op": "REVERT"
    },
    "11313": {
      "op": "JUMPDEST"
    },
    "11314": {
      "op": "POP"
    },
    "11315": {
      "op": "SWAP2"
    },
    "11316": {
      "op": "SWAP1"
    },
    "11317": {
      "op": "POP"
    },
    "11318": {
      "jump": "o",
      "op": "JUMP"
    },
    "11319": {
      "op": "JUMPDEST"
    },
    "11320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11322": {
      "op": "DUP1"
    },
    "11323": {
      "op": "DUP3"
    },
    "11324": {
      "op": "MSTORE"
    },
    "11325": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "11327": {
      "op": "SWAP1"
    },
    "11328": {
      "op": "DUP3"
    },
    "11329": {
      "op": "ADD"
    },
    "11330": {
      "op": "MSTORE"
    },
    "11331": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "11364": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11366": {
      "op": "DUP3"
    },
    "11367": {
      "op": "ADD"
    },
    "11368": {
      "op": "MSTORE"
    },
    "11369": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "11387": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "11389": {
      "op": "SHL"
    },
    "11390": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11392": {
      "op": "DUP3"
    },
    "11393": {
      "op": "ADD"
    },
    "11394": {
      "op": "MSTORE"
    },
    "11395": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11397": {
      "op": "ADD"
    },
    "11398": {
      "op": "SWAP1"
    },
    "11399": {
      "jump": "o",
      "op": "JUMP"
    },
    "11400": {
      "op": "JUMPDEST"
    },
    "11401": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11406": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11408": {
      "op": "SHL"
    },
    "11409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11411": {
      "op": "MSTORE"
    },
    "11412": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11414": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11416": {
      "op": "MSTORE"
    },
    "11417": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11421": {
      "op": "REVERT"
    },
    "11422": {
      "op": "JUMPDEST"
    },
    "11423": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11428": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11430": {
      "op": "SHL"
    },
    "11431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11433": {
      "op": "MSTORE"
    },
    "11434": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "11436": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11438": {
      "op": "MSTORE"
    },
    "11439": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11443": {
      "op": "REVERT"
    },
    "11444": {
      "op": "JUMPDEST"
    },
    "11445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11449": {
      "op": "NOT"
    },
    "11450": {
      "op": "DUP3"
    },
    "11451": {
      "op": "EQ"
    },
    "11452": {
      "op": "ISZERO"
    },
    "11453": {
      "op": "PUSH2",
      "value": "0x2CC8"
    },
    "11456": {
      "op": "JUMPI"
    },
    "11457": {
      "op": "PUSH2",
      "value": "0x2CC8"
    },
    "11460": {
      "op": "PUSH2",
      "value": "0x2C9E"
    },
    "11463": {
      "jump": "i",
      "op": "JUMP"
    },
    "11464": {
      "op": "JUMPDEST"
    },
    "11465": {
      "op": "POP"
    },
    "11466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11468": {
      "op": "ADD"
    },
    "11469": {
      "op": "SWAP1"
    },
    "11470": {
      "jump": "o",
      "op": "JUMP"
    },
    "11471": {
      "op": "JUMPDEST"
    },
    "11472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11474": {
      "op": "DUP3"
    },
    "11475": {
      "op": "DUP3"
    },
    "11476": {
      "op": "LT"
    },
    "11477": {
      "op": "ISZERO"
    },
    "11478": {
      "op": "PUSH2",
      "value": "0x2CE1"
    },
    "11481": {
      "op": "JUMPI"
    },
    "11482": {
      "op": "PUSH2",
      "value": "0x2CE1"
    },
    "11485": {
      "op": "PUSH2",
      "value": "0x2C9E"
    },
    "11488": {
      "jump": "i",
      "op": "JUMP"
    },
    "11489": {
      "op": "JUMPDEST"
    },
    "11490": {
      "op": "POP"
    },
    "11491": {
      "op": "SUB"
    },
    "11492": {
      "op": "SWAP1"
    },
    "11493": {
      "jump": "o",
      "op": "JUMP"
    },
    "11494": {
      "op": "JUMPDEST"
    },
    "11495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11497": {
      "op": "DUP3"
    },
    "11498": {
      "op": "NOT"
    },
    "11499": {
      "op": "DUP3"
    },
    "11500": {
      "op": "GT"
    },
    "11501": {
      "op": "ISZERO"
    },
    "11502": {
      "op": "PUSH2",
      "value": "0x2CF9"
    },
    "11505": {
      "op": "JUMPI"
    },
    "11506": {
      "op": "PUSH2",
      "value": "0x2CF9"
    },
    "11509": {
      "op": "PUSH2",
      "value": "0x2C9E"
    },
    "11512": {
      "jump": "i",
      "op": "JUMP"
    },
    "11513": {
      "op": "JUMPDEST"
    },
    "11514": {
      "op": "POP"
    },
    "11515": {
      "op": "ADD"
    },
    "11516": {
      "op": "SWAP1"
    },
    "11517": {
      "jump": "o",
      "op": "JUMP"
    },
    "11518": {
      "op": "JUMPDEST"
    },
    "11519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11521": {
      "op": "DUP1"
    },
    "11522": {
      "op": "DUP3"
    },
    "11523": {
      "op": "MSTORE"
    },
    "11524": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11526": {
      "op": "SWAP1"
    },
    "11527": {
      "op": "DUP3"
    },
    "11528": {
      "op": "ADD"
    },
    "11529": {
      "op": "MSTORE"
    },
    "11530": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "11563": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11565": {
      "op": "DUP3"
    },
    "11566": {
      "op": "ADD"
    },
    "11567": {
      "op": "MSTORE"
    },
    "11568": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "11587": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "11589": {
      "op": "SHL"
    },
    "11590": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11592": {
      "op": "DUP3"
    },
    "11593": {
      "op": "ADD"
    },
    "11594": {
      "op": "MSTORE"
    },
    "11595": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11597": {
      "op": "ADD"
    },
    "11598": {
      "op": "SWAP1"
    },
    "11599": {
      "jump": "o",
      "op": "JUMP"
    },
    "11600": {
      "op": "JUMPDEST"
    },
    "11601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11607": {
      "op": "SHL"
    },
    "11608": {
      "op": "SUB"
    },
    "11609": {
      "op": "DUP6"
    },
    "11610": {
      "op": "DUP2"
    },
    "11611": {
      "op": "AND"
    },
    "11612": {
      "op": "DUP3"
    },
    "11613": {
      "op": "MSTORE"
    },
    "11614": {
      "op": "DUP5"
    },
    "11615": {
      "op": "AND"
    },
    "11616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11618": {
      "op": "DUP3"
    },
    "11619": {
      "op": "ADD"
    },
    "11620": {
      "op": "MSTORE"
    },
    "11621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11623": {
      "op": "DUP2"
    },
    "11624": {
      "op": "ADD"
    },
    "11625": {
      "op": "DUP4"
    },
    "11626": {
      "op": "SWAP1"
    },
    "11627": {
      "op": "MSTORE"
    },
    "11628": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11630": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11632": {
      "op": "DUP3"
    },
    "11633": {
      "op": "ADD"
    },
    "11634": {
      "op": "DUP2"
    },
    "11635": {
      "op": "SWAP1"
    },
    "11636": {
      "op": "MSTORE"
    },
    "11637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11639": {
      "op": "SWAP1"
    },
    "11640": {
      "op": "PUSH2",
      "value": "0x2D83"
    },
    "11643": {
      "op": "SWAP1"
    },
    "11644": {
      "op": "DUP4"
    },
    "11645": {
      "op": "ADD"
    },
    "11646": {
      "op": "DUP5"
    },
    "11647": {
      "op": "PUSH2",
      "value": "0x28F9"
    },
    "11650": {
      "jump": "i",
      "op": "JUMP"
    },
    "11651": {
      "op": "JUMPDEST"
    },
    "11652": {
      "op": "SWAP7"
    },
    "11653": {
      "op": "SWAP6"
    },
    "11654": {
      "op": "POP"
    },
    "11655": {
      "op": "POP"
    },
    "11656": {
      "op": "POP"
    },
    "11657": {
      "op": "POP"
    },
    "11658": {
      "op": "POP"
    },
    "11659": {
      "op": "POP"
    },
    "11660": {
      "jump": "o",
      "op": "JUMP"
    },
    "11661": {
      "op": "JUMPDEST"
    },
    "11662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11666": {
      "op": "DUP3"
    },
    "11667": {
      "op": "DUP5"
    },
    "11668": {
      "op": "SUB"
    },
    "11669": {
      "op": "SLT"
    },
    "11670": {
      "op": "ISZERO"
    },
    "11671": {
      "op": "PUSH2",
      "value": "0x2D9F"
    },
    "11674": {
      "op": "JUMPI"
    },
    "11675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11677": {
      "op": "DUP1"
    },
    "11678": {
      "op": "REVERT"
    },
    "11679": {
      "op": "JUMPDEST"
    },
    "11680": {
      "op": "DUP2"
    },
    "11681": {
      "op": "MLOAD"
    },
    "11682": {
      "op": "PUSH2",
      "value": "0x1E87"
    },
    "11685": {
      "op": "DUP2"
    },
    "11686": {
      "op": "PUSH2",
      "value": "0x28C3"
    },
    "11689": {
      "jump": "i",
      "op": "JUMP"
    },
    "11690": {
      "op": "JUMPDEST"
    },
    "11691": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11696": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11698": {
      "op": "SHL"
    },
    "11699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11701": {
      "op": "MSTORE"
    },
    "11702": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "11704": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11706": {
      "op": "MSTORE"
    },
    "11707": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11711": {
      "op": "REVERT"
    },
    "11712": {
      "op": "JUMPDEST"
    },
    "11713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11715": {
      "op": "DUP3"
    },
    "11716": {
      "op": "PUSH2",
      "value": "0x2DDD"
    },
    "11719": {
      "op": "JUMPI"
    },
    "11720": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11725": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11727": {
      "op": "SHL"
    },
    "11728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11730": {
      "op": "MSTORE"
    },
    "11731": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "11733": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11735": {
      "op": "MSTORE"
    },
    "11736": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11740": {
      "op": "REVERT"
    },
    "11741": {
      "op": "JUMPDEST"
    },
    "11742": {
      "op": "POP"
    },
    "11743": {
      "op": "MOD"
    },
    "11744": {
      "op": "SWAP1"
    },
    "11745": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "9f3367850b264ba34870c814a67dfac788fcbec7",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\nimport \"@openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport \"@openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\nimport \"@openzeppelin-contracts/contracts/utils/Address.sol\";\nimport \"@openzeppelin-contracts/contracts/utils/Context.sol\";\nimport \"@openzeppelin-contracts/contracts/utils/Strings.sol\";\nimport \"@openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\";\n\nimport {LibDiamond} from \"../../libraries/LibDiamond.sol\";\nimport {LibUnicornDNA} from \"../../libraries/LibUnicornDNA.sol\";\n\ncontract ERC721WithDiamondStorage is\n    Context,\n    ERC165,\n    IERC721,\n    IERC721Metadata,\n    IERC721Enumerable\n{\n    using Address for address;\n    using Strings for uint256;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC165, IERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            interfaceId == type(IERC721Enumerable).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        require(\n            owner != address(0),\n            \"ERC721: balance query for the zero address\"\n        );\n        return LibDiamond.diamondStorage().erc721_balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (address)\n    {\n        address owner = LibDiamond.diamondStorage().erc721_owners[tokenId];\n        require(\n            owner != address(0),\n            \"ERC721: owner query for nonexistent token\"\n        );\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return LibDiamond.diamondStorage().erc721_name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return LibDiamond.diamondStorage().erc721_symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     * @dev See https://docs.opensea.io/docs/contract-level-metadata\n     */\n    function contractURI() public view returns (string memory) {\n        return LibDiamond.diamondStorage().erc721_contractURI;\n    }\n\n    /**\n     * @dev Reference URI for the NFT license file hosted on Arweave permaweb.\n     */\n    function license() public view returns (string memory) {\n        return LibDiamond.diamondStorage().erc721_licenseURI;\n    }\n\n    /**\n     * @dev Timestamp (in seconds) when the genesis egg presale activates.\n     */\n    function presaleUnlockTime() public view returns (uint256) {\n        return LibDiamond.diamondStorage().erc721_genesisEggPresaleUnlockTime;\n    }\n\n    /**\n     * @dev Timestamp (in seconds) when the genesis eggs can be hatched.\n     */\n    function presaleHatchingUnlockTime() public view returns (uint256) {\n        return LibDiamond.diamondStorage().erc721_genesisEggHatchUnlockTime;\n    }\n\n    /**\n     * @dev Maximum genesis eggs that can be minted. (note: ids starts at 1)\n     */\n    function genesisEggsMax() public view returns (uint256) {\n        return LibDiamond.ERC721_GENESIS_TOKENS;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721Metadata: URI query for nonexistent token\"\n        );\n        string memory _tokenURI = LibDiamond.diamondStorage().erc721_tokenURIs[\n            tokenId\n        ];\n        return _tokenURI;\n    }\n\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI)\n        internal\n        virtual\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721Metadata: _setTokenURI for nonexistent token\"\n        );\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n        ds.erc721_tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721WithDiamondStorage.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (address)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721: approved query for nonexistent token\"\n        );\n\n        return LibDiamond.diamondStorage().erc721_tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved)\n        public\n        virtual\n        override\n    {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        return\n            LibDiamond.diamondStorage().erc721_operatorApprovals[owner][\n                operator\n            ];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(\n            _checkOnERC721Received(from, to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return LibDiamond.diamondStorage().erc721_owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId)\n        internal\n        view\n        virtual\n        returns (bool)\n    {\n        require(\n            _exists(tokenId),\n            \"ERC721: operator query for nonexistent token\"\n        );\n        address owner = ERC721WithDiamondStorage.ownerOf(tokenId);\n        return (spender == owner ||\n            getApproved(tokenId) == spender ||\n            isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n        ds.erc721_balances[to] += 1;\n        ds.erc721_owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        require(\n            LibUnicornDNA._unicornIsTransferrable(tokenId),\n            \"ERC721WithDiamondStorage: Cannot burn a Unicorn locked in game or cooling down from an unlock\"\n        );\n        address owner = ERC721WithDiamondStorage.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n        ds.erc721_balances[owner] -= 1;\n        delete ds.erc721_owners[tokenId];\n\n        if (bytes(ds.erc721_tokenURIs[tokenId]).length != 0) {\n            delete ds.erc721_tokenURIs[tokenId];\n        }\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(\n            ERC721WithDiamondStorage.ownerOf(tokenId) == from,\n            \"ERC721: transfer of token that is not own\"\n        );\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n        require(\n            LibUnicornDNA._unicornIsTransferrable(tokenId),\n            \"ERC721WithDiamondStorage: Cannot transfer a Unicorn locked in game or cooling down from unlock\"\n        );\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n        ds.erc721_balances[from] -= 1;\n        ds.erc721_balances[to] += 1;\n        ds.erc721_owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n        ds.erc721_tokenApprovals[tokenId] = to;\n        emit Approval(ERC721WithDiamondStorage.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n        ds.erc721_operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try\n                IERC721Receiver(to).onERC721Received(\n                    _msgSender(),\n                    from,\n                    tokenId,\n                    _data\n                )\n            returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\n                        \"ERC721: transfer to non ERC721Receiver implementer\"\n                    );\n                } else {\n                    // solhint-disable-next-line no-inline-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * The following methods add support for IERC721Enumerable.\n     */\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n        return ds.erc721_allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n        require(\n            index < balanceOf(owner),\n            \"ERC721Enumerable: owner index out of bounds\"\n        );\n        return ds.erc721_ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n        require(\n            index < totalSupply(),\n            \"ERC721Enumerable: global index out of bounds\"\n        );\n        return ds.erc721_allTokens[index];\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        if (from == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (from != to) {\n            _removeTokenFromOwnerEnumeration(from, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (to != from) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n        uint256 length = balanceOf(to);\n        ds.erc721_ownedTokens[to][length] = tokenId;\n        ds.erc721_ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId)\n        private\n    {\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n        uint256 lastTokenIndex = balanceOf(from) - 1;\n        uint256 tokenIndex = ds.erc721_ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = ds.erc721_ownedTokens[from][lastTokenIndex];\n\n            ds.erc721_ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            ds.erc721_ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete ds.erc721_ownedTokensIndex[tokenId];\n        delete ds.erc721_ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n\n        ds.erc721_allTokensIndex[tokenId] = ds.erc721_allTokens.length;\n        ds.erc721_allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = ds.erc721_allTokens.length - 1;\n        uint256 tokenIndex = ds.erc721_allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = ds.erc721_allTokens[lastTokenIndex];\n\n        ds.erc721_allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        ds.erc721_allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete ds.erc721_allTokensIndex[tokenId];\n        ds.erc721_allTokens.pop();\n    }\n\n    /**\n     * Unicorn DNA methods\n     */\n    function getDNA(uint256 _tokenId) external view returns (uint256) {\n        return LibUnicornDNA._getDNA(_tokenId);\n    }\n\n    function _setDNAForGenesisToken(uint256 _tokenId, uint8 _class)\n        internal\n        returns (uint256)\n    {\n        require(\n            _tokenId <= LibDiamond.ERC721_GENESIS_TOKENS,\n            \"ERC721WithDiamondStorage: Can only set DNA for genesis tokens\"\n        );\n        uint256 dna = 0;\n        dna = LibUnicornDNA._setVersion(dna, LibUnicornDNA._targetDNAVersion());\n        dna = LibUnicornDNA._setOrigin(dna, true);\n        dna = LibUnicornDNA._setGameLocked(dna, false);\n        dna = LibUnicornDNA._setLimitedEdition(dna, false);\n        dna = LibUnicornDNA._setLifecycleStage(\n            dna,\n            LibUnicornDNA.LIFECYCLE_EGG\n        );\n        dna = LibUnicornDNA._setBreedingPoints(dna, 0);\n        dna = LibUnicornDNA._setClass(dna, _class);\n        return LibUnicornDNA._setDNA(_tokenId, dna);\n    }\n\n    function setDNAForGenesisTokens(uint256[] calldata _tokenIds, uint8 _class)\n        external\n    {\n        LibDiamond.enforceIsContractOwner();\n        for (uint256 i = 0; i < _tokenIds.length; i++) {\n            _setDNAForGenesisToken(_tokenIds[i], _class);\n        }\n    }\n}\n",
  "sourceMap": "774:23037:18:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/facets/erc721/ERC721WithDiamondStorage.sol",
  "type": "contract"
}